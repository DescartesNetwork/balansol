{"version":3,"file":"static/js/src_bootstrap_app_tsx-src_static_images_background-dark_png-src_static_images_background-ligh-d83fef.e6a90d0b.chunk.js","mappings":"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","sources":["static.app.tsx","view/navigation/index.tsx","components/numericInput/index.tsx","constant/index.ts","configs/manifest.config.ts","configs/sol.config.ts","configs/api.config.ts","configs/index.ts","helper/index.ts","view/poolDetails/management/fee.tsx","view/poolDetails/management/freezeAndThaw/pool/cardDescription.tsx","view/poolDetails/management/freezeAndThaw/pool/thawPool.tsx","view/poolDetails/management/freezeAndThaw/pool/freezePool.tsx","view/poolDetails/management/freezeAndThaw/freezeAndThawToken.tsx","view/poolDetails/management/freezeAndThaw/index.tsx","view/poolDetails/management/transferOwner.tsx","helper/utilsBN.ts","helper/oracles.ts","view/poolDetails/management/weight.tsx","view/poolDetails/management/index.tsx","view/poolDetails/poolWeights/doughnutChart.tsx","view/poolDetails/poolWeights/index.tsx","view/poolDetails/volume24h/barChart.tsx","stat/helpers/date.ts","stat/entities/trans-log.ts","stat/adapters/solana/client.ts","stat/constants/transaction.ts","stat/logic/pool/poolTranslog.ts","stat/logic/translog.ts","stat/constants/sol.ts","stat/entities/daily-report.ts","stat/logic/daily-report.ts","stat/logic/pool/pool.ts","hooks/useOracles.ts","hooks/useTVL.ts","hooks/useStat.ts","hooks/useVolume24h.ts","view/poolDetails/volume24h/index.tsx","shared/hooks/useAccountBalance.ts","view/poolDetails/components/cardPoolDetail.tsx","static/images/tvl.svg","static/images/apy.svg","static/images/my-contribution.svg","view/poolDetails/hero.tsx","components/pools/poolAvatar.tsx","components/selection/search.tsx","components/selection/mint.tsx","components/selection/mintSelection.tsx","components/selection/index.tsx","hooks/useWrapAccountBalance.ts","components/mintInput/proportion.tsx","components/mintInput/index.tsx","hooks/useLptSupply.ts","hooks/useMintBalance.ts","hooks/useWrapAndUnwrapSolIfNeed.ts","view/poolDetails/deposit/depositModal.tsx","view/poolDetails/deposit/index.tsx","view/poolDetails/tokenWillReceive.tsx","view/poolDetails/withdraw/fullSide.tsx","view/poolDetails/withdraw/singleSide.tsx","view/poolDetails/withdraw/withdrawModal.tsx","view/poolDetails/withdraw/index.tsx","view/poolDetails/header.tsx","hooks/useAppRouter.ts","components/pageNotFound.tsx","view/poolDetails/index.tsx","model/swap.controller.ts","view/swap/askInput/index.tsx","hooks/useBalansolPools.tsx","hooks/pools/useActivePools.ts","view/swap/bidInput/index.tsx","hooks/swap/useMintsCanSwap.ts","static/images/jupiter-logo.svg","components/poweredByJupiter.tsx","hooks/swap/useMintRoutes.ts","hooks/swap/useMetaRoutes.ts","hooks/swap/routeFromAsk/useBestRouteFromAsk.ts","hooks/swap/routeFromAsk/useAllRoutesFromAsk.ts","hooks/swap/routeFromBid/useBestRouteFromBid.ts","hooks/swap/routeFromBid/useAllRouteFromBid.ts","hooks/jupiter/jupiterWalletWrapper.ts","hooks/jupiter/useJupiterAggregator.ts","hooks/useSwap.tsx","hooks/swap/useSwapBalansol.ts","view/swap/swapInfo/routeAvatar.tsx","view/swap/swapInfo/spotPrice.tsx","view/swap/swapInfo/index.tsx","view/swap/reviewSwap/confirmSwap.tsx","view/swap/reviewSwap/index.tsx","static/images/sen.svg","view/swap/settingArea/poweredBySentre.tsx","view/swap/settingArea/setting.tsx","view/swap/settingArea/index.tsx","view/swap/index.tsx","view/pools/listPools/percentGroupMints.tsx","view/pools/listPools/poolAddressActions.tsx","view/pools/listPools/detailsCard.tsx","view/pools/listPools/index.tsx","hooks/pools/useFilterPools.ts","hooks/pools/useSearchedPools.ts","components/proportion/index.tsx","view/pools/newPool/modalNewPool/listTokenSetup/weightControl.tsx","view/pools/newPool/modalNewPool/listTokenSetup/tokenSetup.tsx","view/pools/newPool/modalNewPool/listTokenSetup/index.tsx","model/pools.controller.ts","view/pools/newPool/modalNewPool/addLiquidity/liquidityInfo.tsx","view/pools/newPool/modalNewPool/addLiquidity/index.tsx","view/pools/newPool/modalNewPool/confirmPoolInfo/columns.tsx","view/pools/newPool/modalNewPool/confirmPoolInfo/index.tsx","view/pools/newPool/modalNewPool/index.tsx","view/pools/newPool/index.tsx","model/searchPools.controller.ts","view/pools/search.tsx","view/pools/index.tsx","shared/ipfs.ts","hooks/launchpad/useLaunchpadData.ts","components/timeCountDown.tsx","view/launchpad/components/endIn.tsx","hooks/launchpad/useCheques.ts","hooks/launchpad/useParticipants.ts","view/launchpad/components/sold.tsx","view/launchpad/components/fundraising.tsx","components/categoryTag.tsx","view/launchpad/components/launchpadProfile.tsx","hooks/launchpad/useLaunchpad.ts","hooks/launchpad/useLaunchpadWeights.ts","hooks/launchpad/useGetTokenInPoolPrice.ts","hooks/launchpad/useGetBalanceAtTime.ts","hooks/launchpad/useGetLaunchpadWeight.ts","hooks/launchpad/useTokenPrice.ts","view/launchpad/components/price.tsx","view/launchpad/components/launchpadCard/index.tsx","view/launchpad/components/launchpadCard/completedLaunchpad.tsx","hooks/launchpad/useFilterLaunchpad.ts","view/launchpad/allLaunchpad.tsx","view/launchpad/banner/index.tsx","view/launchpad/components/listLaunchpad/index.tsx","view/launchpad/components/faq/index.tsx","view/launchpad/index.tsx","view/launchpad/initLaunchpad/projectInfo/socials.tsx","view/launchpad/initLaunchpad/projectInfo/spaceVertical.tsx","view/launchpad/initLaunchpad/avatarUploaded.tsx","view/launchpad/initLaunchpad/projectInfo/vcInfo.tsx","view/launchpad/initLaunchpad/projectInfo/index.tsx","view/launchpad/initLaunchpad/projectPhoto/index.tsx","view/launchpad/launchpadLineChart/launchpadChartInit.tsx","hooks/launchpad/actions/useCreateLaunchpad.ts","view/launchpad/initLaunchpad/configuration/index.tsx","view/launchpad/initLaunchpad/index.tsx","hooks/launchpad/usePoolData.ts","view/launchpad/launchpadDetails/buyToken/index.tsx","hooks/launchpad/actions/useBuyToken.ts","view/launchpad/launchpadLineChart/index.tsx","view/launchpad/launchpadDetails/information/launchpadInfo/transHistory/columnAmount.tsx","view/launchpad/launchpadDetails/information/launchpadInfo/transHistory/column.tsx","view/launchpad/launchpadDetails/information/launchpadInfo/transHistory/index.tsx","view/launchpad/launchpadDetails/information/launchpadInfo/index.tsx","hooks/launchpad/useAVGPrice.ts","view/launchpad/launchpadDetails/information/management/index.tsx","view/launchpad/launchpadDetails/information/projectInfo/resource.tsx","shared/hooks/useMintSupply.ts","view/launchpad/launchpadDetails/information/projectInfo/index.tsx","view/launchpad/launchpadDetails/information/index.tsx","view/launchpad/components/yourBought.tsx","view/launchpad/launchpadDetails/progress/index.tsx","view/launchpad/launchpadDetails/index.tsx","view/launchpad/yourPurchased.tsx","hooks/launchpad/useYourPurchased.ts","components/loading/index.tsx","components/watcher/watcher.tsx","components/watcher/pool.watcher.tsx","model/launchpads.controller.ts","components/watcher/launchpad.watcher.tsx","model/cheques.controller.ts","components/watcher/cheques.tsx","components/watcher/index.tsx","view/index.tsx","model/devTools.ts","model/main.controller.tsx","model/index.ts","bootstrap.app.tsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"logo\", {\n  enumerable: true,\n  get: function () {\n    return _logo.default;\n  }\n});\nexports.panels = void 0;\nObject.defineProperty(exports, \"readme\", {\n  enumerable: true,\n  get: function () {\n    return _README.default;\n  }\n});\n\nvar _panel = _interopRequireDefault(require(\"./static/images/panel1.png\"));\n\nvar _panel2 = _interopRequireDefault(require(\"./static/images/panel2.png\"));\n\nvar _panel3 = _interopRequireDefault(require(\"./static/images/panel3.png\"));\n\nvar _logo = _interopRequireDefault(require(\"./static/images/logo.png\"));\n\nvar _README = _interopRequireDefault(require(\"./static/docs/README.md\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst panels = [_panel.default, _panel2.default, _panel3.default];\nexports.panels = panels;","import { Fragment, useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useAppRoute, net } from '@sentre/senhub'\n\nimport { Col, Row, Segmented } from 'antd'\n\nimport './index.less'\n\nexport const VISIBLE_ROUTES = ['swap', 'pools', 'launchpad']\nexport const HOMEPAGE_TABS = [\n  { label: 'Swap', value: 'swap' },\n  { label: 'Pools', value: 'pools' },\n  { label: 'Launchpad', value: 'launchpad', disabled: net === 'mainnet' },\n]\n\nconst Navigation = () => {\n  const { to } = useAppRoute()\n  const { pathname } = useLocation()\n\n  const activeRoute = useMemo(() => {\n    const temp = pathname.split('/')\n    return temp[temp.length - 1]\n  }, [pathname])\n\n  const visible = useMemo(() => {\n    for (const route of VISIBLE_ROUTES) {\n      if (activeRoute === route) return true\n    }\n    return false\n  }, [activeRoute])\n\n  if (!visible) return <Fragment />\n\n  return (\n    <Row gutter={[24, 24]} style={{ paddingTop: 32 }} justify=\"center\">\n      <Col>\n        <Segmented\n          className=\"navigation\"\n          options={HOMEPAGE_TABS}\n          value={activeRoute}\n          onChange={(val) => to(`/${val.toString()}`)}\n          block\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Navigation\n","import { useCallback, CSSProperties } from 'react'\n\nimport { InputNumberProps, InputNumber } from 'antd'\n\nimport './index.less'\n\nexport enum InputStyle {\n  InputRight = 'input-right',\n  InputLeft = 'input-left',\n  InputCenter = 'input-center',\n}\n\nconst NumericInput = ({\n  max,\n  onValue = () => {},\n  inputStyle = InputStyle.InputRight,\n  styles,\n  ...props\n}: InputNumberProps & {\n  onValue?: (val: string) => void\n  inputStyle?: InputStyle\n  styles?: CSSProperties\n  max?: string | number\n}) => {\n  // Handle amount\n  const onAmount = useCallback(\n    (val: string | number | null) => {\n      if (\n        val === null ||\n        (max && parseFloat(val.toString()) > parseFloat(max.toString()))\n      )\n        return onValue('')\n\n      onValue(val.toString())\n    },\n    [max, onValue],\n  )\n\n  const formatterNumber = (val: string | number | undefined | null) => {\n    if (!val) return '0'\n    let numberFormatted = `${val}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n    const chars = numberFormatted.split('.')\n    if (chars[1]) return `${chars[0]}.${chars[1].replace(/,/g, '')}`\n    return chars[0]\n  }\n\n  const parserNumber = (val: string | undefined): number => {\n    if (!val) return 0\n    const chars = val.split('.')\n    if (chars[1])\n      return Number.parseFloat(\n        `${chars[0].replace(/\\D/g, '')}.${chars[1].replace(/\\D/g, '')}`,\n      )\n    return Number.parseFloat(`${chars[0].replace(/\\D/g, '')}`)\n  }\n\n  return (\n    <InputNumber\n      {...props}\n      stringMode\n      onChange={onAmount}\n      className={`${inputStyle}`}\n      style={{ width: '100%', fontSize: 24, ...styles }}\n      onBlur={(e) => {\n        if (!e.target.value) {\n          onAmount('0')\n        }\n      }}\n      decimalSeparator=\".\"\n      formatter={(val) => formatterNumber(val)}\n      parser={parserNumber}\n    />\n  )\n}\n\nexport default NumericInput\n","import { BN, web3 } from '@project-serum/anchor'\n\nexport enum PoolTabs {\n  Sentre = 'sentre-pools',\n  Deposited = 'deposited-pools',\n  YourPools = 'your-pools',\n  Community = 'community-pools',\n}\n\nexport enum QueryParams {\n  details = 'details',\n  address = 'poolAddress',\n  category = 'category',\n  wrapTab = 'tab',\n  tabInPools = 'tab-in-pools',\n}\n\nexport enum PoolStatus {\n  Frozen = 2,\n  Active = 1,\n}\n\nexport enum PoolCreatingStep {\n  setupToken,\n  addLiquidity,\n  confirmCreatePool,\n}\n\nexport const GENERAL_NORMALIZED_NUMBER = 10 ** 9\nexport const LPTDECIMALS = 9\nexport const GENERAL_DECIMALS = 9\nexport const PRECISION = 1000000000\n\nexport enum PriceImpact {\n  goodSwap = 0.01,\n  acceptableSwap = 0.05,\n}\n\n// Deposit types\n\nexport type PoolPairLpData = {\n  balanceIn: BN\n  balanceOut: BN\n  weightIn: number\n  decimalIn: number\n  swapFee: BN\n}\n\nexport type PoolPairData = {\n  balanceIn: BN\n  balanceOut: BN\n  weightIn: number\n  weightOut: number\n  decimalIn: number\n  decimalOut: number\n  swapFee: BN\n}\n\nexport type MintDataFromPool = {\n  reserve: BN\n  normalizedWeight: number\n  treasury: web3.PublicKey\n}\n\nexport enum FilterPools {\n  AllPools = 'all-pools',\n  DepositedPools = 'deposited-pools',\n  YourPools = 'your-pools',\n}\n\n// Launchpad\nexport const DATE_FORMAT = 'MMM DD, YYYY HH:mm'\nexport enum LaunchpadSate {\n  active = 'active',\n  upcoming = 'upcoming',\n  completed = 'completed',\n}\nexport enum InitLaunchpadStep {\n  projectInfo,\n  projectPhoto,\n  configuration,\n}\n\nexport type ProjectInfoData = {\n  projectName: string\n  description: string\n  website: string\n  github: string\n  whitepaper: string\n  vCs: { logo: string; link: string }[]\n  socials: string[]\n  coverPhoto: string\n  category: string[]\n  baseAmount: number\n}\n\nexport type Launchpad = {\n  projectInfo: ProjectInfoData\n  mint: string\n  stableMint: string\n  amount: number\n  fee: number\n  startPrice: number\n  endPrice: number\n  startTime: number\n  endTime: number\n}\n\nexport const CATEGORY = {\n  defi: [49, 100, 0],\n  gamefi: [4, 100, 253],\n  DAO: [114, 100, 7],\n  multisig: [248, 100, 176],\n  lending: [147, 100, 156],\n  portfolio: [72, 100, 5],\n  liquidity: [242, 100, 21],\n  AMM: [161, 100, 253],\n  privacy: [136, 100, 35],\n  payment: [108, 100, 145],\n  utility: [156, 100, 45],\n  NFT: [4, 100, 253],\n}\nexport const SOL_DECIMALS = 9\n","import { Env } from '@sentre/senhub'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { rpc, Net } from '@sentre/senhub'\nimport { Connection } from '@solana/web3.js'\n\n/**\n * Contructor\n */\ntype Conf = {\n  connection: Connection\n  balancerAddress: string\n  taxmanAddress: string\n  bidMintDefault: string\n  askMintDefault: string\n  launchpadAddress: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    connection: new Connection(rpc),\n    balancerAddress: '6SRa2Kc3G4wTG319G4Se6yrRWeS1A1Hj79BC3o7X9v6T',\n    taxmanAddress: 'GJLqpmDxxrV9xruee2vFvEoTho7VVQHRtuHH8nfoAE54',\n    bidMintDefault: '2z6Ci38Cx6PyL3tFrT95vbEeB3izqpoLdxxBkJk2euyj',\n    askMintDefault: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    launchpadAddress: '54e31kYfV9KSfrXBCdxn2aAuL7hY5WhvDuqGaNhFYAJe',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    connection: new Connection(rpc),\n    balancerAddress: '',\n    taxmanAddress: '',\n    bidMintDefault: '',\n    askMintDefault: '',\n    launchpadAddress: '',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    connection: new Connection(rpc),\n    balancerAddress: 'D3BBjqUdCYuP18fNvvMbPAZ8DpcRi4io2EsYHQawJDag',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n    bidMintDefault: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n    askMintDefault: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    launchpadAddress: '54e31kYfV9KSfrXBCdxn2aAuL7hY5WhvDuqGaNhFYAJe',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Env } from '@sentre/senhub'\n\n/**\n * Contructor\n */\n\ntype BasicEndpoint = { base: string } & Record<string, string>\ntype Conf = {\n  origin: string\n  version: BasicEndpoint\n}\n\nconst generator = (origin: string): Conf => ({\n  origin,\n  version: {\n    base: origin + '/public/api/v1',\n    get tvl() {\n      return this.base + '/tvl'\n    },\n    get detailTvl() {\n      return this.base + '/tvl/all/'\n    },\n  },\n})\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...generator('https://stat.sentre.io'),\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...generator('https://stat.sentre.io'),\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from '@sentre/senhub'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\nimport api from './api.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n  api: api[env],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { BN, web3 } from '@project-serum/anchor'\nimport { util } from '@sentre/senhub'\nimport { utils } from '@senswap/sen-js'\nimport { MintActionState } from '@senswap/balancer'\nimport {\n  NATIVE_MINT,\n  getAssociatedTokenAddress,\n  createAssociatedTokenAccountInstruction,\n  createCloseAccountInstruction,\n} from '@solana/spl-token-v3'\n\nimport { PriceImpact } from 'constant'\nimport axios from 'axios'\nimport configs from 'configs'\n\nexport const notifySuccess = (content: string, txId: string) => {\n  return window.notify({\n    type: 'success',\n    description: `${content} successfully. Click to view details.`,\n    onClick: () => window.open(util.explorer(txId), '_blank'),\n  })\n}\n\nexport const notifyError = (er: any) => {\n  console.log('er', er)\n  return window.notify({\n    type: 'error',\n    description: er.message,\n  })\n}\n\nexport const undecimalizeWrapper = (value: BN, decimals: number) => {\n  const valueInBigInt = BigInt(value.toString())\n\n  return utils.undecimalize(valueInBigInt, decimals)\n}\n\nexport const priceImpactColor = (priceImpact: number) => {\n  if (!priceImpact || priceImpact < PriceImpact.goodSwap) return '#14E041'\n  if (priceImpact > PriceImpact.acceptableSwap) return '#D72311'\n  return '#FA8C16'\n}\n\nexport const getMintState = (mintStates: MintActionState[], idx: number) =>\n  Object.keys(mintStates[idx])[0]\n\nexport const createATAIx = async (wallet: web3.PublicKey) => {\n  const ATA = await getAssociatedTokenAddress(NATIVE_MINT, wallet)\n\n  return createAssociatedTokenAccountInstruction(\n    wallet,\n    ATA,\n    wallet,\n    NATIVE_MINT,\n  )\n}\n\nexport const createWrapSolIx = async (\n  amount: number | bigint,\n  wallet: web3.PublicKey,\n) => {\n  const ATA = await getAssociatedTokenAddress(NATIVE_MINT, wallet)\n\n  return web3.SystemProgram.transfer({\n    fromPubkey: wallet,\n    toPubkey: ATA,\n    lamports: amount,\n  })\n}\n\nexport const createUnWrapSolIx = async (wallet: web3.PublicKey) => {\n  const ATA = await getAssociatedTokenAddress(NATIVE_MINT, wallet)\n\n  return createCloseAccountInstruction(ATA, wallet, wallet)\n}\n\nexport const fetchServerTVL = async (): Promise<\n  { address: string; tvl: number }[]\n> => {\n  const { data } = await axios.get(configs.api.version.detailTvl)\n  const balansolPoolTVL = data['balansol']\n  return balansolPoolTVL\n}\n\nexport const fileToBase64 = (\n  file: File,\n  callBack: (result: string, index: number) => void,\n  index: number,\n) => {\n  const reader = new FileReader()\n  reader.readAsDataURL(file)\n  reader.onload = async () => {\n    if (reader.result) callBack(reader.result.toString(), index)\n  }\n}\nexport const validURL = (value: string) => {\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\n    value,\n  )\n}\n\nexport const getDataWebsite = (url: string) => {\n  const socialIcons: Record<string, { iconName: string; websiteName: string }> =\n    {\n      t: { iconName: 'logo-telegram', websiteName: 'Telegram' },\n      twitter: { iconName: 'logo-twitter', websiteName: 'Twitter' },\n      facebook: { iconName: 'logo-facebook', websiteName: 'Facebook' },\n      discord: { iconName: 'logo-discord', websiteName: 'Discord' },\n      global: { iconName: 'globe', websiteName: 'Social media' },\n      medium: { iconName: 'logo-medium', websiteName: 'Medium' },\n    }\n\n  if (!validURL(url)) return socialIcons['global']\n\n  let socialName = ''\n  const domain = new URL(url)\n  const host = domain.hostname.replace('www.', '')\n  for (const char of host) {\n    if (char === '.') break\n    socialName += char\n  }\n\n  const valid = socialIcons[socialName.toLowerCase()]\n  if (!valid) socialName = 'global'\n\n  return socialIcons[socialName.toLowerCase()]\n}\n","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BN } from '@project-serum/anchor'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { Col, Row, Typography, Button, Tooltip, Space } from 'antd'\nimport NumericInput, { InputStyle } from 'components/numericInput'\n\nimport { PRECISION } from 'constant'\nimport { notifyError, notifySuccess } from 'helper'\nimport { AppState } from 'model'\nimport config from 'configs'\n\nconst {\n  sol: { taxmanAddress },\n} = config\n\nconst Content = ({\n  title,\n  percent,\n  currentPercent,\n  onChangeValue = () => {},\n  tooltipContent,\n  disabled,\n}: {\n  title: string\n  percent: number | string\n  currentPercent: number\n  onChangeValue?: (percent: string) => void\n  tooltipContent: string\n  disabled?: boolean\n}) => (\n  <Row gutter={[8, 8]}>\n    <Col span={24}>\n      <Row>\n        <Col flex=\"auto\">\n          <Space size={8}>\n            <Typography.Text style={{ textTransform: 'capitalize' }}>\n              {title} (%)\n            </Typography.Text>\n            <Tooltip title={tooltipContent}>\n              <IonIcon name=\"information-circle-outline\" />\n            </Tooltip>\n          </Space>\n        </Col>\n        <Col>\n          <Typography.Text type=\"secondary\">Current {title}:</Typography.Text>{' '}\n          <Typography.Text>{currentPercent}%</Typography.Text>\n        </Col>\n      </Row>\n    </Col>\n    <Col span={24} className=\"fee\">\n      <NumericInput\n        bordered={false}\n        inputStyle={InputStyle.InputLeft}\n        placeholder=\"0\"\n        controls={false}\n        value={percent}\n        styles={{ fontSize: 14 }}\n        onValue={onChangeValue}\n        disabled={disabled}\n      />\n    </Col>\n  </Row>\n)\n\nconst Fee = ({ poolAddress }: { poolAddress: string }) => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n\n  const currentFee = (poolData.fee.toNumber() * 100) / PRECISION\n  const currentTaxFee = (poolData.taxFee.toNumber() * 100) / PRECISION\n\n  const [fee, setFee] = useState<string>(currentFee.toString())\n  const [taxFee, setTaxFee] = useState<string>(currentTaxFee.toString())\n\n  const [loading, setLoading] = useState(false)\n\n  const updateFee = async () => {\n    setLoading(true)\n    try {\n      const { updateFee } = window.balansol\n      const { txId } = await updateFee(\n        poolAddress,\n        new BN((Number(fee) * PRECISION) / 100),\n        new BN((Number(taxFee) * PRECISION) / 100),\n      )\n      return notifySuccess('Update Fee', txId)\n    } catch (err) {\n      notifyError(err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Content\n          title=\"LP Reward Rate\"\n          percent={fee}\n          currentPercent={currentFee}\n          onChangeValue={setFee}\n          tooltipContent={\n            'The portion of trading fee a liquidity provider earns upon depositing into the pool'\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <Content\n          title=\"Platform Fee\"\n          percent={taxFee}\n          currentPercent={currentTaxFee}\n          onChangeValue={setTaxFee}\n          tooltipContent={\n            'The portion of fee your pool will pay to Balansol for maintaining the system'\n          }\n          disabled={poolData.authority.toBase58() !== taxmanAddress}\n        />\n      </Col>\n      <Col span={24}>\n        <Button ghost block size=\"large\" loading={loading} onClick={updateFee}>\n          Update\n        </Button>\n      </Col>\n    </Row>\n  )\n}\nexport default Fee\n","import { Row, Col, Typography, Badge, Space } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { PresetStatusColorType } from 'antd/lib/_util/colors'\n\nconst CardDescription = ({\n  description,\n  statusColor = 'success',\n  statusContent,\n}: {\n  description: string\n  statusColor?: PresetStatusColorType\n  statusContent: string\n}) => {\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space size={12} align=\"start\">\n          <IonIcon name=\"information-circle-outline\" />\n          <Space direction=\"vertical\" size={0}>\n            <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n              {description}\n            </Typography.Text>\n          </Space>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space size={0}>\n          <Badge status={statusColor} />\n          <Typography.Text>Current status: {statusContent}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CardDescription\n","import { useState } from 'react'\n\nimport { Button, Row, Col } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport CardDescription from './cardDescription'\n\nimport { notifyError, notifySuccess } from 'helper'\n\nconst ThawPool = ({ poolAddress }: { poolAddress: string }) => {\n  const [loading, setLoading] = useState(false)\n\n  const onThawPool = async () => {\n    setLoading(true)\n    try {\n      const { thawPool } = window.balansol\n      const { txId } = await thawPool({ poolAddress })\n      return notifySuccess('Unfreeze', txId)\n    } catch (err) {\n      notifyError(err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <CardDescription\n          statusColor=\"error\"\n          statusContent=\"Frozen\"\n          description=\"Unfreeze a pool will active all actions\"\n        />\n      </Col>\n      <Col span={24}>\n        <Button\n          ghost\n          onClick={onThawPool}\n          icon={<IonIcon name=\"sunny-outline\" />}\n          block\n          loading={loading}\n          size=\"large\"\n        >\n          Unfreeze Pool\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ThawPool\n","import { useState } from 'react'\n\nimport { Button, Row, Col } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport CardDescription from './cardDescription'\n\nimport { notifyError, notifySuccess } from 'helper'\n\nconst FreezePool = ({ poolAddress }: { poolAddress: string }) => {\n  const [loading, setLoading] = useState(false)\n\n  const onFreezePool = async () => {\n    setLoading(true)\n    try {\n      const { freezePool } = window.balansol\n      const { txId } = await freezePool({ poolAddress })\n      return notifySuccess('Freeze', txId)\n    } catch (err) {\n      notifyError(err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <CardDescription\n          statusColor=\"success\"\n          statusContent=\"Active\"\n          description=\"Freezing a pool will prevent all actions until the pool has been unfreezed.\"\n        />\n      </Col>\n      <Col span={24}>\n        <Button\n          onClick={onFreezePool}\n          icon={<IonIcon name=\"snow-outline\" />}\n          block\n          loading={loading}\n          ghost\n          size=\"large\"\n        >\n          Freeze Pool\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FreezePool\n","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { MintActionState, MintActionStates } from '@senswap/balancer'\n\nimport { Button, Row, Col, Typography, Space } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { MintAvatar, MintSymbol } from '@sen-use/app'\n\nimport { AppState } from 'model'\nimport { getMintState, notifyError, notifySuccess } from 'helper'\n\nexport const FreezeAndThawToken = ({\n  poolAddress,\n}: {\n  poolAddress: string\n}) => {\n  const { mints, actions } = useSelector(\n    (state: AppState) => state.pools[poolAddress],\n  )\n  const [mintActions, setMintActions] = useState<MintActionState[]>(\n    actions as MintActionState[],\n  )\n  const [loading, setLoading] = useState(false)\n\n  const onFreezeAndThawToken = async () => {\n    setLoading(true)\n    try {\n      const { updateActions } = window.balansol\n      const { txId } = await updateActions({\n        poolAddress,\n        actions: mintActions,\n      })\n      return notifySuccess('Freeze', txId)\n    } catch (err) {\n      notifyError(err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const onClickToken = (index: number) => {\n    const newMintActions = [...mintActions]\n    const mintState = getMintState(newMintActions, index)\n\n    switch (mintState) {\n      case 'paused':\n        newMintActions[index] = MintActionStates['Active']\n        break\n      case 'active':\n        newMintActions[index] = MintActionStates['Paused']\n        break\n      default:\n        break\n    }\n    setMintActions(newMintActions)\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space size={12} align=\"start\">\n          <IonIcon name=\"alert-circle-outline\" />\n          <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n            Freezing tokens will prevent all actions until the tokens has been\n            unfreezed.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          {mints.map((mint, idx) => {\n            const mintState = getMintState(mintActions, idx)\n            return (\n              <Col span={12}>\n                <Button block onClick={() => onClickToken(idx)} size=\"large\">\n                  <Space size={8} className=\"individual-token\">\n                    <MintAvatar mintAddress={mint.toBase58()} />\n                    <Typography.Text\n                      ellipsis\n                      style={{ fontWeight: 400, fontSize: 14 }}\n                    >\n                      <MintSymbol mintAddress={mint.toBase58()} />\n                    </Typography.Text>\n                  </Space>\n                  {mintState === 'paused' && (\n                    <Space className=\"disable-mask\" align=\"center\">\n                      <IonIcon\n                        name=\"snow-outline\"\n                        style={{ color: '#F3F3F5' }}\n                      />\n                    </Space>\n                  )}\n                </Button>\n              </Col>\n            )\n          })}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Button\n          block\n          ghost\n          onClick={onFreezeAndThawToken}\n          size=\"large\"\n          disabled={JSON.stringify(actions) === JSON.stringify(mintActions)}\n          loading={loading}\n        >\n          Confirm\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n","import { useSelector } from 'react-redux'\n\nimport { Tabs } from 'antd'\nimport ThawPool from './pool/thawPool'\nimport FreezePool from './pool/freezePool'\nimport { FreezeAndThawToken } from './freezeAndThawToken'\n\nimport { AppState } from 'model'\n\nconst FreezeAndThaw = ({ poolAddress }: { poolAddress: string }) => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const state = poolData.state\n\n  return (\n    <Tabs className=\"freeze-thaw\" type=\"card\">\n      <Tabs.TabPane key=\"pool\" tab=\"Pool\">\n        {state['initialized'] && <FreezePool poolAddress={poolAddress} />}\n        {state['frozen'] && <ThawPool poolAddress={poolAddress} />}\n      </Tabs.TabPane>\n      <Tabs.TabPane\n        key=\"individual_token\"\n        tab=\"Individual token\"\n        disabled={!!state['frozen']}\n      >\n        <FreezeAndThawToken poolAddress={poolAddress} />\n      </Tabs.TabPane>\n    </Tabs>\n  )\n}\n\nexport default FreezeAndThaw\n","import { account } from '@senswap/sen-js'\nimport { ChangeEvent, useState } from 'react'\n\nimport { Button, Col, Input, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { notifyError, notifySuccess } from 'helper'\n\nconst TransferOwner = ({ poolAddress }: { poolAddress: string }) => {\n  const [newOwner, setNewOwner] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const transferOwner = async () => {\n    setLoading(true)\n    if (!account.isAddress(newOwner)) return\n    try {\n      const { transferOwnership } = window.balansol\n      const { txId } = await transferOwnership({ poolAddress, newOwner })\n      return notifySuccess('Update weights', txId)\n    } catch (err) {\n      notifyError(err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space size={12} align=\"center\">\n          <IonIcon style={{ fontSize: 16 }} name=\"information-circle-outline\" />\n          <Typography.Text type=\"secondary\">\n            Your current account will lose the pool control when you transfer\n            ownership.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Typography.Text>Transfer to Owner</Typography.Text>\n      </Col>\n      <Col span={24} className=\"transfer-owner\">\n        <Input\n          className=\"transfer-owner-input\"\n          value={newOwner}\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setNewOwner(e.target.value)\n          }\n          placeholder=\"E.g. AgTMC...\"\n        />\n      </Col>\n      <Col span={24}>\n        <Button\n          ghost\n          size=\"large\"\n          onClick={transferOwner}\n          loading={loading}\n          disabled={!newOwner}\n          block\n        >\n          Transfer\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default TransferOwner\n","import { BN } from '@project-serum/anchor'\n\nexport const utilsBN = {\n  /**\n   * Add decimals to the number\n   * @param num\n   * @param decimals\n   * @returns\n   */\n  decimalize: (num: string | number, decimals: number): BN => {\n    if (!num) return new BN(0)\n    if (decimals < 0 || decimals % 1 !== 0)\n      throw new Error('decimals must be an integer greater than zero')\n    const n = num.toString()\n    if (!decimals) return new BN(n)\n    const m = n.split('.')\n    if (m.length > 2) throw new Error('Invalid number')\n    if (m.length === 1) return new BN(num).mul(new BN(10 ** decimals))\n    if (m[1].length >= decimals)\n      return new BN(m[0] + m[1].substring(0, decimals))\n    else return new BN(m[0] + m[1] + '0'.repeat(decimals - m[1].length))\n  },\n\n  /**\n   * Remove decimals from the number\n   * @param numBN\n   * @param decimals\n   * @returns\n   */\n  undecimalize: (numBN: BN, decimals: number): string => {\n    if (decimals < 0 || decimals % 1 !== 0)\n      throw new Error('decimals must be an integer greater than zero')\n    if (!numBN) return '0'\n    const n = numBN.toString()\n    if (!decimals) return n\n\n    let integer =\n      n.length > decimals ? n.substring(0, n.length - decimals) : '0'\n    let fraction: string | string[] = ''\n    if (n.length > decimals)\n      fraction = n.substring(n.length - decimals, n.length)\n    else if (n.length === decimals) fraction = n\n    else fraction = '0'.repeat(decimals - n.length) + n\n\n    fraction = fraction.split('')\n    while (fraction[fraction.length - 1] === '0') fraction.pop()\n    fraction = fraction.join('')\n    if (!fraction) return integer\n    return integer + '.' + fraction\n  },\n\n  toNumber: (numBN: BN): number => {\n    return Number(utilsBN.undecimalize(numBN, 0))\n  },\n}\n","import { Address, BN, web3 } from '@project-serum/anchor'\nimport { PoolData } from '@senswap/balancer'\nimport util from '@senswap/sen-js/dist/utils'\n\nimport {\n  GENERAL_DECIMALS,\n  GENERAL_NORMALIZED_NUMBER,\n  LPTDECIMALS,\n  PoolPairData,\n  PoolPairLpData,\n} from 'constant'\nimport { PRECISION } from 'constant/index'\nimport { RouteInfo } from 'hooks/useSwap'\nimport { utilsBN } from './utilsBN'\n\nexport type routeFullInfo = RouteInfo & { poolData: PoolData }\n\nexport const findMintIndex = (poolData: PoolData, mint: Address): number => {\n  return poolData.mints\n    .map((e) => e.toBase58())\n    .indexOf(new web3.PublicKey(mint).toBase58())\n}\n\nexport const getMintInfo = (poolData: PoolData, mint: Address) => {\n  const mintIdx = findMintIndex(poolData, mint)\n  if (mintIdx === -1) throw new Error('Can not find mint in pool')\n\n  const normalizedWeight = calcNormalizedWeight(\n    poolData.weights,\n    poolData.weights[mintIdx],\n  )\n  return {\n    reserve: poolData.reserves[mintIdx],\n    normalizedWeight: normalizedWeight,\n    treasury: poolData.treasuries[mintIdx],\n  }\n}\n\nconst complement = (value: number) => {\n  return value < 1 ? 1 - value : 0\n}\n\nexport const calcLpOutGivenIn = (\n  amountIn: number,\n  balanceIn: number,\n  totalSupply: number,\n) => {\n  return (amountIn / balanceIn - 1) * totalSupply - totalSupply\n}\n\nexport const calcOptimizedDepositedAmount = (\n  baseTokenInfo: any,\n  calculatedTokenInfo: any,\n  baseTokenAmount: string,\n  baseTokenWeight: string,\n  calculatedTokenWeight: string,\n) => {\n  return (\n    (baseTokenInfo?.price *\n      Number(baseTokenAmount) *\n      Number(calculatedTokenWeight)) /\n    (calculatedTokenInfo?.price * Number(baseTokenWeight))\n  )\n}\n\nexport const calcOutGivenInSwap = (\n  amountIn: BN,\n  balanceOut: BN,\n  balanceIn: BN,\n  weightOut: number,\n  weightIn: number,\n  swapFee: BN,\n): BN => {\n  const numBalanceOut = utilsBN.toNumber(balanceOut)\n  const numBalanceIn = utilsBN.toNumber(balanceIn)\n  const numAmountIn = utilsBN.toNumber(amountIn)\n  const numSwapFee = utilsBN.toNumber(swapFee) / GENERAL_NORMALIZED_NUMBER\n  const ratioBeforeAfterBalance = numBalanceIn / (numBalanceIn + numAmountIn)\n\n  const ratioInOutWeight = weightIn / weightOut\n  return new BN(\n    numBalanceOut *\n      (1 - ratioBeforeAfterBalance ** ratioInOutWeight) *\n      (1 - numSwapFee),\n  )\n}\n\nexport const calcInGivenOutSwap = (\n  amountOut: BN,\n  balanceOut: BN,\n  balanceIn: BN,\n  weightOut: number,\n  weightIn: number,\n  swapFee: BN,\n): BN => {\n  const numBalanceOut = utilsBN.toNumber(balanceOut)\n  const numBalanceIn = utilsBN.toNumber(balanceIn)\n  const numSwapFee = utilsBN.toNumber(swapFee) / GENERAL_NORMALIZED_NUMBER\n  const numAmountOut = utilsBN.toNumber(amountOut) / (1 - numSwapFee)\n  const ratioBeforeAfterBalance = numBalanceOut / (numBalanceOut - numAmountOut)\n\n  const ratioInOutWeight = weightOut / weightIn\n\n  return new BN(\n    numBalanceIn * (ratioBeforeAfterBalance ** ratioInOutWeight - 1),\n  )\n}\n\nexport const calcNormalizedWeight = (\n  weights: BN[],\n  weightToken: BN,\n): number => {\n  const numWeightsIn = weights.map((value) =>\n    Number(util.undecimalize(BigInt(value.toString()), GENERAL_DECIMALS)),\n  )\n  const numWeightToken = Number(\n    util.undecimalize(BigInt(weightToken.toString()), GENERAL_DECIMALS),\n  )\n  const weightSum = numWeightsIn.reduce((pre, curr) => pre + curr, 0)\n  return numWeightToken / weightSum\n}\n\nexport const calcSpotPrice = (\n  balanceIn: BN,\n  weightIn: number,\n  decimalIn: number,\n  balanceOut: BN,\n  weightOut: number,\n  decimalOut: number,\n): number => {\n  const numBalanceIn = Number(\n    util.undecimalize(BigInt(balanceIn.toString()), decimalIn),\n  )\n\n  const numBalanceOut = Number(\n    util.undecimalize(BigInt(balanceOut.toString()), decimalOut),\n  )\n\n  return numBalanceIn / weightIn / (numBalanceOut / weightOut)\n}\n\nexport const spotPriceAfterSwapTokenInForExactBPTOut = (\n  amount: BN,\n  poolPairData: PoolPairLpData,\n) => {\n  const Bo = Number(\n    util.undecimalize(BigInt(poolPairData.balanceOut.toString()), LPTDECIMALS),\n  )\n  const Ao = Number(util.undecimalize(BigInt(amount.toString()), LPTDECIMALS))\n  const wi = poolPairData.weightIn\n  const Bi = Number(\n    util.undecimalize(\n      BigInt(poolPairData.balanceIn.toString()),\n      poolPairData.decimalIn,\n    ),\n  )\n  const f = Number(\n    util.undecimalize(\n      BigInt(poolPairData.swapFee.toString()),\n      GENERAL_DECIMALS,\n    ),\n  )\n\n  return (\n    (Math.pow((Ao + Bo) / Bo, 1 / wi) * Bi) /\n    ((Ao + Bo) * (1 + f * (-1 + wi)) * wi)\n  )\n}\n\nfunction calcSpotPriceExactInSwap(amount: BN, poolPairData: PoolPairData) {\n  const {\n    balanceIn,\n    decimalIn,\n    balanceOut,\n    decimalOut,\n    weightIn,\n    weightOut,\n    swapFee,\n  } = poolPairData\n  const Bi = Number(util.undecimalize(BigInt(balanceIn.toString()), decimalIn))\n  const Bo = Number(\n    util.undecimalize(BigInt(balanceOut.toString()), decimalOut),\n  )\n  const wi = weightIn\n  const wo = weightOut\n  const Ai = Number(util.undecimalize(BigInt(amount.toString()), decimalIn))\n  const f = Number(\n    util.undecimalize(BigInt(swapFee.toString()), GENERAL_DECIMALS),\n  )\n  return -(\n    (Bi * wo) /\n    (Bo * (-1 + f) * (Bi / (Ai + Bi - Ai * f)) ** ((wi + wo) / wo) * wi)\n  )\n}\n\nexport const calcPriceImpactSwap = (\n  bidAmount: BN,\n  poolPairData: PoolPairData,\n) => {\n  const currentSpotPrice = calcSpotPriceExactInSwap(new BN(0), poolPairData)\n  const spotPriceAfterSwap = calcSpotPriceExactInSwap(bidAmount, poolPairData)\n  if (spotPriceAfterSwap < currentSpotPrice) return 0\n  const impactPrice = 1 - currentSpotPrice / spotPriceAfterSwap\n  return impactPrice\n}\n\nexport const calcLpForTokensZeroPriceImpact = (\n  tokenAmountIns: BN[],\n  balanceIns: BN[],\n  weightIns: BN[],\n  totalSupply: BN,\n  decimalIns: number[],\n) => {\n  const numTokenAmountIns = tokenAmountIns.map((value, idx) => {\n    return Number(util.undecimalize(BigInt(value.toString()), decimalIns[idx]))\n  })\n\n  const amountLpOut = numTokenAmountIns.reduce((totalBptOut, amountIn, i) => {\n    // Calculate amount of BPT gained per token in\n    const nomalizedWeight = calcNormalizedWeight(weightIns, weightIns[i])\n    const poolPairData: PoolPairLpData = {\n      balanceIn: balanceIns[i],\n      balanceOut: totalSupply,\n      weightIn: nomalizedWeight,\n      decimalIn: decimalIns[i],\n      swapFee: new BN(0),\n    }\n    const LpPrice = spotPriceAfterSwapTokenInForExactBPTOut(\n      new BN(0),\n      poolPairData,\n    )\n    // Multiply by amountIn to get contribution to total bpt out\n    const LpOut = amountIn / LpPrice\n    return totalBptOut + LpOut\n  }, 0)\n  return amountLpOut\n}\n\nexport const calcBptOutGivenExactTokensIn = (\n  tokenAmountIns: BN[],\n  balanceIns: BN[],\n  weightIns: BN[],\n  totalSupply: BN,\n  decimalIns: number[],\n  swapFee: BN,\n) => {\n  const fee = Number(\n    util.undecimalize(BigInt(swapFee.toString()), GENERAL_DECIMALS),\n  )\n  const numTotalSupply = Number(\n    util.undecimalize(BigInt(totalSupply.toString()), LPTDECIMALS),\n  )\n  const numBalanceIns = balanceIns.map((value, idx) =>\n    Number(util.undecimalize(BigInt(value.toString()), decimalIns[idx])),\n  )\n  const numAmountIns = tokenAmountIns.map((value, idx) =>\n    Number(util.undecimalize(BigInt(value.toString()), decimalIns[idx])),\n  )\n  const balanceRatiosWithFee = new Array(tokenAmountIns.length)\n\n  let invariantRatioWithFees = 0\n  for (let i = 0; i < tokenAmountIns.length; i++) {\n    const nomalizedWeight = calcNormalizedWeight(weightIns, weightIns[i])\n\n    balanceRatiosWithFee[i] =\n      (numBalanceIns[i] + numAmountIns[i]) / numBalanceIns[i]\n\n    invariantRatioWithFees += balanceRatiosWithFee[i] * nomalizedWeight\n  }\n\n  let invariantRatio = 1\n\n  for (let i = 0; i < tokenAmountIns.length; i++) {\n    const nomalizedWeight = calcNormalizedWeight(weightIns, weightIns[i])\n    let amountInWithoutFee = numAmountIns[i]\n    if (balanceRatiosWithFee[i] > invariantRatioWithFees) {\n      let nonTaxableAmount = numBalanceIns[i] * (invariantRatioWithFees - 1)\n      let taxableAmount = numAmountIns[i] - nonTaxableAmount\n      amountInWithoutFee = nonTaxableAmount + taxableAmount * (1 - fee)\n    }\n    let balanceRatio =\n      (numBalanceIns[i] + amountInWithoutFee) / numBalanceIns[i]\n    invariantRatio = invariantRatio * balanceRatio ** nomalizedWeight\n  }\n  if (invariantRatio > 1) return numTotalSupply * (invariantRatio - 1)\n  return 0\n}\n\nexport const calcMintReceiveRemoveSingleSide = (\n  lptAmount: BN,\n  lptSupply: BN,\n  normalizeWeight: number,\n  balance: BN,\n  decimalOut: number,\n  fee: BN,\n): BN => {\n  if (lptAmount.gt(lptSupply)) return new BN(0)\n  const numLptAmount = Number(\n    util.undecimalize(BigInt(lptAmount.toString()), LPTDECIMALS),\n  )\n  const numLptSupply = Number(\n    util.undecimalize(BigInt(lptSupply.toString()), LPTDECIMALS),\n  )\n  const numFee = Number(\n    util.undecimalize(BigInt(fee.toString()), GENERAL_DECIMALS),\n  )\n  const numBalance = balance.toNumber()\n\n  let tbl = (numLptSupply - numLptAmount) / numLptSupply\n  let amount_out = numBalance * (1 - Math.pow(tbl, 1 / normalizeWeight))\n  let fee_rate = numFee / PRECISION\n  let feeWithdraw = amount_out * (1 - (normalizeWeight * (fee_rate - 1) + 1))\n\n  return new BN(amount_out - feeWithdraw)\n}\n\nexport const calcMintReceivesRemoveFullSide = (\n  lptAmount: BN,\n  lptSupply: BN,\n  reserves: BN[],\n) => {\n  const numLptAmount = lptAmount.toNumber()\n  const numLptSupply = lptSupply.toNumber()\n\n  let lpt_rate = numLptAmount / numLptSupply\n  let amounts_out: BN[] = reserves.map((reserve) => {\n    return new BN(lpt_rate * Number(reserve))\n  })\n  return amounts_out\n}\n\nexport const calcDepositPriceImpact = (\n  amountIns: BN[],\n  balanceIns: BN[],\n  weightIns: BN[],\n  totalSupply: BN,\n  decimalIns: number[],\n  swapFee: BN,\n) => {\n  if (decimalIns.length === 0) return { lpOut: 0, impactPrice: 0 }\n\n  const lpOut = Number(\n    calcBptOutGivenExactTokensIn(\n      amountIns,\n      balanceIns,\n      weightIns,\n      totalSupply,\n      decimalIns,\n      swapFee,\n    ).toFixed(9),\n  )\n\n  const lpOutZeroPriceImpact = Number(\n    calcLpForTokensZeroPriceImpact(\n      amountIns,\n      balanceIns,\n      weightIns,\n      totalSupply,\n      decimalIns,\n    ).toFixed(9),\n  )\n\n  const impactPrice = 1 - lpOut / lpOutZeroPriceImpact\n\n  return { lpOut, impactPrice: impactPrice || 0 }\n}\n\nconst calcTokenOutGivenExactLpIn = (\n  balance: BN,\n  normalizedWeight: number,\n  lpAmountIn: BN,\n  lpTotalSupply: BN,\n  decimal: number,\n  swapFee: BN,\n) => {\n  const numBalance = Number(\n    util.undecimalize(BigInt(balance.toString()), decimal),\n  )\n  const numAmountIn = Number(\n    util.undecimalize(BigInt(lpAmountIn.toString()), LPTDECIMALS),\n  )\n  const numTotalSupply = Number(\n    util.undecimalize(BigInt(lpTotalSupply.toString()), LPTDECIMALS),\n  )\n\n  const numSwapFee = Number(\n    util.undecimalize(BigInt(swapFee.toString()), GENERAL_DECIMALS),\n  )\n\n  const invariantRatio = (numTotalSupply - numAmountIn) / numTotalSupply\n  // Calculate by how much the token balance has to increase to cause `invariantRatio`\n  const balanceRatio = invariantRatio ** (1 / normalizedWeight)\n  // Because of rounding up, `balanceRatio` can be greater than one, so we use its complement\n  const amountOutWithoutFee = numBalance * complement(balanceRatio)\n  // We can now compute how much excess balance is being withdrawn as a result of the virtual swaps,\n  // which result in swap fees\n  const taxablePercentage = complement(normalizedWeight)\n  // Swap fees are typically charged on 'tokenIn', but there is no 'tokenIn' here, so we apply it\n  // to 'tokenOut' - this results in slightly larger price impact (fees are rounded up)\n  const taxableAmount = amountOutWithoutFee * taxablePercentage\n  const nonTaxableAmount = amountOutWithoutFee - taxableAmount\n  return nonTaxableAmount + taxableAmount * complement(numSwapFee)\n}\n\nexport const calcWithdrawPriceImpact = (\n  lpAmount: BN,\n  indexTokenOut: number,\n  balanceOuts: BN[],\n  weightOuts: BN[],\n  totalSupply: BN,\n  decimalOuts: number[],\n  swapFee: BN,\n) => {\n  if (decimalOuts.length === 0 || lpAmount.isZero())\n    return { lpOut: 0, impactPrice: 0 }\n  let tokenAmountOut = new BN(0)\n  const tokenAmounts = balanceOuts.map((_, idx) => {\n    if (indexTokenOut !== idx) {\n      return new BN(0)\n    }\n    const normalizedWeight = calcNormalizedWeight(weightOuts, weightOuts[idx])\n    const tokenAmount = calcTokenOutGivenExactLpIn(\n      balanceOuts[idx],\n      normalizedWeight,\n      lpAmount,\n      totalSupply,\n      decimalOuts[idx],\n      swapFee,\n    )\n\n    tokenAmountOut = new BN(\n      util.decimalize(tokenAmount, decimalOuts[idx]).toString(),\n    )\n    return tokenAmountOut\n  })\n\n  const lpOutZeroPriceImpact = Number(\n    calcLpForTokensZeroPriceImpact(\n      tokenAmounts,\n      balanceOuts,\n      weightOuts,\n      totalSupply,\n      decimalOuts,\n    ).toFixed(9),\n  )\n\n  const numLpAmount = Number(\n    util.undecimalize(BigInt(lpAmount.toString()), LPTDECIMALS),\n  )\n  if (numLpAmount < lpOutZeroPriceImpact)\n    return { tokenAmountOut, impactPrice: 0 }\n  const impactPrice = numLpAmount / lpOutZeroPriceImpact - 1\n\n  return { tokenAmountOut, impactPrice }\n}\n\nexport const calcPriceImpact = (route: routeFullInfo[]) => {\n  let p = 1\n  route.forEach((elmInfo) => {\n    const s = elmInfo.priceImpact\n    p = p * (1 - s)\n  })\n  return 1 - p\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BN } from '@project-serum/anchor'\nimport { useTheme, util } from '@sentre/senhub'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { MintAvatar, MintSymbol } from '@sen-use/app'\nimport NumericInput from 'components/numericInput'\n\nimport { calcNormalizedWeight } from 'helper/oracles'\nimport { AppState } from 'model'\nimport { TokenInfo } from 'view/pools/newPool'\nimport { notifyError, notifySuccess } from 'helper'\nimport { GENERAL_NORMALIZED_NUMBER } from 'constant'\n\nconst TOTAL_PERCENT = 100\n\nconst Token = ({ mintAddress }: { mintAddress: string }) => (\n  <Space>\n    <MintAvatar mintAddress={mintAddress} />\n    <MintSymbol mintAddress={mintAddress} />\n  </Space>\n)\n\nconst Weight = ({ poolAddress }: { poolAddress: string }) => {\n  const [tokensInfo, setTokensInfo] = useState<Record<string, TokenInfo>>()\n  const [loading, setLoading] = useState(false)\n  const { mints, weights } = useSelector(\n    (state: AppState) => state.pools[poolAddress],\n  )\n  const theme = useTheme()\n\n  const fetchWeights = useCallback(() => {\n    const nextWeights: Record<string, TokenInfo> = {}\n    mints.forEach((mint, index) => {\n      const normalizedWeight = calcNormalizedWeight(weights, weights[index])\n      const addressToken = mint.toBase58()\n\n      nextWeights[addressToken] = {\n        addressToken,\n        weight: util.numeric(normalizedWeight * 100).format('0,0.[00]'),\n        isLocked: false,\n      }\n    })\n    setTokensInfo(nextWeights)\n  }, [mints, weights])\n\n  const onWeightChange = (val: string, mint: string) => {\n    const newTokensInfo = { ...tokensInfo }\n    newTokensInfo[mint] = { ...newTokensInfo[mint], weight: val }\n    let remainingPercent = TOTAL_PERCENT - Number(val)\n\n    const amountTokenNotLock = Object.values(newTokensInfo).filter(\n      (token) => !token.isLocked && token.addressToken !== mint,\n    ).length\n    let firstTime = true\n\n    for (const mintAddress of mints) {\n      const { isLocked, weight, addressToken } =\n        newTokensInfo[mintAddress.toBase58()]\n\n      if (mint === addressToken) continue\n      if (isLocked) {\n        remainingPercent -= Number(weight)\n        continue\n      }\n\n      const nextWeight = (remainingPercent / amountTokenNotLock).toFixed(2)\n\n      if (firstTime) {\n        const newWeight =\n          remainingPercent - Number(nextWeight) * (amountTokenNotLock - 1)\n\n        newTokensInfo[addressToken] = {\n          ...newTokensInfo[addressToken],\n          weight: util.numeric(newWeight).format('0,0.[00]'),\n        }\n        firstTime = false\n        continue\n      }\n\n      newTokensInfo[addressToken] = {\n        ...newTokensInfo[addressToken],\n        weight: util.numeric(nextWeight).format('0,0.[00]'),\n      }\n    }\n\n    return setTokensInfo(newTokensInfo)\n  }\n\n  const lockWeight = (mint: string) => {\n    const newWeights = { ...tokensInfo }\n    const { isLocked } = newWeights[mint]\n    newWeights[mint] = { ...newWeights[mint], isLocked: !isLocked }\n\n    setTokensInfo(newWeights)\n  }\n\n  const validateWeight = useCallback(\n    (mint: string) => {\n      if (!tokensInfo) return false\n      const { weight } = tokensInfo[mint]\n      const numWeight = Number(weight)\n      if (numWeight > TOTAL_PERCENT || numWeight < 0) return false\n\n      let remainingPercent = 0\n      for (const { addressToken, weight } of Object.values(tokensInfo)) {\n        if (mint === addressToken) continue\n        remainingPercent += Number(weight)\n      }\n      const actualWeight = TOTAL_PERCENT - remainingPercent\n      return numWeight === Number(util.numeric(actualWeight).format('0,0.[00]'))\n    },\n    [tokensInfo],\n  )\n\n  const disabled = useMemo(() => {\n    if (!tokensInfo) return true\n    for (const mintAddress of Object.keys(tokensInfo)) {\n      if (!validateWeight(mintAddress)) return true\n    }\n    return false\n  }, [tokensInfo, validateWeight])\n\n  const updateWeights = async () => {\n    setLoading(true)\n    if (!tokensInfo) return\n    const weights = Object.values(tokensInfo).map(({ weight }) => {\n      const nextWeight = Number(weight) * GENERAL_NORMALIZED_NUMBER\n      const newWeight = new BN(nextWeight)\n      return newWeight\n    })\n\n    try {\n      const { updateWeights } = window.balansol\n      const { txId } = await updateWeights({ poolAddress, weights })\n      return notifySuccess('Update weights', txId)\n    } catch (err) {\n      notifyError(err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchWeights()\n  }, [fetchWeights])\n\n  return (\n    <Row gutter={[12, 12]}>\n      {mints.map((mint, idx) => {\n        const addressToken = mint.toBase58()\n        if (!tokensInfo) return null\n        const { isLocked, weight } = tokensInfo[addressToken]\n\n        return (\n          <Col span={24} key={addressToken + idx} className=\"weight\">\n            <Row gutter={12} align=\"middle\" wrap={false}>\n              <Col\n                flex=\"auto\"\n                className={\n                  validateWeight(addressToken)\n                    ? 'weight-input'\n                    : 'weight-input-error'\n                }\n              >\n                <NumericInput\n                  prefix={<Token mintAddress={addressToken} />}\n                  disabled={isLocked}\n                  bordered={false}\n                  controls={false}\n                  styles={{\n                    borderRadius: 40,\n                    background: theme === 'light' ? '#e6eaf5' : '#142042',\n                  }}\n                  addonAfter={<Typography.Text>%</Typography.Text>}\n                  value={weight}\n                  name={addressToken}\n                  onValue={(val: string) => onWeightChange(val, addressToken)}\n                />\n              </Col>\n              <Col>\n                <Button\n                  shape=\"circle\"\n                  type=\"text\"\n                  onClick={() => lockWeight(addressToken)}\n                  icon={\n                    <IonIcon\n                      name={\n                        isLocked ? 'lock-closed-outline' : 'lock-open-outline'\n                      }\n                    />\n                  }\n                />\n              </Col>\n            </Row>\n          </Col>\n        )\n      })}\n      <Col span={24} /> {/** Safe place */}\n      <Col span={24}>\n        <Button\n          onClick={updateWeights}\n          loading={loading}\n          disabled={disabled}\n          block\n          ghost\n          size=\"large\"\n        >\n          Update\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Weight\n","import { Card, Tabs } from 'antd'\nimport Fee from './fee'\nimport FreezeAndThaw from './freezeAndThaw'\nimport TransferOwner from './transferOwner'\nimport Weight from './weight'\n\nimport './index.less'\n\nconst PoolManagement = ({ poolAddress }: { poolAddress: string }) => {\n  return (\n    <Card>\n      <Tabs>\n        <Tabs.TabPane key=\"weights\" tab=\"Weights\">\n          <Weight poolAddress={poolAddress} />\n        </Tabs.TabPane>\n        <Tabs.TabPane key=\"freeze-thaw\" tab=\"Freeze/Unfreeze\">\n          <FreezeAndThaw poolAddress={poolAddress} />\n        </Tabs.TabPane>\n        <Tabs.TabPane key=\"fee\" tab=\"Fee\">\n          <Fee poolAddress={poolAddress} />\n        </Tabs.TabPane>\n        <Tabs.TabPane key=\"ownership\" tab=\"Ownership\">\n          <TransferOwner poolAddress={poolAddress} />\n        </Tabs.TabPane>\n      </Tabs>\n    </Card>\n  )\n}\n\nexport default PoolManagement\n","import { useTheme, util } from '@sentre/senhub'\nimport ReactEChartsCore from 'echarts-for-react/lib/core'\nimport * as echarts from 'echarts/core'\nimport { PieChart } from 'echarts/charts'\nimport {\n  GridComponent,\n  TitleComponent,\n  LegendComponent,\n} from 'echarts/components'\nimport { CanvasRenderer } from 'echarts/renderers'\n\necharts.use([\n  TitleComponent,\n  GridComponent,\n  PieChart,\n  CanvasRenderer,\n  LegendComponent,\n])\n\nexport type PoolWeightData = {\n  symbol: string\n  weight: number\n  tokenAmount: string\n}\n\nconst buildOptions = (\n  data: PoolWeightData[],\n  style: { color: string; backgroundColor: string },\n) => {\n  return {\n    legend: {\n      bottom: 0,\n      icon: 'circle',\n      textStyle: {\n        color: style.color,\n      },\n    },\n    tooltip: {\n      trigger: 'item',\n      borderWidth: '1',\n      formatter: function (params: any, ticket: any, callback: () => void) {\n        return `<div style=\"min-width: 200px; font-weight: 400\"><span style=\"color: #9CA1AF; font-size: 12px\">${params.data.name}</span><br/><span style=\"display: flex; justify-content: space-between\"><span style=\"font-size: 14px, font-weight: 400\">Weight&nbsp;</span> <span style=\"font-size: 16px; font-weight: 700\">${params.data.value}%</span></span> <span style=\"display: flex; justify-content: space-between;\"><span style=\"font-size: 14px; font-weight: 400\">Token amount&nbsp;</span> <span style=\"font-size: 16px; font-weight: 700\">${params.data.tokenAmount}</span></span></div>`\n      },\n      backgroundColor: style.backgroundColor,\n      extraCssText: 'border-radius: 24px',\n      textStyle: {\n        color: style.color,\n      },\n    },\n    series: [\n      {\n        type: 'pie',\n        radius: '70%',\n        avoidLabelOverlap: false,\n        top: 0,\n        label: {\n          show: true,\n          position: 'inside',\n          formatter: '{c}%',\n        },\n        labelLine: {\n          show: true,\n        },\n        bottom: 0,\n        data: data.map((value) => {\n          return {\n            name: value.symbol,\n            value: util.numeric(value.weight).format('0,0.[00]'),\n            tokenAmount: value.tokenAmount,\n          }\n        }),\n      },\n    ],\n  }\n}\n\nconst STYLE = {\n  light: {\n    color: '#081438',\n    backgroundColor: '#F2F4FA',\n  },\n  dark: {\n    color: '#F3F3F5',\n    backgroundColor: '#212C4C',\n  },\n}\n\nconst DoughnutChart = ({ data }: { data: PoolWeightData[] }) => {\n  const theme = useTheme()\n\n  return (\n    <ReactEChartsCore\n      echarts={echarts}\n      option={buildOptions(data, STYLE[theme])}\n      notMerge={true}\n      lazyUpdate={true}\n    />\n  )\n}\n\nexport default DoughnutChart\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { tokenProvider, useGetMintDecimals } from '@sentre/senhub'\n\nimport { Card, Col, Row, Spin, Typography } from 'antd'\nimport DoughnutChart, { PoolWeightData } from './doughnutChart'\n\nimport { AppState } from 'model'\nimport { getMintInfo } from 'helper/oracles'\nimport { utilsBN } from 'helper/utilsBN'\nimport { notifyError } from 'helper'\n\nconst PoolWeights = ({ poolAddress }: { poolAddress: string }) => {\n  const [loading, setLoading] = useState(false)\n  const [poolWeights, setPoolWeights] = useState<PoolWeightData[]>([])\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const getDecimals = useGetMintDecimals()\n\n  const doughnutChartData = useCallback(async () => {\n    try {\n      setLoading(true)\n      if (!poolData) return\n      const newData = await Promise.all(\n        poolData.mints.map(async (mint) => {\n          const { normalizedWeight, reserve } = getMintInfo(\n            poolData,\n            mint.toBase58(),\n          )\n          const tokenInfo = await tokenProvider.findByAddress(mint.toBase58())\n\n          if (tokenInfo)\n            return {\n              symbol: tokenInfo.symbol,\n              tokenAmount: utilsBN.undecimalize(reserve, tokenInfo.decimals),\n              weight: normalizedWeight * 100,\n            }\n          const decimal =\n            (await getDecimals({ mintAddress: mint.toBase58() })) || 0\n          return {\n            symbol: mint.toBase58().substring(0, 4),\n            tokenAmount: utilsBN.undecimalize(reserve, decimal) || '0',\n            weight: normalizedWeight * 100,\n          }\n        }),\n      )\n      setPoolWeights(newData)\n    } catch (err) {\n      notifyError(err)\n    } finally {\n      setLoading(false)\n    }\n  }, [getDecimals, poolData])\n\n  useEffect(() => {\n    doughnutChartData()\n  }, [doughnutChartData])\n\n  return (\n    <Card className=\"chart-card\">\n      <Row>\n        <Col span={24}>\n          <Typography.Title level={4}>Pool Weights</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Spin tip=\"Loading...\" spinning={loading}>\n            <DoughnutChart data={poolWeights} />\n          </Spin>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default PoolWeights\n","import { util } from '@sentre/senhub'\nimport ReactEChartsCore from 'echarts-for-react/lib/core'\nimport * as echarts from 'echarts/core'\nimport { BarChart as BC } from 'echarts/charts'\nimport {\n  GridComponent,\n  TooltipComponent,\n  TitleComponent,\n  LegendComponent,\n} from 'echarts/components'\nimport { CanvasRenderer } from 'echarts/renderers'\n\nimport { Row } from 'antd'\nimport { VolumeData } from '.'\n\necharts.use([\n  TitleComponent,\n  TooltipComponent,\n  GridComponent,\n  BC,\n  CanvasRenderer,\n  LegendComponent,\n])\n\nconst buildOptions = (data: VolumeData[]) => ({\n  xAxis: {\n    type: 'category',\n    data: data.map((value) => value.label),\n    axisLine: {\n      show: false,\n    },\n    axisTick: {\n      show: false,\n    },\n  },\n  yAxis: {\n    type: 'value',\n    splitLine: {\n      show: false,\n    },\n    axisLabel: {\n      formatter: (value: number) => {\n        return util.numeric(value).format('0,0.[00]a')\n      },\n    },\n  },\n  tooltip: {\n    trigger: 'item',\n    borderWidth: '1',\n    valueFormatter: (value: any) => '$' + value.toFixed(2),\n  },\n  series: [\n    {\n      data: data.map((value) => value.data),\n      type: 'bar',\n      itemStyle: { color: '#87E0C0' },\n    },\n  ],\n  grid: {\n    show: false,\n    top: 10,\n    left: 40,\n    right: 10,\n    bottom: 50,\n  },\n})\n\nconst BarChart = ({ data }: { data: VolumeData[] }) => {\n  return (\n    <Row justify=\"center\" className=\"barchart-container\">\n      <ReactEChartsCore echarts={echarts} option={buildOptions(data)} />\n    </Row>\n  )\n}\n\nexport default BarChart\n","import moment from 'moment'\n\nconst SECOND_PER_MILLISECOND = 1000\n\nexport enum TimeFormat {\n  YMD = 'YYYYMMDD',\n  SortableTimePattern = 'YYYY-MM-DD HH:mm:ss',\n}\n\nexport class DateHelper {\n  private milliSeconds: number = new Date().valueOf()\n\n  setMilliSeconds(milliSeconds: number) {\n    this.milliSeconds = milliSeconds\n  }\n\n  static fromSeconds(seconds: number): DateHelper {\n    const date = new DateHelper()\n    const milliSeconds = seconds * SECOND_PER_MILLISECOND\n    date.setMilliSeconds(milliSeconds)\n    return date\n  }\n\n  static fromYmd(ymd: number): DateHelper {\n    const date = new DateHelper()\n    const milliSeconds = moment(ymd, TimeFormat.YMD).valueOf()\n    date.setMilliSeconds(milliSeconds)\n    return date\n  }\n\n  static getListDate(ymdFrom: number, ymdTo: number): number[] {\n    const dates: number[] = []\n    let dateFrom = DateHelper.fromYmd(ymdFrom)\n    const dateTo = DateHelper.fromYmd(ymdTo)\n    while (dateFrom.ymd() <= dateTo.ymd()) {\n      dates.push(dateFrom.ymd())\n      dateFrom = dateFrom.addDay()\n    }\n    return dates\n  }\n\n  format(dateFormat: TimeFormat): string {\n    const date = new Date(this.milliSeconds)\n    return moment(date).format(dateFormat)\n  }\n\n  subtractDay(dayAmount: number = 1): DateHelper {\n    const milliSeconds = moment(this.milliSeconds)\n      .subtract(dayAmount, 'days')\n      .valueOf()\n    const date = DateHelper.fromSeconds(milliSeconds / SECOND_PER_MILLISECOND)\n    return date\n  }\n\n  addDay(dayAmount: number = 1): DateHelper {\n    const milliSeconds = moment(this.milliSeconds)\n      .add(dayAmount, 'days')\n      .valueOf()\n    const date = DateHelper.fromSeconds(milliSeconds / SECOND_PER_MILLISECOND)\n    return date\n  }\n\n  seconds(): number {\n    return (\n      (this.milliSeconds - (this.milliSeconds % SECOND_PER_MILLISECOND)) /\n      SECOND_PER_MILLISECOND\n    )\n  }\n\n  ymd(): number {\n    return Number(this.format(TimeFormat.YMD))\n  }\n\n  static today(format: string = TimeFormat.YMD): string {\n    return moment().format(format)\n  }\n}\n","export class TransLog {\n  programId: string = ''\n  programInfo: ProgramInfo | undefined\n  signature: string = ''\n  blockTime: number = 0\n  time: number = 0\n  owner: string = ''\n  actionType: string = ''\n  actionTransfers: Array<ActionTransfer> = []\n  programTransfer: Array<ActionTransfer> = []\n}\n\nexport class ActionInfo {\n  address: string = ''\n  mint: string = ''\n  decimals: number = 0\n  preBalance: string = '0'\n  postBalance: string = '0'\n}\n/**\n * Amount is not same postBalance - preBalance\n * @postBalance and @preBalance are balance after all action (transaction)\n * @postBalance = @preBalance +- all @amount (multi amount in transaction)\n * @amount is value in 1 action\n */\nexport class ActionTransfer {\n  source: ActionInfo | undefined\n  destination: ActionInfo | undefined\n  amount: string = '0'\n}\ntype ProgramInfo = {\n  programId: string\n  data: string\n}\n","import { connection } from '@sentre/senhub'\nimport {\n  ConfirmedSignatureInfo,\n  ConfirmedSignaturesForAddress2Options,\n  Connection,\n  ParsedConfirmedTransaction,\n  PublicKey,\n} from '@solana/web3.js'\n\nimport { OptionsFetchSignature } from '../../constants/transaction'\n\nconst DEFAULT_LIMIT = 700\nconst TRANSACTION_LIMIT = 200\n\nexport class Solana {\n  private conn: Connection = connection\n\n  //Search for all signatures from last Signature and earlier\n  //So: If new collection (to now) -> last Signature = null\n  private async fetchSignatures(\n    address: PublicKey,\n    lastSignature?: string,\n    limit: number = DEFAULT_LIMIT,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    if (limit > DEFAULT_LIMIT) limit = DEFAULT_LIMIT\n    const options: ConfirmedSignaturesForAddress2Options = {\n      limit: limit,\n      before: lastSignature,\n    }\n    return this.conn.getConfirmedSignaturesForAddress2(address, options)\n  }\n\n  private async fetchConfirmTransaction(signatures: string[]) {\n    let confirmedTransactions: ParsedConfirmedTransaction[] = []\n    let limit = TRANSACTION_LIMIT\n\n    const promiseTransGroup = []\n    for (let offset = 0; offset <= signatures.length / limit; offset++) {\n      const skip = offset * limit\n      const signaturesGroup = signatures.slice(skip, skip + limit)\n      promiseTransGroup.push(\n        this.conn.getParsedConfirmedTransactions(signaturesGroup),\n      )\n    }\n\n    const transGroups = await Promise.all(promiseTransGroup)\n    for (const transGroup of transGroups) {\n      //@ts-ignore\n      confirmedTransactions = confirmedTransactions.concat(transGroup)\n    }\n    return confirmedTransactions\n  }\n\n  async fetchTransactions(\n    programId: string,\n    options: OptionsFetchSignature,\n  ): Promise<ParsedConfirmedTransaction[]> {\n    const currentTime = new Date().getTime() / 1000\n    let { secondFrom, secondTo, lastSignature, limit } = options\n    secondFrom = Math.floor(secondFrom || 0)\n    secondTo = Math.floor(secondTo || currentTime)\n\n    const programPublicKey = new PublicKey(programId)\n    let signatures: string[] = []\n    let isStop = false\n\n    while (!isStop) {\n      const confirmedSignatureInfos: ConfirmedSignatureInfo[] =\n        await this.fetchSignatures(programPublicKey, lastSignature, limit)\n      if (!confirmedSignatureInfos?.length || isStop) break\n      for (const info of confirmedSignatureInfos) {\n        const blockTime = info.blockTime\n        if (!blockTime || blockTime > secondTo) continue\n        if (blockTime < secondFrom) {\n          isStop = true\n          break\n        }\n        lastSignature = info.signature\n        signatures.push(info.signature)\n      }\n\n      if (limit && signatures.length >= limit) break\n      if (confirmedSignatureInfos?.length < DEFAULT_LIMIT) break\n    }\n    const confirmedTransactions = await this.fetchConfirmTransaction(signatures)\n    return confirmedTransactions\n  }\n}\n","export enum ParsedType {\n  Transfer = 'transfer',\n}\n\nexport type ParsedAction = {\n  type: ParsedType\n  info: ParsedInfoTransfer\n}\n\nexport type ParsedInfoTransfer = {\n  source: string\n  destination: string\n  amount: string\n  lamports: number\n}\n\nexport type OptionsFetchSignature = {\n  limit?: number\n  lastSignature?: string\n  secondFrom?: number\n  secondTo?: number\n}\n","import { TransLog } from './../../entities/trans-log'\nimport { TransLogService } from './../translog'\n\nexport enum SwapActionType {\n  Swap = 'SWAP',\n}\n\nexport default class PoolTransLogService extends TransLogService {\n  parseAction = (transLog: TransLog) => {\n    try {\n      const programDataEncode = transLog.programInfo?.data\n      const swapData = (\n        window.balansol.program.coder.instruction as any\n      ).decode(programDataEncode, 'base58')\n      if (swapData?.name === 'route') return SwapActionType.Swap\n    } catch (error) {}\n    return ''\n  }\n}\n","//@ts-ignore\nimport {\n  ParsedConfirmedTransaction,\n  ParsedInstruction,\n  ParsedMessageAccount,\n  PartiallyDecodedInstruction,\n  TokenBalance,\n} from '@solana/web3.js'\nimport { account } from '@senswap/sen-js'\n\nimport { ActionInfo, ActionTransfer, TransLog } from '../entities/trans-log'\nimport { Solana } from '../adapters/solana/client'\nimport {\n  OptionsFetchSignature,\n  ParsedAction,\n  ParsedInfoTransfer,\n  ParsedType,\n} from '../constants/transaction'\nimport { DateHelper } from '../helpers/date'\nimport { SOL_ADDRESS, SOL_DECIMALS } from '../constants/sol'\n\ntype InstructionData = ParsedInstruction | PartiallyDecodedInstruction\n\nexport class TransLogService {\n  protected parseAction = (transLog: TransLog) => {\n    return ''\n  }\n\n  async collect(\n    programId: string,\n    configs: OptionsFetchSignature,\n    filterTransLog?: (transLog: TransLog) => Promise<boolean>,\n  ): Promise<TransLog[]> {\n    let { lastSignature, limit } = configs\n    const solana = new Solana()\n    let transLogs: Array<TransLog> = []\n    let lastSignatureTmp = lastSignature\n    let isStop = false\n    let smartLimit = 200\n    while (!isStop) {\n      const confirmedTrans: ParsedConfirmedTransaction[] =\n        await solana.fetchTransactions(programId, {\n          ...configs,\n          lastSignature: lastSignatureTmp,\n          limit: smartLimit,\n        })\n\n      for (const trans of confirmedTrans) {\n        lastSignatureTmp = trans.transaction.signatures[0]\n        const log = this.parseTransLog(trans)\n        if (!log) continue\n        // filter\n        if (filterTransLog) {\n          const checked = await filterTransLog(log)\n          if (!checked) continue\n        }\n        transLogs.push(log)\n\n        if (limit && transLogs.length >= limit) {\n          isStop = true\n          break\n        }\n      }\n      if (limit) smartLimit = (smartLimit * limit) / (transLogs.length || 1)\n      if (!confirmedTrans.length) break\n      if (isStop) break\n    }\n    return transLogs\n  }\n\n  private parseTransLog(\n    confirmedTrans: ParsedConfirmedTransaction,\n  ): TransLog | undefined {\n    const { blockTime, meta, transaction } = confirmedTrans\n    if (!blockTime || !meta) return\n    const { postTokenBalances, preTokenBalances, postBalances, preBalances } =\n      meta\n    const { signatures, message } = transaction\n\n    const innerInstructionData = meta.innerInstructions?.[0]?.instructions || []\n    const instructionData = message.instructions[0] || []\n\n    const transLog = new TransLog()\n    transLog.signature = signatures[0]\n    transLog.blockTime = blockTime\n    transLog.time = DateHelper.fromSeconds(blockTime).ymd()\n    transLog.programId = instructionData.programId.toString()\n\n    const mapAccount = this.parseAccountInfo(\n      message.accountKeys,\n      postTokenBalances || [],\n      preTokenBalances || [],\n      postBalances,\n      preBalances,\n    )\n    // system program transaction\n    if (this.isParsedInstruction(instructionData)) {\n      transLog.programTransfer = this.parseListActionTransfer(\n        [instructionData],\n        mapAccount,\n      )\n      return transLog\n    }\n    // smart contract transaction\n    transLog.actionTransfers = this.parseListActionTransfer(\n      innerInstructionData,\n      mapAccount,\n    )\n    transLog.programInfo = {\n      programId: instructionData.programId.toString(),\n      data: (instructionData as PartiallyDecodedInstruction).data,\n    }\n\n    transLog.actionType = this.parseAction(transLog)\n\n    return transLog\n  }\n\n  private isParsedInstruction(instructionData: InstructionData) {\n    return (instructionData as ParsedInstruction).parsed !== undefined\n  }\n\n  private parseListActionTransfer(\n    actions: InstructionData[],\n    mapAccount: Map<string, ActionInfo>,\n  ) {\n    const actionTransfer: ActionTransfer[] = []\n    for (const action of actions) {\n      if (!this.isParsedInstruction(action)) continue\n      const actionParsed: ParsedAction =\n        (action as ParsedInstruction).parsed || {}\n      switch (actionParsed.type) {\n        case ParsedType.Transfer:\n          const info: ParsedInfoTransfer = actionParsed.info\n          const parsedAction = this.parseActionTransfer(info, mapAccount)\n          if (parsedAction) actionTransfer.push(parsedAction)\n          break\n        default:\n          break\n      }\n    }\n    return actionTransfer\n  }\n\n  private parseActionTransfer(\n    parsedTransfer: ParsedInfoTransfer,\n    mapAccount: Map<string, ActionInfo>,\n  ): ActionTransfer | undefined {\n    const { source, destination, amount, lamports } = parsedTransfer\n    const amountTransfer = amount || lamports.toString()\n\n    if (\n      !amountTransfer ||\n      !mapAccount.has(source) ||\n      !mapAccount.has(destination)\n    )\n      return\n\n    const actionTransfer = new ActionTransfer()\n    actionTransfer.source = mapAccount.get(source)\n    actionTransfer.destination = mapAccount.get(destination)\n    actionTransfer.amount = amountTransfer\n    return actionTransfer\n  }\n\n  private parseAccountInfo(\n    accountKeys: Array<ParsedMessageAccount>,\n    postTokenBalances: Array<TokenBalance>,\n    preTokenBalances: Array<TokenBalance>,\n    postBalances: number[],\n    preBalances: number[],\n  ): Map<string, ActionInfo> {\n    const mapAccountInfo = new Map<string, ActionInfo>()\n\n    // Associated Address\n    for (const postBalance of postTokenBalances) {\n      const { accountIndex, mint, uiTokenAmount } = postBalance\n      const info = new ActionInfo()\n      info.address = accountKeys[accountIndex].pubkey.toString()\n      info.postBalance = uiTokenAmount.amount\n      info.mint = mint\n      info.decimals = uiTokenAmount.decimals\n      mapAccountInfo.set(info.address, info)\n    }\n\n    for (const preBalance of preTokenBalances) {\n      const { accountIndex, uiTokenAmount } = preBalance\n      const address = accountKeys[accountIndex].pubkey.toString()\n      const info = mapAccountInfo.get(address) || new ActionInfo()\n      info.preBalance = uiTokenAmount.amount\n      mapAccountInfo.set(info.address, info)\n    }\n\n    // Wallet address\n    accountKeys.forEach((accountData, idx) => {\n      const address = accountData.pubkey.toString()\n      if (!account.isAssociatedAddress(address)) {\n        const info = mapAccountInfo.get(address) || new ActionInfo()\n        info.address = address\n        info.mint = SOL_ADDRESS\n        info.postBalance = String(postBalances[idx] || 0) // lamports\n        info.preBalance = String(preBalances[idx] || 0) // lamports\n        info.decimals = SOL_DECIMALS\n        mapAccountInfo.set(info.address, info)\n      }\n    })\n\n    return mapAccountInfo\n  }\n}\n","export const SOL_ADDRESS = '11111111111111111111111111111111'\n\nexport const SOL_DECIMALS = 9\n","export class DailyReport {\n  programId = ''\n  time: number = 0\n  address: string = ''\n  mint: string = ''\n  actionType: string = ''\n  amountIn: bigint = BigInt(0)\n  amountOut: bigint = BigInt(0)\n  totalTrans: number = 0\n}\n","import { PoolData } from '@senswap/sen-js'\nimport { DailyReport } from '../entities/daily-report'\nimport { TransLog } from '../entities/trans-log'\n\nexport default class DailyReportService {\n  parserDailyReport(transLogs: TransLog[]): DailyReport[] {\n    let reports = new Array<DailyReport>()\n    for (const transLog of transLogs) {\n      reports = reports.concat(this.parseDailyReport(transLog))\n    }\n    return this.mergeDailyReport(reports)\n  }\n\n  parseDailyReport(transLog: TransLog): DailyReport[] {\n    const dailyReports = new Array<DailyReport>()\n    const { programId, time, actionType, actionTransfers } = transLog\n    for (const transfer of actionTransfers) {\n      const { source, destination, amount } = transfer\n\n      const report = new DailyReport()\n      report.programId = programId\n      report.time = time\n      report.actionType = actionType\n\n      if (source) {\n        const { mint, address } = source\n        dailyReports.push({\n          ...report,\n          mint: mint,\n          address: address,\n          amountOut: BigInt(amount),\n        })\n      }\n      if (destination) {\n        const { mint, address } = destination\n        dailyReports.push({\n          ...report,\n          mint: mint,\n          address: address,\n          amountIn: BigInt(amount),\n        })\n      }\n    }\n    return dailyReports\n  }\n\n  mergeDailyReport(dailyReports: Array<DailyReport>): Array<DailyReport> {\n    const map = new Map<string, DailyReport>()\n    for (const report of dailyReports) {\n      const key = `${report.time}^${report.address}^${report.mint}^${report.actionType}`\n      if (map.has(key)) {\n        const val = map.get(key)\n        if (val !== undefined) {\n          report.amountIn += val.amountIn\n          report.amountOut += val.amountOut\n          report.totalTrans += val.totalTrans\n        }\n      }\n      map.set(key, report)\n    }\n    const results = new Array<DailyReport>()\n    map.forEach((report) => results.push(report))\n    return results\n  }\n}\n\nexport type MapTreasury = { poolAddress: string; data: PoolData }\n","import { PoolData } from '@senswap/balancer'\nimport { BN } from '@project-serum/anchor'\nimport { util, PDB, TokenProvider } from '@sentre/senhub'\n\nimport { TransLog } from 'stat/entities/trans-log'\nimport { TotalSummary } from 'stat/constants/summary'\nimport { DailyReport } from 'stat/entities/daily-report'\nimport { DateHelper } from 'stat/helpers/date'\nimport { utilsBN } from 'helper/utilsBN'\nimport PoolTransLogService, { SwapActionType } from './poolTranslog'\nimport DailyReportService from '../daily-report'\n\nconst DATE_RANGE = 8\n\nexport default class PoolService {\n  poolAddress: string\n  poolData: PoolData | undefined\n  poolTransLogService = new PoolTransLogService()\n  dailyReportService = new DailyReportService()\n  tokenProvider = new TokenProvider()\n\n  constructor(poolAddress: string) {\n    this.poolAddress = poolAddress\n  }\n\n  getPoolData = async (): Promise<PoolData> => {\n    if (!this.poolData) {\n      const balansol = window.balansol\n      this.poolData = await balansol.getPoolData(this.poolAddress)\n    }\n    return this.poolData\n  }\n\n  getUsd = async (mint: string, amountBigint: bigint) => {\n    const mintInfo = await this.tokenProvider.findByAddress(mint)\n    if (!mintInfo) return 0\n    const { decimals, extensions } = mintInfo\n    try {\n      const cgkData = await util.fetchCGK(extensions?.coingeckoId)\n      if (!cgkData?.price) return 0\n      const amount = utilsBN.undecimalize(\n        new BN(amountBigint.toString()),\n        decimals,\n      )\n      return Number(amount) * cgkData.price\n    } catch (error) {\n      return 0\n    }\n  }\n\n  fetchTransLog = async (timeFrom: number, timeTo: number) => {\n    const db = new PDB(this.poolAddress).createInstance('stat')\n    let cacheTransLog: TransLog[] = (await db.getItem('translogs')) || []\n    cacheTransLog = cacheTransLog.sort((a, b) => b.blockTime - a.blockTime)\n    const fistTransLog = cacheTransLog[0]\n    const lastTransLog = cacheTransLog[cacheTransLog.length - 1]\n\n    if (fistTransLog && lastTransLog) {\n      const [beginTransLogs] = await Promise.all([\n        this.poolTransLogService.collect(this.poolAddress, {\n          secondFrom: fistTransLog.blockTime,\n          secondTo: timeTo,\n        }),\n      ])\n      cacheTransLog = cacheTransLog.filter(\n        (trans) => trans.blockTime > timeFrom,\n      )\n      cacheTransLog = [...beginTransLogs, ...cacheTransLog]\n    } else {\n      cacheTransLog = await this.poolTransLogService.collect(this.poolAddress, {\n        secondFrom: timeFrom,\n        secondTo: timeTo,\n      })\n    }\n    await db.setItem('translogs', cacheTransLog)\n    return cacheTransLog\n  }\n\n  getDailyInfo = async () => {\n    let timeTo = new DateHelper()\n    const timeFrom = new DateHelper().subtractDay(DATE_RANGE)\n    const { fee, taxFee, treasuries } = await this.getPoolData()\n\n    // fetch transLog\n    const transLogs = await this.fetchTransLog(\n      timeFrom.seconds(),\n      timeTo.seconds(),\n    )\n    // parse daily + create map time\n    const dailyReports = this.dailyReportService.parserDailyReport(transLogs)\n    const mapTimeDailyReport: Record<number, DailyReport[]> = {}\n    for (const report of dailyReports) {\n      const { time, address } = report\n      // filter daily report\n      if (!treasuries.map((e) => e.toBase58().includes(address))) continue\n      if (!mapTimeDailyReport[time]) mapTimeDailyReport[time] = []\n      mapTimeDailyReport[time].push(report)\n    }\n    // parse summary\n\n    const mapTimeTotal: Record<string, TotalSummary> = {}\n    mapTimeTotal[timeTo.ymd()] = {\n      tvl: 0,\n      fee: 0,\n      volume: 0,\n    }\n\n    while (timeTo.ymd() > timeFrom.ymd()) {\n      const reports = mapTimeDailyReport[timeTo.ymd()] || []\n      const currentReport = mapTimeTotal[timeTo.ymd()]\n      const prevDate = timeTo.subtractDay(1)\n      if (!mapTimeTotal[prevDate.ymd()] && prevDate.ymd() >= timeFrom.ymd()) {\n        mapTimeTotal[prevDate.ymd()] = {\n          tvl: currentReport.tvl,\n          fee: 0,\n          volume: 0,\n        }\n      }\n      for (const report of reports) {\n        const amountOut = await this.getUsd(report.mint, report.amountOut)\n        const amountIn = await this.getUsd(report.mint, report.amountIn)\n        if (mapTimeTotal[prevDate.ymd()]) {\n          mapTimeTotal[prevDate.ymd()].tvl += amountOut - amountIn\n          if (mapTimeTotal[prevDate.ymd()].tvl < 0)\n            mapTimeTotal[prevDate.ymd()].tvl = 0\n        }\n        if (report.actionType === SwapActionType.Swap) {\n          mapTimeTotal[timeTo.ymd()].volume += amountIn + amountOut\n          const totalFee =\n            Number(utilsBN.undecimalize(fee.add(taxFee), 9)) * amountOut\n          mapTimeTotal[timeTo.ymd()].fee += totalFee\n        }\n      }\n      timeTo = timeTo.subtractDay(1)\n    }\n\n    return mapTimeTotal\n  }\n}\n","import { useCallback } from 'react'\nimport { Address, BN, web3 } from '@project-serum/anchor'\nimport { useGetMintDecimals } from '@sentre/senhub'\nimport util from '@senswap/sen-js/dist/utils'\n\nexport const useOracles = () => {\n  const getDecimals = useGetMintDecimals()\n\n  const decimalizeMintAmount = useCallback(\n    async (amount: number | string, mintAddress: Address) => {\n      const decimals =\n        (await getDecimals({\n          mintAddress: new web3.PublicKey(mintAddress).toString(),\n        })) || 0\n      return new BN(util.decimalize(amount, decimals).toString())\n    },\n    [getDecimals],\n  )\n\n  const undecimalizeMintAmount = useCallback(\n    async (amount: BN, mintAddress: Address) => {\n      const decimals =\n        (await getDecimals({\n          mintAddress: new web3.PublicKey(mintAddress).toString(),\n        })) || 0\n      return util.undecimalize(BigInt(amount.toString()), decimals)\n    },\n    [getDecimals],\n  )\n\n  const decimalize = useCallback(\n    (amount: number | string, decimals: number) => {\n      return new BN(util.decimalize(amount, decimals).toString())\n    },\n    [],\n  )\n\n  const undecimalize = useCallback((amount: BN, decimals: number) => {\n    return util.undecimalize(BigInt(amount.toString()), decimals)\n  }, [])\n\n  return {\n    decimalize,\n    undecimalize,\n    decimalizeMintAmount,\n    undecimalizeMintAmount,\n  }\n}\n","import { useGetMintPrice } from '@sen-use/app'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { useOracles } from './useOracles'\n\nimport { AppState } from 'model'\nimport { PoolData } from '@senswap/balancer'\n\nexport const useTVL = (poolAddress = '') => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const [TVL, setTVL] = useState(0)\n  const getPrice = useGetMintPrice()\n  const { undecimalizeMintAmount } = useOracles()\n\n  const getTVL = useCallback(\n    async (poolData: PoolData) => {\n      if (!poolData) return 0\n      let totalValueLocked = 0\n      for (let i in poolData.reserves) {\n        const tokenPrice = await getPrice(poolData.mints[i])\n        if (!tokenPrice) continue\n        const reserver = await undecimalizeMintAmount(\n          poolData.reserves[i],\n          poolData.mints[i],\n        )\n        totalValueLocked += tokenPrice * Number(reserver)\n      }\n      return totalValueLocked\n    },\n    [getPrice, undecimalizeMintAmount],\n  )\n\n  const updateTvl = useCallback(async () => {\n    const tvl = await getTVL(poolData)\n    return setTVL(tvl)\n  }, [getTVL, poolData])\n\n  useEffect(() => {\n    updateTvl()\n  }, [updateTvl])\n\n  return { TVL, getTVL }\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { DataLoader } from '@sentre/senhub'\n\nimport { TotalSummary } from 'stat/constants/summary'\nimport PoolService from 'stat/logic/pool/pool'\nimport { useTVL } from './useTVL'\n\nconst TTL_5_MIN = 300000\n\nexport const useStat = (poolAddress: string) => {\n  const [apy, setApy] = useState(0)\n  const [dailyInfo, setDailyInfo] = useState<Record<string, TotalSummary>>({})\n  const [loading, setLoading] = useState(false)\n  const { TVL } = useTVL(poolAddress)\n\n  const fetchVolume = useCallback(async () => {\n    try {\n      setLoading(true)\n      if (!poolAddress || !TVL) {\n        setLoading(false)\n        setApy(0)\n        return setDailyInfo({})\n      }\n      const poolStatService = new PoolService(poolAddress)\n      const dailyInfo = await DataLoader.load(\n        'getDailyInfo' + poolAddress,\n        () => poolStatService.getDailyInfo(),\n        { cache: { ttl: TTL_5_MIN } },\n      )\n      // Calc Roi -> APY\n      let totalFee = 0\n      let dateCount = 0\n      for (const date in dailyInfo) {\n        totalFee += dailyInfo[date].fee\n        if (\n          dailyInfo[date].fee &&\n          dailyInfo[date].volume &&\n          dailyInfo[date].tvl\n        )\n          dateCount++\n      }\n      const feePerDay = totalFee / dateCount\n      const roi = feePerDay / TVL\n      const apy = Math.pow(1 + roi, 365) - 1\n      setApy(Number.isFinite(apy) ? apy : 0)\n      setDailyInfo(dailyInfo)\n    } catch (error) {\n    } finally {\n      setLoading(false)\n    }\n  }, [poolAddress, TVL])\n\n  useEffect(() => {\n    fetchVolume()\n  }, [fetchVolume])\n\n  return { apy, dailyInfo, loading }\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport moment from 'moment'\n\nimport { VolumeData } from 'view/poolDetails/volume24h'\nimport { useStat } from './useStat'\n\nexport const useVolume24h = (poolAddress: string) => {\n  const [chartData, setChartData] = useState<VolumeData[]>([])\n  const { dailyInfo, loading } = useStat(poolAddress)\n\n  const fetchVolume = useCallback(async () => {\n    if (!poolAddress) return setChartData([])\n    const chartData = Object.keys(dailyInfo).map((time) => {\n      return {\n        data: dailyInfo[time].volume,\n        label: moment(time, 'YYYYMMDD').format('MM/DD'),\n      }\n    })\n    return setChartData(chartData)\n  }, [dailyInfo, poolAddress])\n  useEffect(() => {\n    fetchVolume()\n  }, [fetchVolume])\n\n  const vol24h = useMemo(() => {\n    const today = chartData[chartData.length - 1]?.data || 0\n    const yesterday = chartData[chartData.length - 2]?.data || 0\n    const house = new Date().getHours()\n    return today + (house * yesterday) / 24\n  }, [chartData])\n\n  return { chartData, loading, vol24h }\n}\n","import { util } from '@sentre/senhub'\n\nimport BarChart from './barChart'\nimport { Card, Col, Row, Spin, Typography } from 'antd'\n\nimport { useVolume24h } from 'hooks/useVolume24h'\n\nexport type VolumeData = { data: number; label: string }\n\nconst Volume24h = ({ poolAddress }: { poolAddress: string }) => {\n  const { vol24h, loading, chartData } = useVolume24h(poolAddress)\n\n  return (\n    <Card className=\"chart-card\">\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Row justify=\"center\" align=\"middle\" className=\"chart-title\">\n            <Col flex={'auto'}>\n              <Typography.Title level={4}>Volume 24h</Typography.Title>\n            </Col>\n            <Col>\n              <Typography.Title level={2}>\n                ${util.numeric(vol24h).format('0,0.[0]a')}\n              </Typography.Title>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24} flex=\"auto\">\n          <Spin tip=\"Loading...\" spinning={loading}>\n            <BarChart data={chartData} />\n          </Spin>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Volume24h\n","import { utilsBN } from '@sen-use/web3'\nimport { BN } from '@project-serum/anchor'\nimport { useEffect, useState } from 'react'\nimport { account, DEFAULT_EMPTY_ADDRESS } from '@senswap/sen-js'\nimport {\n  useWalletAddress,\n  useWalletBalance,\n  useMintDecimals,\n  useAccountSelector,\n  splt,\n} from '@sentre/senhub'\n\nexport type AccountBalanceReturn = {\n  amount: BN\n  decimals: number\n  balance: number\n  mintAddress: string\n}\n\nconst buildResult = (mintAddress?: string, amount?: BN, decimals?: number) => {\n  if (\n    !account.isAddress(mintAddress) ||\n    amount === undefined ||\n    decimals === undefined\n  )\n    return { amount: new BN(0), decimals: 0, balance: 0 }\n  return {\n    mintAddress,\n    amount,\n    decimals,\n    balance: Number(utilsBN.undecimalize(amount, decimals)),\n  }\n}\n\n/**\n * Get account balance. This hook needs WalletProvider, MintProvider, and AccountProvider for working.\n * WalletProvider Ref: https://docs.sentre.io/senhub/development/providers/wallet-provider\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * AccountProvider Ref: https://docs.sentre.io/senhub/development/providers/account-provider\n * @param accountAddress Associated account address\n * @returns AccountBalanceReturn\n * - AccountBalanceReturn.amount: The amount with decimals\n * - AccountBalanceReturn.decimals: The corresponding mint decimals\n * - AccountBalanceReturn.balance: The human-readable balance (undecimalized amount)\n * - AccountBalanceReturn.mintAddress: The corresponding mint\n */\nconst useAccountBalance = (accountAddress: string) => {\n  const walletAddress = useWalletAddress()\n  const lamports = useWalletBalance()\n  const accountData = useAccountSelector((accounts) => accounts[accountAddress])\n  const { amount, mint: mintAddress } = accountData || {}\n  const decimals = useMintDecimals({ mintAddress }) || 0\n\n  if (!account.isAddress(walletAddress) || !account.isAddress(accountAddress))\n    return buildResult()\n  if (accountAddress === walletAddress)\n    return buildResult(DEFAULT_EMPTY_ADDRESS, new BN(lamports), 9)\n\n  return buildResult(mintAddress, new BN(amount?.toString() || 0), decimals)\n}\n\nexport default useAccountBalance\n\n/**\n * The same as useAccountBalance but the input is mint address\n * @param mintAddress Mint address\n * @returns AccountBalanceReturn\n */\nexport const useAccountBalanceByMintAddress = (mintAddress: string) => {\n  const [accountAddress, setAccountAddress] = useState('')\n  const walletAddress = useWalletAddress()\n  const data = useAccountBalance(accountAddress)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!account.isAddress(walletAddress) || !account.isAddress(mintAddress))\n        return setAccountAddress('')\n      try {\n        const address = await splt.deriveAssociatedAddress(\n          walletAddress,\n          mintAddress,\n        )\n        return setAccountAddress(address)\n      } catch (er) {\n        return setAccountAddress('')\n      }\n    })()\n  })\n\n  return data\n}\n","import { ReactNode } from 'react'\n\nimport { Card, Row, Col, Typography, Space } from 'antd'\n\nconst CardPoolDetail = ({\n  title,\n  content,\n  bg,\n}: {\n  title: string\n  content?: ReactNode\n  bg: string\n}) => {\n  return (\n    <Card className=\"card-detail-header\" style={{ background: `url(${bg})` }}>\n      <Row gutter={[0, 8]}>\n        <Col span={24}>\n          <Typography.Text type=\"secondary\">{title}</Typography.Text>\n        </Col>\n        <Col span={24}>\n          <Space align=\"end\">{content}</Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardPoolDetail\n","var _rect, _rect2, _g, _defs;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgTvl(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 294,\n    height: 94,\n    viewBox: \"0 0 294 94\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_6806_100656\",\n    style: {\n      maskType: \"alpha\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 0,\n    y: 0,\n    width: 294,\n    height: 94\n  }, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 294,\n    height: 94,\n    fill: \"#212C4C\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.5,\n    y: 0.5,\n    width: 293,\n    height: 93,\n    stroke: \"url(#paint0_linear_6806_100656)\",\n    strokeOpacity: 0.2\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_6806_100656)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_f_6806_100656)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 243.5,\n    cy: 9.5,\n    r: 62.5,\n    fill: \"#F148FB\",\n    fillOpacity: 0.2\n  })))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_f_6806_100656\",\n    x: 81,\n    y: -153,\n    width: 325,\n    height: 325,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"BackgroundImageFix\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 50,\n    result: \"effect1_foregroundBlur_6806_100656\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_6806_100656\",\n    x1: 0,\n    y1: 0,\n    x2: 42.2707,\n    y2: 160.357,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#F8D1FF\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTvl);\nexport default __webpack_public_path__ + \"static/media/tvl.85fd6f5a6c3970dff1166cd0b28e15f8.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _rect2, _g, _defs;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgApy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 294,\n    height: 94,\n    viewBox: \"0 0 294 94\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_6806_100665\",\n    style: {\n      maskType: \"alpha\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 0,\n    y: 0,\n    width: 294,\n    height: 94\n  }, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 294,\n    height: 94,\n    fill: \"#212C4C\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.5,\n    y: 0.5,\n    width: 293,\n    height: 93,\n    stroke: \"url(#paint0_linear_6806_100665)\",\n    strokeOpacity: 0.2\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_6806_100665)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_f_6806_100665)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 243.5,\n    cy: 9.5,\n    r: 62.5,\n    fill: \"#4E6ABE\",\n    fillOpacity: 0.6\n  })))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_f_6806_100665\",\n    x: 81,\n    y: -153,\n    width: 325,\n    height: 325,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"BackgroundImageFix\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 50,\n    result: \"effect1_foregroundBlur_6806_100665\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_6806_100665\",\n    x1: 0,\n    y1: 0,\n    x2: 42.2707,\n    y2: 160.357,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#F8D1FF\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgApy);\nexport default __webpack_public_path__ + \"static/media/apy.e92b9714a458a3d8c34272011f0e8b3e.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _rect2, _g, _defs;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgMyContribution(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 294,\n    height: 94,\n    viewBox: \"0 0 294 94\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_6806_100674\",\n    style: {\n      maskType: \"alpha\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 0,\n    y: 0,\n    width: 294,\n    height: 94\n  }, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 294,\n    height: 94,\n    fill: \"#212C4C\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.5,\n    y: 0.5,\n    width: 293,\n    height: 93,\n    stroke: \"url(#paint0_linear_6806_100674)\",\n    strokeOpacity: 0.2\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_6806_100674)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_f_6806_100674)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 243.5,\n    cy: 9.5,\n    r: 62.5,\n    fill: \"#00FFA3\",\n    fillOpacity: 0.2\n  })))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_f_6806_100674\",\n    x: 81,\n    y: -153,\n    width: 325,\n    height: 325,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"BackgroundImageFix\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 50,\n    result: \"effect1_foregroundBlur_6806_100674\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_6806_100674\",\n    x1: 0,\n    y1: 0,\n    x2: 42.2707,\n    y2: 160.357,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#F8D1FF\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMyContribution);\nexport default __webpack_public_path__ + \"static/media/my-contribution.4131308b4ed787a3c77c8b39b9cefaea.svg\";\nexport { ForwardRef as ReactComponent };","import { Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { util } from '@sentre/senhub'\n\nimport { Col, Row, Skeleton, Typography } from 'antd'\n\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\nimport CardPoolDetail from './components/cardPoolDetail'\nimport { useTVL } from 'hooks/useTVL'\nimport { useStat } from 'hooks/useStat'\nimport { AppState } from 'model'\n\nimport tvlBg from 'static/images/tvl.svg'\nimport apyBg from 'static/images/apy.svg'\nimport myContributeBg from 'static/images/my-contribution.svg'\n\nconst Hero = ({ poolAddress }: { poolAddress: string }) => {\n  const {\n    pools: { [poolAddress]: poolData },\n  } = useSelector((state: AppState) => state)\n\n  const { TVL } = useTVL(poolAddress)\n\n  const { balance } = useAccountBalanceByMintAddress(\n    poolData.mintLpt.toBase58(),\n  )\n\n  const { apy, loading } = useStat(poolAddress)\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col lg={8} md={8} xs={24}>\n        <CardPoolDetail\n          title=\"TVL\"\n          content={\n            <Typography.Title level={3}>\n              $ {util.numeric(TVL).format('0,0.[00]a')}\n            </Typography.Title>\n          }\n          bg={tvlBg}\n        />\n      </Col>\n      <Col lg={8} md={8} xs={24}>\n        <CardPoolDetail\n          title=\"APY\"\n          content={\n            loading ? (\n              <Skeleton\n                style={{ width: 150 }}\n                active\n                paragraph={{ rows: 1 }}\n                title={false}\n              />\n            ) : (\n              <Typography.Title level={3}>\n                {util.numeric(apy).format('0,0.[00]a%')}\n              </Typography.Title>\n            )\n          }\n          bg={apyBg}\n        />\n      </Col>\n      <Col lg={8} md={8} xs={24}>\n        <CardPoolDetail\n          title=\"My Contribution\"\n          content={\n            <Fragment>\n              <Typography.Title level={3}>\n                {util.numeric(balance).format('0,0.[00]')}\n              </Typography.Title>\n              <Typography.Text type=\"secondary\"> LP</Typography.Text>\n            </Fragment>\n          }\n          bg={myContributeBg}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Hero\n","import { ReactNode } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Avatar } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { MintAvatar } from '@sen-use/app'\n\nimport { AppState } from 'model'\n\ntype PoolAvatarProps = {\n  poolAddress: string\n  size?: number\n  icon?: ReactNode\n  max?: number\n}\n\nexport const PoolAvatar = ({\n  poolAddress,\n  size = 24,\n  icon = <IonIcon name=\"diamond-outline\" />,\n  max,\n}: PoolAvatarProps) => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n\n  return (\n    <Avatar.Group style={{ whiteSpace: 'nowrap' }} maxCount={max} size={size}>\n      {poolData &&\n        poolData.mints.map((mint) => (\n          <MintAvatar\n            mintAddress={mint.toBase58()}\n            size={size}\n            icon={icon}\n            key={mint.toBase58()}\n          />\n        ))}\n    </Avatar.Group>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { tokenProvider } from '@sentre/senhub'\n\nimport { Card, Input, Button } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nconst KEYSIZE = 3\n\nconst Search = ({\n  onChange,\n  disabled = false,\n  mints,\n}: {\n  onChange: (data: string[]) => void\n  disabled?: boolean\n  mints: string[]\n}) => {\n  const [keyword, setKeyword] = useState('')\n\n  const search = useCallback(async () => {\n    if (!keyword || keyword.length < KEYSIZE) return onChange(mints)\n    const raw = await tokenProvider.find(keyword)\n    const data = raw\n      .filter(({ address }) => mints.includes(address))\n      .map(({ address }) => address)\n    // Search by address\n    mints.forEach((mintAddress) => {\n      if (data.includes(mintAddress)) return\n      if (!mintAddress.toLowerCase().includes(keyword.toLowerCase())) return\n      return data.push(mintAddress)\n    })\n    return onChange(data)\n  }, [keyword, onChange, mints])\n\n  useEffect(() => {\n    search()\n  }, [search])\n\n  return (\n    <Card\n      className=\"mint-search\"\n      bodyStyle={{ padding: 0 }}\n      style={{ padding: 8 }}\n      bordered={false}\n    >\n      <Input\n        placeholder=\"Search\"\n        value={keyword}\n        size=\"small\"\n        bordered={false}\n        suffix={\n          <Button\n            type=\"text\"\n            style={{ marginRight: -7 }}\n            size=\"small\"\n            onClick={keyword ? () => setKeyword('') : () => {}}\n            icon={\n              <IonIcon name={keyword ? 'close-outline' : 'search-outline'} />\n            }\n            disabled={disabled}\n          />\n        }\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setKeyword(e.target.value)\n        }\n        disabled={disabled}\n      />\n    </Card>\n  )\n}\n\nexport default Search\n","import { MintAvatar, MintSymbol, MintName } from '@sen-use/app'\nimport { Space, Typography, Card, Divider } from 'antd'\n\nconst Mint = ({\n  mintAddress,\n  onClick,\n  active = false,\n}: {\n  mintAddress: string\n  onClick: () => void\n  active?: boolean\n}) => {\n  return (\n    <Card\n      bodyStyle={{\n        padding: 0,\n      }}\n      className=\"card-child-balansol mint-select-item\"\n      bordered={active}\n      onClick={onClick}\n      hoverable\n    >\n      <Space size={12} style={{ display: 'flex' }}>\n        <MintAvatar mintAddress={mintAddress} size={32} />\n        <Typography.Text style={{ margin: 0 }}>\n          <MintSymbol mintAddress={mintAddress} />\n        </Typography.Text>\n        <Divider type=\"vertical\" style={{ margin: 0 }} />\n        <Typography.Text type=\"secondary\" style={{ margin: 0, fontSize: 12 }}>\n          <MintName mintAddress={mintAddress} />\n        </Typography.Text>\n      </Space>\n    </Card>\n  )\n}\n\nexport default Mint\n","import { useState } from 'react'\nimport LazyLoad from '@sentre/react-lazyload'\n\nimport { Row, Col, Typography, Modal } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport Search from './search'\nimport Mint from './mint'\n\nconst LIMIT = 100\n\nconst MintSelection = ({\n  selectedMint,\n  onChange,\n  visible,\n  mints,\n  onClose,\n}: {\n  selectedMint: string\n  onChange: (mint: string) => void\n  visible: boolean\n  mints: string[]\n  onClose: () => void\n}) => {\n  const [mintsSearched, setMintsSearched] = useState(mints)\n\n  return (\n    <Modal\n      open={visible}\n      closeIcon={<IonIcon name=\"close\" />}\n      footer={null}\n      destroyOnClose={true}\n      centered={true}\n      onCancel={onClose}\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={4}>Select token</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Search mints={mints} onChange={setMintsSearched} />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[16, 16]} style={{ height: 300 }} className=\"scrollbar\">\n            <Col span={24}>\n              <Row gutter={[16, 16]}>\n                {mintsSearched.slice(0, LIMIT).map((mintAddress, i) => (\n                  <Col span={24} key={i}>\n                    <LazyLoad height={48} overflow>\n                      <Mint\n                        mintAddress={mintAddress}\n                        onClick={() => onChange(mintAddress)}\n                        active={selectedMint === mintAddress}\n                      />\n                    </LazyLoad>\n                  </Col>\n                ))}\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default MintSelection\n","import { useState, Fragment, ReactNode } from 'react'\n\nimport { Typography, Space } from 'antd'\nimport { MintAvatar, MintSymbol } from '@sen-use/app'\nimport IonIcon from '@sentre/antd-ionicon'\nimport MintSelection from './mintSelection'\n\nimport './index.less'\n\nconst Selection = ({\n  selectedMint,\n  mints = [],\n  onChange = () => {},\n  mintLabel,\n  mintAvatar,\n}: {\n  selectedMint: string\n  mints?: string[]\n  onChange?: (mint: string) => void\n  mintLabel?: ReactNode\n  mintAvatar?: ReactNode\n}) => {\n  const [visible, setVisible] = useState(false)\n\n  const onSelection = (selectedMint: string) => {\n    if (onChange) onChange(selectedMint)\n    return setVisible(false)\n  }\n\n  return (\n    <Fragment>\n      {/* Mint selected */}\n\n      <Space\n        className=\"mint-select\"\n        onClick={() => setVisible(mints.length > 0)}\n      >\n        {mintAvatar || <MintAvatar mintAddress={selectedMint} />}\n        {mintLabel || (\n          <Fragment>\n            <Typography.Text>\n              <MintSymbol mintAddress={selectedMint} />\n            </Typography.Text>\n            {mints.length ? (\n              <Typography.Text>\n                <IonIcon name=\"chevron-down-outline\" />\n              </Typography.Text>\n            ) : null}\n          </Fragment>\n        )}\n      </Space>\n\n      {/* Modal select tokens */}\n      {visible && (\n        <MintSelection\n          selectedMint={selectedMint}\n          visible={visible}\n          onChange={onSelection}\n          mints={mints}\n          onClose={() => setVisible(false)}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default Selection\n","import { utilsBN } from '@sen-use/web3'\nimport { BN } from '@project-serum/anchor'\nimport { useMemo } from 'react'\n\nimport { useWalletBalance } from '@sentre/senhub'\nimport { NATIVE_MINT } from '@solana/spl-token-v3'\n\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\nimport { SOL_DECIMALS } from 'constant'\n\nexport const useWrapAccountBalance = (mintAddress: string) => {\n  const lamports = useWalletBalance()\n\n  const balance = useAccountBalanceByMintAddress(mintAddress)\n  const wsol = useAccountBalanceByMintAddress(NATIVE_MINT.toBase58())\n\n  const totalSolBalance = useMemo(() => {\n    const total = wsol.amount.add(new BN(lamports))\n    const totalBalance = Number(utilsBN.undecimalize(total, SOL_DECIMALS))\n    return { balance: totalBalance, amount: total }\n  }, [lamports, wsol.amount])\n\n  return mintAddress === NATIVE_MINT.toBase58() ? totalSolBalance : balance\n}\n","import React, { useMemo } from 'react'\nimport { useTheme } from '@sentre/senhub'\nimport { BN } from '@project-serum/anchor'\n\nimport { Radio, Space, Typography } from 'antd'\n\nimport { useWrapAccountBalance } from 'hooks/useWrapAccountBalance'\nimport { useOracles } from 'hooks/useOracles'\n\nconst PROPORTIONS = [50, 100]\n\ntype ProportionProps = {\n  selectedMint: string\n  amount: number | string\n  portionValue: number\n  onChangeAmount?: (val: string, invalid?: boolean) => void\n}\n\nconst Proportion = ({\n  amount,\n  selectedMint,\n  portionValue,\n  onChangeAmount,\n}: ProportionProps) => {\n  const theme = useTheme()\n  const { balance, amount: bigintBalance } = useWrapAccountBalance(selectedMint)\n  const { undecimalizeMintAmount } = useOracles()\n\n  let proportionActive = useMemo(() => {\n    let activePortion = 0\n    for (const idx in PROPORTIONS) {\n      if (!balance) break\n      const proportion = PROPORTIONS[idx]\n      const proportionVal = (balance * proportion) / 100\n\n      if (Number(amount).toFixed(4) === proportionVal.toFixed(4))\n        activePortion = proportion\n    }\n    return activePortion\n  }, [amount, balance])\n\n  const onClick = async () => {\n    if (!onChangeAmount) return\n    const newAmountBN = new BN(bigintBalance.toString())\n      .mul(new BN(portionValue))\n      .divRound(new BN(100))\n    const newAmount = await undecimalizeMintAmount(newAmountBN, selectedMint)\n    onChangeAmount(newAmount)\n  }\n\n  const bg_default = theme === 'dark' ? '#394360' : '#ced0d7'\n\n  return (\n    <Space size={4} direction=\"vertical\" key={portionValue}>\n      <Radio.Button\n        className=\"proportion-btn\"\n        disabled={!onChangeAmount}\n        onClick={onClick}\n        style={{\n          background: portionValue <= proportionActive ? '#63e0b3' : bg_default,\n        }}\n      />\n      <Typography.Text type=\"secondary\" className=\"caption\">\n        {`${portionValue}%`}\n      </Typography.Text>\n    </Space>\n  )\n}\n\nexport default Proportion\n","import { ReactNode, useCallback } from 'react'\nimport { util } from '@sentre/senhub'\n\nimport { Col, Row, Space, Typography } from 'antd'\nimport NumericInput from '../numericInput'\nimport Selection from '../selection'\nimport { MintSymbol } from '@sen-use/app'\nimport Proportion from './proportion'\n\nimport { useWrapAccountBalance } from 'hooks/useWrapAccountBalance'\n\nimport './index.less'\n\nconst PROPORTIONS = [50, 100]\ntype MintInputProps = {\n  amount: string | number\n  onChangeAmount?: (val: string, invalid?: boolean) => void\n  selectedMint: string\n  onSelect?: (mint: string) => void\n  mints?: string[]\n  unit?: string\n  force?: boolean\n  mintLabel?: ReactNode\n  mintAvatar?: ReactNode\n  ratioButton?: ReactNode\n  mintSelection?: ReactNode\n  footer?: ReactNode\n  placeholder?: string\n}\n\nexport default function MintInput({\n  amount,\n  onChangeAmount,\n  selectedMint,\n  mints = [],\n  onSelect = () => {},\n  mintLabel,\n  mintAvatar,\n  ratioButton,\n  unit,\n  force, // Validate input with max = balance\n  mintSelection,\n  footer,\n  placeholder = '0',\n}: MintInputProps) {\n  const { balance } = useWrapAccountBalance(selectedMint)\n\n  const onInput = useCallback(\n    (value: string) => {\n      if (!onChangeAmount) return\n      const invalidValue = Number(value) > balance && !!onChangeAmount\n      return onChangeAmount(value, invalidValue)\n    },\n    [balance, onChangeAmount],\n  )\n\n  return (\n    <Row gutter={[0, 10]} align=\"middle\" className=\"card-swap-item\">\n      <Col span={24}>\n        <Row gutter={[10, 0]} wrap={false} align=\"middle\">\n          {/* Mint select */}\n          <Col>\n            {!mintSelection ? (\n              <Selection\n                selectedMint={selectedMint}\n                onChange={onSelect}\n                mints={mints}\n                mintLabel={mintLabel}\n                mintAvatar={mintAvatar}\n              />\n            ) : (\n              mintSelection\n            )}\n          </Col>\n          {/* Amount input */}\n          <Col flex=\"auto\">\n            <NumericInput\n              bordered={false}\n              controls={false}\n              placeholder={String(Number(placeholder))}\n              value={amount}\n              max={force ? balance : undefined}\n              onValue={onInput}\n              disabled={!onChangeAmount || (force && !balance)}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row align=\"middle\" style={{ width: '100%' }} wrap={false}>\n          {/* Available  */}\n          <Col flex=\"auto\" style={{ justifyContent: 'left' }}>\n            <Space className=\"caption\">\n              <Typography.Text type=\"secondary\">Available:</Typography.Text>\n              <Typography.Text style={{ cursor: 'pointer' }}>\n                {util.numeric(balance).format('0,0.[00]')}\n              </Typography.Text>\n              <Typography.Text type=\"secondary\">\n                {unit || <MintSymbol mintAddress={selectedMint} />}\n              </Typography.Text>\n            </Space>\n          </Col>\n          {/* RatioButton  */}\n          <Col\n            className=\"proportion-wrap\"\n            style={{ display: ratioButton === null ? 'none' : '' }}\n          >\n            {ratioButton ? (\n              ratioButton\n            ) : (\n              <Space>\n                {PROPORTIONS.map((val, key) => (\n                  <Proportion\n                    key={key}\n                    amount={amount}\n                    selectedMint={selectedMint}\n                    portionValue={val}\n                    onChangeAmount={onChangeAmount}\n                  />\n                ))}\n              </Space>\n            )}\n          </Col>\n        </Row>\n      </Col>\n      {footer}\n    </Row>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { Address, BN, web3 } from '@project-serum/anchor'\nimport { useGetMintData } from '@sentre/senhub'\n\nexport const useLptSupply = (mintLpt: Address) => {\n  const [supply, setSupply] = useState<BN>(new BN(0))\n\n  const getMint = useGetMintData()\n\n  const fetchLptSupply = useCallback(async () => {\n    if (!mintLpt) return setSupply(new BN(0))\n    let mintAddress = new web3.PublicKey(mintLpt).toString()\n    try {\n      const supply = await getMint({ mintAddress }).then((data) =>\n        !!data ? data[mintAddress].supply.toString() : '0',\n      )\n      return setSupply(new BN(supply))\n    } catch (error) {}\n  }, [getMint, mintLpt])\n\n  useEffect(() => {\n    fetchLptSupply()\n  }, [fetchLptSupply])\n\n  return { supply }\n}\n","import { utilsBN } from '@sen-use/web3'\nimport { BN, utils, web3 } from '@project-serum/anchor'\nimport { useCallback } from 'react'\nimport {\n  useAccounts,\n  useGetMintDecimals,\n  useWalletAddress,\n  useWalletBalance,\n  util,\n} from '@sentre/senhub'\nimport { DEFAULT_EMPTY_ADDRESS, DEFAULT_WSOL } from '@senswap/sen-js'\n\nexport const useMintBalance = () => {\n  const walletAddress = useWalletAddress()\n  const lamports = useWalletBalance()\n  const getDecimals = useGetMintDecimals()\n  const accounts = useAccounts()\n\n  const buildResult = (\n    mintAddress?: string,\n    amount?: BN,\n    decimals?: number,\n  ) => {\n    if (\n      !util.isAddress(mintAddress) ||\n      amount === undefined ||\n      decimals === undefined\n    )\n      return { amount: new BN(0), decimals: 0, balance: 0 }\n    return {\n      mintAddress,\n      amount,\n      decimals,\n      balance: Number(utilsBN.undecimalize(amount, decimals)),\n    }\n  }\n\n  const getMintBalance = useCallback(\n    async (addressToken: string, wrapSol: boolean = false) => {\n      if (!util.isAddress(walletAddress) || !util.isAddress(addressToken))\n        return buildResult()\n      try {\n        const accountAddress = await utils.token\n          .associatedAddress({\n            mint: new web3.PublicKey(addressToken),\n            owner: new web3.PublicKey(walletAddress),\n          })\n          .then((r) => r.toBase58())\n\n        const isWsolAddress = addressToken === DEFAULT_WSOL\n        const isSolAddress = accountAddress === walletAddress\n        if (isSolAddress || isWsolAddress) {\n          const { amount = BigInt(0) } = accounts[accountAddress] || {}\n          const mintAddress = isWsolAddress\n            ? DEFAULT_WSOL\n            : DEFAULT_EMPTY_ADDRESS\n          const returnedBalance = isWsolAddress\n            ? new BN(amount?.toString() || 0)\n            : new BN(lamports?.toString() || 0)\n\n          if (wrapSol)\n            return buildResult(\n              mintAddress,\n              new BN(lamports?.toString() || 0 + amount?.toString() || 0),\n              9,\n            )\n\n          return buildResult(mintAddress, returnedBalance, 9)\n        }\n        const { amount, mint: mintAddress } = accounts[accountAddress] || {}\n        const decimals = await getDecimals({ mintAddress })\n\n        return buildResult(\n          mintAddress,\n          new BN(amount?.toString() || 0),\n          decimals,\n        )\n      } catch (er) {\n        return buildResult()\n      }\n    },\n    [accounts, getDecimals, lamports, walletAddress],\n  )\n\n  return { getMintBalance }\n}\n","import { useCallback } from 'react'\nimport { web3 } from '@project-serum/anchor'\nimport {\n  NATIVE_MINT,\n  getAssociatedTokenAddress,\n  createSyncNativeInstruction,\n} from '@solana/spl-token-v3'\nimport { useAccounts, useWalletAddress } from '@sentre/senhub'\nimport { utils } from '@senswap/sen-js'\n\nimport { SOL_DECIMALS } from 'constant'\nimport { createWrapSolIx, createATAIx, createUnWrapSolIx } from 'helper'\nimport { useMintBalance } from './useMintBalance'\n\nexport const useWrapAndUnwrapSolIfNeed = () => {\n  const { getMintBalance } = useMintBalance()\n  const walletAddress = useWalletAddress()\n  const accounts = useAccounts()\n\n  const createWrapSolTxIfNeed = useCallback(\n    async (\n      mint: string,\n      amount: number | string,\n    ): Promise<web3.Transaction | undefined> => {\n      const tx = new web3.Transaction()\n      const { balance } = await getMintBalance(mint)\n      if (mint !== NATIVE_MINT.toBase58() || balance >= amount) return\n\n      const decimalizedAmount = utils.decimalize(amount, SOL_DECIMALS)\n      const decimalizedBalance = utils.decimalize(balance, SOL_DECIMALS)\n      const neededWrappedSol = decimalizedAmount - decimalizedBalance\n      const wSolATA = await getAssociatedTokenAddress(\n        NATIVE_MINT,\n        new web3.PublicKey(walletAddress),\n      )\n      // Create token account to hold your wrapped SOL if haven't existed\n      if (!accounts[wSolATA.toBase58()]) {\n        const creatingATAIx = await createATAIx(\n          new web3.PublicKey(walletAddress),\n        )\n        tx.add(creatingATAIx)\n      }\n      const wSolIx = await createWrapSolIx(\n        neededWrappedSol,\n        new web3.PublicKey(walletAddress),\n      )\n      tx.add(wSolIx, createSyncNativeInstruction(wSolATA))\n\n      return tx\n    },\n    [accounts, getMintBalance, walletAddress],\n  )\n\n  const createUnWrapSolTxIfNeed = async (\n    mint: string,\n  ): Promise<web3.Transaction | undefined> => {\n    if (mint !== NATIVE_MINT.toBase58()) return\n    const uwSolIx = await createUnWrapSolIx(new web3.PublicKey(walletAddress))\n    return new web3.Transaction().add(uwSolIx)\n  }\n\n  return { createWrapSolTxIfNeed, createUnWrapSolTxIfNeed }\n}\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { getAnchorProvider, useGetMintDecimals, util } from '@sentre/senhub'\nimport { web3, BN } from '@project-serum/anchor'\n\nimport { Button, Checkbox, Col, Row, Tooltip, Typography } from 'antd'\nimport { MintSymbol } from '@sen-use/app'\nimport MintInput from 'components/mintInput'\n\nimport { notifyError, notifySuccess, priceImpactColor } from 'helper'\nimport { calcDepositPriceImpact, calcNormalizedWeight } from 'helper/oracles'\nimport { useOracles } from 'hooks/useOracles'\nimport { useLptSupply } from 'hooks/useLptSupply'\nimport { useMintBalance } from 'hooks/useMintBalance'\nimport { PriceImpact } from 'constant'\nimport { AppState } from 'model'\nimport { useWrapAndUnwrapSolIfNeed } from 'hooks/useWrapAndUnwrapSolIfNeed'\n\ntype DepositModalProps = {\n  poolAddress: string\n  hideModal: () => void\n}\n\nconst DepositModal = ({ poolAddress, hideModal }: DepositModalProps) => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const [amounts, setAmounts] = useState<string[]>(\n    new Array(poolData.mints.length).fill('0'),\n  )\n  const [suggestedAmounts, setSuggestAmounts] = useState<string[]>([])\n  const [loading, setLoading] = useState(false)\n  const [disable, setDisable] = useState(true)\n  const [isAcceptHighPrice, setIsAcceptHighPrice] = useState(false)\n  const [baseTokenIndex, setBaseTokenIndex] = useState(0)\n  const [lpOutTotal, setLpOutTotal] = useState(0)\n  const [impactPrice, setImpactPrice] = useState(0)\n  const { supply } = useLptSupply(poolData.mintLpt)\n  const { decimalizeMintAmount, undecimalizeMintAmount } = useOracles()\n  const getDecimals = useGetMintDecimals()\n  const { getMintBalance } = useMintBalance()\n  const { createWrapSolTxIfNeed } = useWrapAndUnwrapSolIfNeed()\n\n  const isVisibleSuggestion = (idx: number) =>\n    baseTokenIndex !== idx &&\n    Number(amounts[baseTokenIndex]) > 0 &&\n    Number(suggestedAmounts[idx]) > 0 &&\n    Number(suggestedAmounts[idx]) !== Number(amounts[idx])\n\n  const onChange = async (idx: number, value: string) => {\n    const { reserves, mints } = poolData\n    let newAmounts = [...amounts]\n    newAmounts[idx] = value\n    setAmounts(newAmounts)\n    setBaseTokenIndex(idx)\n    setAmounts(newAmounts)\n\n    const newSuggestAmounts = await Promise.all(\n      mints.map(async (mint, index) => {\n        if (idx === index) return ''\n        const mintDecimal =\n          (await getDecimals({ mintAddress: mints[index].toBase58() })) || 0\n        const baseBalance = await undecimalizeMintAmount(\n          reserves[baseTokenIndex],\n          mints[baseTokenIndex],\n        )\n        const currentBalance = await undecimalizeMintAmount(\n          reserves[index],\n          mints[index],\n        )\n        const balanceRatio =\n          (Number(baseBalance) + Number(value)) / Number(baseBalance)\n        const suggestedAmount = (\n          Number(currentBalance) *\n          (balanceRatio - 1)\n        ).toFixed(mintDecimal)\n\n        return suggestedAmount\n      }),\n    )\n    setSuggestAmounts(newSuggestAmounts)\n  }\n\n  const onSubmit = async () => {\n    setLoading(true)\n    try {\n      const provider = getAnchorProvider()!\n      const amountsIn = await Promise.all(\n        poolData.mints.map(\n          async (mint, idx) => await decimalizeMintAmount(amounts[idx], mint),\n        ),\n      )\n      const transactions: web3.Transaction[] = []\n\n      for (const key in poolData.mints) {\n        const wrapSolTx = await createWrapSolTxIfNeed(\n          poolData.mints[key].toBase58(),\n          amounts[key],\n        )\n        if (wrapSolTx) transactions.push(wrapSolTx)\n      }\n\n      const { tx: addLiquidityTx } = await window.balansol.addLiquidity(\n        poolAddress,\n        amountsIn,\n        false,\n      )\n      transactions.push(addLiquidityTx)\n      const txIds = await provider.sendAll(\n        transactions.map((tx) => {\n          return { tx, signers: [] }\n        }),\n      )\n      notifySuccess('Deposit', txIds[txIds.length - 1])\n      hideModal()\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const lpOutDisplay = useMemo(() => {\n    const clonedLp = util.numeric(lpOutTotal).format('0,0.[0000]')\n    if (lpOutTotal > 0 && lpOutTotal < 0.0001) return 'LP < 0.0001'\n\n    return clonedLp\n  }, [lpOutTotal])\n\n  const estimateImpactPriceAndLP = useCallback(async () => {\n    setImpactPrice(0)\n    const { reserves, weights, fee, taxFee, mints } = poolData\n    let amountIns: BN[] = []\n    let decimalIns: number[] = []\n    for (let i in amounts) {\n      const decimalIn =\n        (await getDecimals({ mintAddress: mints[i].toBase58() })) || 0\n      const amountBn = await decimalizeMintAmount(amounts[i], mints[i])\n      amountIns.push(amountBn)\n      decimalIns.push(decimalIn)\n    }\n    const { lpOut, impactPrice } = calcDepositPriceImpact(\n      amountIns,\n      reserves,\n      weights,\n      supply,\n      decimalIns,\n      fee.add(taxFee),\n    )\n    setLpOutTotal(lpOut)\n    setImpactPrice(impactPrice)\n  }, [amounts, decimalizeMintAmount, getDecimals, poolData, supply])\n\n  useEffect(() => {\n    estimateImpactPriceAndLP()\n  }, [estimateImpactPriceAndLP])\n\n  const checkAmountIns = useCallback(async () => {\n    const { mints } = poolData\n    for (let i in amounts) {\n      const { balance } = await getMintBalance(mints[i].toBase58(), true)\n      if (Number(amounts[i]) > balance) return setDisable(true)\n    }\n    if (!lpOutTotal) return setDisable(true)\n    if (impactPrice > PriceImpact.acceptableSwap && !isAcceptHighPrice)\n      return setDisable(true)\n\n    return setDisable(false)\n  }, [\n    amounts,\n    getMintBalance,\n    impactPrice,\n    isAcceptHighPrice,\n    lpOutTotal,\n    poolData,\n  ])\n\n  useEffect(() => {\n    checkAmountIns()\n  }, [checkAmountIns])\n\n  const onApplySuggestion = async (index: number) => {\n    const newAmounts = [...amounts]\n    newAmounts[index] = suggestedAmounts[index]\n    setAmounts(newAmounts)\n  }\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Typography.Title level={4}>Deposit</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 8]}>\n          {poolData.mints.map((mint, index) => {\n            let mintAddress: string = mint.toBase58()\n            const normalizedWeight = calcNormalizedWeight(\n              poolData.weights,\n              poolData.weights[index],\n            )\n            return (\n              <Col span={24} key={mint.toBase58()}>\n                <MintInput\n                  selectedMint={mintAddress}\n                  amount={amounts[index]}\n                  onChangeAmount={(amount) => onChange(index, amount)}\n                  mintLabel={\n                    <Fragment>\n                      <Typography.Text>\n                        <MintSymbol mintAddress={mintAddress || ''} />\n                      </Typography.Text>\n                      <Typography.Text>\n                        {util.numeric(normalizedWeight).format('0,0.[0000]%')}\n                      </Typography.Text>\n                    </Fragment>\n                  }\n                  ratioButton={\n                    isVisibleSuggestion(index) && (\n                      <Tooltip title={suggestedAmounts[index]}>\n                        <Button\n                          type=\"text\"\n                          style={{ marginRight: -15 }}\n                          onClick={() => onApplySuggestion(index)}\n                        >\n                          Apply suggestion\n                        </Button>\n                      </Tooltip>\n                    )\n                  }\n                />\n              </Col>\n            )\n          })}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[0, 13]}>\n          <Col span={24}>\n            <Row align=\"middle\">\n              <Col flex=\"auto\">\n                <Typography.Text type=\"secondary\">Price impact</Typography.Text>\n              </Col>\n              <Col>\n                <span style={{ color: priceImpactColor(impactPrice) }}>\n                  {util.numeric(impactPrice).format('0,0.[0000]%')}\n                </span>\n              </Col>\n            </Row>\n          </Col>\n          <Col span={24}>\n            <Row align=\"middle\">\n              <Col flex=\"auto\">\n                <Typography.Text type=\"secondary\">\n                  You will receive\n                </Typography.Text>\n              </Col>\n              <Col>\n                <Typography.Title level={4}>{lpOutDisplay} LP</Typography.Title>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n      {impactPrice > PriceImpact.acceptableSwap && (\n        <Col span={24}>\n          <Checkbox\n            onChange={(e) => setIsAcceptHighPrice(e.target.checked)}\n            checked={isAcceptHighPrice}\n          >\n            I agree to execute this trade with the high price impact.\n          </Checkbox>\n        </Col>\n      )}\n      <Col span={24}>\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          block\n          onClick={onSubmit}\n          loading={loading}\n          disabled={disable}\n        >\n          Deposit\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DepositModal\n","import { Fragment, useState } from 'react'\n\nimport { Button, Modal } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport DepositModal from './depositModal'\n\nconst Deposit = ({ poolAddress }: { poolAddress: string }) => {\n  const [visible, setVisible] = useState(false)\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setVisible(true)} block>\n        Deposit\n      </Button>\n      {/* Modal deposit */}\n      <Modal\n        open={visible}\n        onCancel={() => setVisible(false)}\n        footer={null}\n        destroyOnClose\n        centered={true}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n      >\n        <DepositModal\n          poolAddress={poolAddress}\n          hideModal={() => setVisible(false)}\n        />\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Deposit\n","import { BN } from '@project-serum/anchor'\nimport { MintAvatar, MintSymbol, MintAmount } from '@sen-use/app'\nimport { Col, Row, Space, Typography } from 'antd'\n\nconst TokenWillReceive = ({\n  mintAddress,\n  amount,\n}: {\n  mintAddress: string\n  amount: BN\n}) => {\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <Space>\n          <MintAvatar mintAddress={mintAddress} />\n          <Typography.Text type=\"secondary\">\n            <MintSymbol mintAddress={mintAddress} />\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col>\n        <Typography.Text>\n          <MintAmount mintAddress={mintAddress} amount={amount} />\n        </Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nexport default TokenWillReceive\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BN } from '@project-serum/anchor'\nimport { initTxCreateMultiTokenAccount } from '@sen-use/web3'\nimport { useGetMintData, getAnchorProvider } from '@sentre/senhub'\n\nimport { Button, Col, Row, Typography } from 'antd'\nimport TokenWillReceive from '../tokenWillReceive'\n\nimport { notifyError, notifySuccess } from 'helper'\nimport { calcMintReceivesRemoveFullSide } from 'helper/oracles'\nimport { AppState } from 'model'\nimport { LPTDECIMALS } from 'constant/index'\nimport { useOracles } from 'hooks/useOracles'\nimport { useWrapAndUnwrapSolIfNeed } from 'hooks/useWrapAndUnwrapSolIfNeed'\n\nconst WithdrawFullSide = ({\n  poolAddress,\n  lptAmount,\n  onSuccess = () => {},\n}: {\n  lptAmount: string\n  poolAddress: string\n  onSuccess?: () => void\n}) => {\n  const [amounts, setAmounts] = useState<BN[]>([])\n  const [loading, setLoading] = useState(false)\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const getMint = useGetMintData()\n  const { decimalize } = useOracles()\n  const { createUnWrapSolTxIfNeed } = useWrapAndUnwrapSolIfNeed()\n\n  const onSubmit = async () => {\n    try {\n      setLoading(true)\n      let amount = decimalize(lptAmount, LPTDECIMALS)\n      const provider = getAnchorProvider()!\n\n      const transactions = await initTokenAccountTxs()\n      const { transaction } =\n        await window.balansol.createRemoveLiquidityTransaction(\n          poolAddress,\n          amount,\n        )\n      transactions.push(transaction)\n\n      for (const mint of poolData.mints) {\n        const unwrapSolTx = await createUnWrapSolTxIfNeed(mint.toBase58())\n        if (unwrapSolTx) transactions.push(unwrapSolTx)\n      }\n      const txIds = await provider.sendAll(\n        transactions.map((tx) => {\n          return { tx, signers: [] }\n        }),\n      )\n      notifySuccess('Withdraw', txIds[txIds.length - 1])\n      onSuccess()\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  async function initTokenAccountTxs() {\n    const provider = getAnchorProvider()!\n    const transactions = await initTxCreateMultiTokenAccount(provider, {\n      mints: poolData.mints,\n    })\n    return transactions\n  }\n\n  const calcMintReceiveFullSide = useCallback(async () => {\n    let minPltAddress = poolData.mintLpt.toBase58()\n    let mintPool = await getMint({ mintAddress: minPltAddress })\n    if (!mintPool) {\n      const emptyAmounts = new Array(poolData.reserves.length).fill(new BN(0))\n      return setAmounts(emptyAmounts)\n    }\n    let lptSupply = mintPool[minPltAddress]?.supply\n    let amount = await decimalize(lptAmount, LPTDECIMALS)\n\n    let amounts = calcMintReceivesRemoveFullSide(\n      new BN(String(amount)),\n      new BN(String(lptSupply)),\n      poolData.reserves,\n    )\n    return setAmounts(amounts)\n  }, [decimalize, getMint, lptAmount, poolData.mintLpt, poolData.reserves])\n\n  useEffect(() => {\n    calcMintReceiveFullSide()\n  }, [calcMintReceiveFullSide])\n\n  return (\n    <Row gutter={[0, 24]} className=\"withdraw\">\n      <Col span={24}>\n        <Row gutter={[0, 14]}>\n          <Col span={24}>\n            <Typography.Text type=\"secondary\" style={{ fontSize: '12px' }}>\n              You will receive\n            </Typography.Text>\n          </Col>\n          {poolData.mints.map((mint, index) => (\n            <Col span={24} key={mint.toBase58()}>\n              <TokenWillReceive\n                key={index}\n                mintAddress={mint.toBase58()}\n                amount={amounts[index]}\n              />\n            </Col>\n          ))}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          block\n          onClick={onSubmit}\n          size=\"large\"\n          loading={loading}\n          disabled={!Number(lptAmount)}\n        >\n          Withdraw\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default WithdrawFullSide\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BN } from '@project-serum/anchor'\nimport { getAnchorProvider, useGetMintDecimals, util } from '@sentre/senhub'\nimport { web3 } from '@project-serum/anchor'\n\nimport { Button, Col, Row, Typography } from 'antd'\nimport TokenWillReceive from '../tokenWillReceive'\n\nimport { calcWithdrawPriceImpact } from 'helper/oracles'\nimport { notifyError, notifySuccess, priceImpactColor } from 'helper'\nimport { AppState } from 'model'\nimport { LPTDECIMALS } from 'constant/index'\nimport { useOracles } from 'hooks/useOracles'\nimport { useLptSupply } from 'hooks/useLptSupply'\nimport { useWrapAndUnwrapSolIfNeed } from 'hooks/useWrapAndUnwrapSolIfNeed'\n\nimport './index.less'\n\ntype WithdrawSingleSideProps = {\n  lptAmount: string\n  poolAddress: string\n  mintAddress: string\n  onSuccess?: () => void\n  withdrawableMax: number\n}\n\nconst WithdrawSingleSide = ({\n  poolAddress,\n  lptAmount,\n  mintAddress,\n  onSuccess = () => {},\n  withdrawableMax,\n}: WithdrawSingleSideProps) => {\n  const [amountReserve, setAmountReserve] = useState<BN>(new BN(0))\n  const [impactPrice, setImpactPrice] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const getDecimals = useGetMintDecimals()\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const { decimalize } = useOracles()\n  const { supply } = useLptSupply(poolData.mintLpt)\n  const { createUnWrapSolTxIfNeed } = useWrapAndUnwrapSolIfNeed()\n\n  const isExceedWithdrawLimitation = Number(lptAmount) > withdrawableMax\n\n  const onSubmit = async () => {\n    if (Number(lptAmount) > withdrawableMax)\n      return notifyError({\n        message: 'Please input amount less than 30% Liquidity Provider!',\n      })\n\n    try {\n      setLoading(true)\n      const transactions: web3.Transaction[] = []\n      const provider = getAnchorProvider()!\n      let lptAmountBN = decimalize(lptAmount, LPTDECIMALS)\n      const { tx: transaction } = await window.balansol.removeSidedLiquidity(\n        poolAddress,\n        mintAddress,\n        lptAmountBN,\n        false,\n      )\n      transactions.push(transaction)\n\n      const unwrapSolTx = await createUnWrapSolTxIfNeed(mintAddress)\n      if (unwrapSolTx) transactions.push(unwrapSolTx)\n\n      const txIds = await provider.sendAll(\n        transactions.map((tx) => {\n          return { tx, signers: [] }\n        }),\n      )\n\n      notifySuccess('Withdraw', txIds[txIds.length - 1])\n      onSuccess()\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const estimateImpactPriceAndLP = useCallback(async () => {\n    let amount = decimalize(lptAmount, LPTDECIMALS)\n    setImpactPrice(0)\n\n    let decimals: number[] = []\n\n    for (let i in poolData.reserves) {\n      const decimalIn =\n        (await getDecimals({\n          mintAddress: poolData.mints[i].toBase58(),\n        })) || 0\n      decimals.push(decimalIn)\n    }\n    const indexTokenOut = poolData.mints\n      .map((value) => value.toBase58())\n      .indexOf(mintAddress)\n\n    const { tokenAmountOut, impactPrice } = calcWithdrawPriceImpact(\n      amount,\n      indexTokenOut,\n      poolData.reserves,\n      poolData.weights,\n      supply,\n      decimals,\n      poolData.fee.add(poolData.taxFee),\n    )\n    setAmountReserve(tokenAmountOut || new BN(0))\n    setImpactPrice(impactPrice)\n  }, [decimalize, getDecimals, lptAmount, mintAddress, poolData, supply])\n\n  useEffect(() => {\n    estimateImpactPriceAndLP()\n  }, [estimateImpactPriceAndLP])\n\n  return (\n    <Row gutter={[12, 12]} className=\"withdraw\">\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Typography.Text type=\"secondary\" style={{ fontSize: '14px' }}>\n              Price impact\n            </Typography.Text>\n          </Col>\n          <Col>\n            <span style={{ color: priceImpactColor(impactPrice) }}>\n              {util.numeric(impactPrice).format('0,0.[0000]%')}\n            </span>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[14, 14]}>\n          <Col span={24}>\n            <Typography.Text type=\"secondary\" style={{ fontSize: '14px' }}>\n              You will receive\n            </Typography.Text>\n          </Col>\n          <Col span={24}>\n            <TokenWillReceive\n              mintAddress={mintAddress}\n              amount={amountReserve}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[0, 8]}>\n          <Col span={24}>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              block\n              onClick={onSubmit}\n              disabled={amountReserve.isZero() || isExceedWithdrawLimitation}\n              loading={loading}\n            >\n              Withdraw\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default WithdrawSingleSide\n","import React, { useState, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { utils } from '@senswap/sen-js'\nimport { util } from '@sentre/senhub'\n\nimport { Button, Checkbox, Col, Row, Space, Tag, Typography } from 'antd'\nimport { MintSymbol } from '@sen-use/app'\nimport MintInput from 'components/mintInput'\nimport { PoolAvatar } from 'components/pools/poolAvatar'\nimport WithdrawFullSide from './fullSide'\nimport WithdrawSingleSide from './singleSide'\n\nimport { useLptSupply } from 'hooks/useLptSupply'\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\n\nimport { LPTDECIMALS } from 'constant'\nimport { AppState } from 'model'\n\ntype WithdrawModalProps = {\n  poolAddress: string\n  hideModal: () => void\n}\n\nconst WithdrawModal = ({ poolAddress, hideModal }: WithdrawModalProps) => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const mints = useMemo(() => {\n    if (!poolData) return []\n    return poolData.mints.map((e) => e.toBase58())\n  }, [poolData])\n  const [selectedMints, setSelectedMints] = useState<string[]>(mints)\n  const [lptAmount, setLptAmount] = useState('')\n  const [acceptWithdrawLimit, setAcceptWithdrawLimit] = useState(true)\n  const { balance } = useAccountBalanceByMintAddress(\n    poolData.mintLpt.toBase58(),\n  )\n  const { supply } = useLptSupply(poolData.mintLpt)\n\n  const supplyInNumber = useMemo(() => {\n    return Number(utils.undecimalize(BigInt(supply.toString()), LPTDECIMALS))\n  }, [supply])\n\n  const recommendedMax = useMemo(() => {\n    return Number(((supplyInNumber * 30) / 100).toFixed(LPTDECIMALS))\n  }, [supplyInNumber])\n\n  const maxAmount = useMemo(() => {\n    return !acceptWithdrawLimit || recommendedMax > balance\n      ? balance\n      : recommendedMax\n  }, [acceptWithdrawLimit, balance, recommendedMax])\n\n  const isSelectedAll = selectedMints.length === poolData?.mints.length\n\n  return (\n    <Row gutter={[24, 24]} className=\"withdraw\">\n      <Col span={24}>\n        <Typography.Title level={4}>Withdraw</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col span={24}>\n            <Typography.Text type=\"secondary\" style={{ fontSize: '12px' }}>\n              You want to receive\n            </Typography.Text>\n          </Col>\n          <Col span={24}>\n            <Row gutter={[12, 12]}>\n              {/* Button select all */}\n              <Col>\n                <Button\n                  className={`btn-token-name ${\n                    isSelectedAll ? 'selected' : ''\n                  }`}\n                  onClick={() => setSelectedMints(mints)}\n                >\n                  <span className=\"title\">All</span>\n                </Button>\n              </Col>\n              {/* Mints Symbol Button */}\n              {mints.map((mintAddress) => {\n                let selected = selectedMints.includes(mintAddress)\n                  ? 'selected'\n                  : ''\n                return (\n                  <Col key={mintAddress}>\n                    <Button\n                      className={`btn-token-name ${selected}`}\n                      onClick={() => setSelectedMints([mintAddress])}\n                    >\n                      <span className=\"title\">\n                        <MintSymbol mintAddress={mintAddress} />\n                      </span>\n                    </Button>\n                  </Col>\n                )\n              })}\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <MintInput\n          selectedMint={poolData?.mintLpt.toBase58()}\n          amount={lptAmount}\n          onChangeAmount={(amount) => setLptAmount(amount)}\n          mintLabel={<Typography.Text ellipsis>Balansol LP</Typography.Text>}\n          mintAvatar={<PoolAvatar poolAddress={poolAddress} max={2} />}\n          unit=\"LP\"\n          force\n          ratioButton={\n            !isSelectedAll && (\n              <Button onClick={() => setLptAmount(`${maxAmount}`)} size=\"small\">\n                Max\n              </Button>\n            )\n          }\n          footer={\n            !isSelectedAll && (\n              <Col span={24}>\n                <Tag\n                  style={{\n                    width: '100%',\n                    border: 'none',\n                    padding: '5px 16px',\n                    whiteSpace: 'unset',\n                  }}\n                  color=\"gold\"\n                >\n                  <Space align=\"center\" size={6}>\n                    <Checkbox\n                      className=\"warning-checkbox\"\n                      checked={acceptWithdrawLimit}\n                      onChange={() =>\n                        setAcceptWithdrawLimit(!acceptWithdrawLimit)\n                      }\n                    />\n                    <Typography.Text style={{ color: 'inherit' }}>\n                      Prevent to withdraw more than 30% (Currently{' '}\n                      {util\n                        .numeric(Number(lptAmount) / supplyInNumber)\n                        .format('0,0.[00]%')}\n                      ) of the total LP.\n                    </Typography.Text>\n                  </Space>\n                </Tag>\n              </Col>\n            )\n          }\n        />\n      </Col>\n      <Col span={24}>\n        {isSelectedAll ? (\n          <WithdrawFullSide\n            poolAddress={poolAddress}\n            lptAmount={lptAmount}\n            onSuccess={hideModal}\n          />\n        ) : (\n          <WithdrawSingleSide\n            poolAddress={poolAddress}\n            mintAddress={selectedMints[0]}\n            lptAmount={lptAmount}\n            onSuccess={hideModal}\n            withdrawableMax={maxAmount}\n          />\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default WithdrawModal\n","import { Fragment, useState } from 'react'\n\nimport { Button, Modal } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport WithdrawModal from './withdrawModal'\n\nconst Withdraw = ({ poolAddress }: { poolAddress: string }) => {\n  const [visible, setVisible] = useState(false)\n\n  return (\n    <Fragment>\n      <Button ghost onClick={() => setVisible(true)} block>\n        Withdraw\n      </Button>\n      {/* Modal withdraw */}\n      <Modal\n        open={visible}\n        onCancel={() => setVisible(false)}\n        footer={null}\n        destroyOnClose\n        centered\n        closeIcon={<IonIcon name=\"close-outline\" />}\n      >\n        <WithdrawModal\n          poolAddress={poolAddress}\n          hideModal={() => setVisible(false)}\n        />\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Withdraw\n","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport { Infix, useInfix, util } from '@sentre/senhub'\n\nimport { Row, Col, Space, Typography, Popover, Tooltip, Button } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { PoolAvatar } from 'components/pools/poolAvatar'\nimport Deposit from './deposit'\nimport Withdraw from './withdraw'\n\nimport { AppState } from 'model'\n\ntype InfoProps = { title: string; value: string }\nconst Info = ({ title, value }: InfoProps) => {\n  const [copied, setCopied] = useState(false)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await util.asyncWait(1500)\n    setCopied(false)\n  }\n\n  return (\n    <Space direction=\"vertical\" size={4}>\n      <Space>\n        <Typography.Text type=\"secondary\">{title}</Typography.Text>\n        <Button\n          type=\"text\"\n          size=\"small\"\n          icon={<IonIcon name=\"open-outline\" />}\n          onClick={() => window.open(util.explorer(value), '_blank')}\n        />\n      </Space>\n      <Space>\n        <Typography.Text style={{ wordBreak: 'break-all' }}>\n          {value}\n        </Typography.Text>\n        <Tooltip title=\"Copied\" open={copied} arrowPointAtCenter>\n          <CopyToClipboard text={value}>\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"copy-outline\" />}\n              onClick={onCopy}\n            />\n          </CopyToClipboard>\n        </Tooltip>\n      </Space>\n    </Space>\n  )\n}\n\nconst Header = ({ poolAddress }: { poolAddress: string }) => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const infix = useInfix()\n  const isMobile = infix < Infix.md\n\n  return (\n    <Row gutter={[24, 24]} justify=\"space-between\">\n      <Col md={18} xs={24}>\n        <Space>\n          <PoolAvatar poolAddress={poolAddress} size={32} />\n          <Typography.Title level={4}>Balansol LP</Typography.Title>\n          <Popover\n            placement=\"bottom\"\n            content={\n              <Space direction=\"vertical\">\n                <Info title=\"Pool Address\" value={poolAddress} />\n                <Info title=\"LPT Address\" value={poolData.mintLpt.toBase58()} />\n              </Space>\n            }\n          >\n            <Button\n              type=\"text\"\n              style={{ marginLeft: -4 }}\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      <Col span={isMobile ? 24 : undefined}>\n        <Space style={{ width: '100%' }}>\n          <Withdraw poolAddress={poolAddress} />\n          <Deposit poolAddress={poolAddress} />\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Header\n","import { useCallback, useMemo } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport configs from 'configs'\n\nconst {\n  manifest: { appId },\n} = configs\nconst APP_ROUTE = `/app/${appId}`\n\nexport const useAppRouter = () => {\n  const { search, pathname } = useLocation()\n  const history = useHistory()\n\n  const query = useMemo(() => {\n    return new URLSearchParams(search)\n  }, [search])\n\n  const getQuery = useCallback((queryId: string) => query.get(queryId), [query])\n\n  const getAllQuery = useCallback(<T>() => {\n    const queries: Record<string, string> = {}\n    query.forEach((value, key) => {\n      queries[key] = value\n    })\n    const wrapResult: T = queries as any\n    return wrapResult\n  }, [query])\n\n  /**\n   * @param path is URL parameters\n   * @param newQuery Object all Query\n   * @param force keep prev Query with force=false\n   */\n  const pushHistory = useCallback(\n    (\n      path: string,\n      newQuery: Record<string, string> = {},\n      force: boolean = true,\n    ) => {\n      const currentQuery = getAllQuery<Record<string, string>>()\n      // Keep current query with 'force' === false\n      if (force === false) newQuery = Object.assign(currentQuery, newQuery)\n      const newParams = new URLSearchParams(newQuery)\n      if (newParams) path += `?${newParams.toString()}`\n      history.push(`${APP_ROUTE}${path}`)\n    },\n    [getAllQuery, history],\n  )\n\n  return { getQuery, getAllQuery, pushHistory, appRoute: APP_ROUTE, pathname }\n}\n","import { Button, Col, Empty, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { useAppRouter } from 'hooks/useAppRouter'\n\ntype PageNotFoundProps = {\n  label: string\n  redirect: string\n}\n\nconst PageNotFound = ({ label, redirect }: PageNotFoundProps) => {\n  const { pushHistory } = useAppRouter()\n\n  return (\n    <Row justify=\"center\">\n      <Col span={24} style={{ textAlign: 'center' }}>\n        <Empty description={`${label} not found`} />\n      </Col>\n      <Col span={24} style={{ textAlign: 'center' }}>\n        <Button\n          type=\"text\"\n          icon={<IonIcon name=\"arrow-back-outline\" />}\n          onClick={() => pushHistory(redirect)}\n        >\n          Go Back Home\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default PageNotFound\n","import { useSelector } from 'react-redux'\nimport { Infix, useInfix, useWalletAddress } from '@sentre/senhub'\n\nimport { Button, Col, Row } from 'antd'\n\nimport IonIcon from '@sentre/antd-ionicon'\nimport PoolManagement from './management'\nimport PoolWeights from './poolWeights'\nimport Volume24h from './volume24h'\nimport Hero from './hero'\nimport Header from './header'\nimport PageNotFound from '../../components/pageNotFound'\n\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport { AppState } from 'model'\n\nconst PoolDetails = () => {\n  const { getQuery, pushHistory } = useAppRouter()\n  const poolAddress = getQuery('pool') || ''\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const walletAddress = useWalletAddress()\n  const infix = useInfix()\n\n  if (!poolData || !poolAddress)\n    return <PageNotFound label=\"pool\" redirect=\"/pools\" />\n\n  const isOwner = walletAddress === poolData.authority.toBase58()\n  const isMobile = infix < Infix.md\n  return (\n    <Row justify=\"center\" style={{ paddingBottom: 12 }}>\n      <Col lg={20} md={24} style={{ maxWidth: !isMobile ? 930 : '' }}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              onClick={() => pushHistory(`/pools`)}\n              style={{ margin: -12 }}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Header poolAddress={poolAddress} />\n          </Col>\n          <Col span={24}>\n            <Hero poolAddress={poolAddress} />\n          </Col>\n          {/* Chart */}\n          <Col span={24}>\n            <Row gutter={[24, 24]} style={{ display: 'flex' }}>\n              <Col lg={12} md={12} xs={24}>\n                <Volume24h poolAddress={poolAddress} />\n              </Col>\n              <Col lg={12} md={12} xs={24}>\n                <PoolWeights poolAddress={poolAddress} />\n              </Col>\n              {isOwner && (\n                <Col lg={12} md={12} xs={24}>\n                  <PoolManagement poolAddress={poolAddress} />\n                </Col>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\nexport default PoolDetails\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type SwapState = {\n  bidMint: string\n  bidAmount: string\n  askMint: string\n  askAmount: string\n  isReverse: boolean\n  slippageTolerance: number\n  loading: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'swap'\nconst initialState: SwapState = {\n  bidMint: '',\n  bidAmount: '',\n  askMint: '',\n  askAmount: '',\n  isReverse: false,\n  slippageTolerance: 0.5,\n  loading: false,\n}\n\n/**\n * Actions\n */\n\nexport const setSwapState = createAsyncThunk<\n  Partial<SwapState>,\n  Partial<SwapState>\n>(`${NAME}/setSwapState`, async (newState: Partial<SwapState>) => {\n  return newState\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setSwapState.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\n\nimport { Card, Spin } from 'antd'\nimport MintInput from 'components/mintInput'\nimport { MintSelection } from '@sen-use/app'\n\nimport { AppDispatch, AppState } from 'model'\nimport { setSwapState } from 'model/swap.controller'\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport configs from 'configs'\nimport { useTheme } from '@sentre/senhub'\n\nconst AskInput = () => {\n  const { askMint, askAmount, loading, isReverse, bidAmount } = useSelector(\n    (state: AppState) => state.swap,\n  )\n  const theme = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n  const { getAllQuery } = useAppRouter()\n  const { ask_mint } = getAllQuery<{ ask_mint: string }>()\n\n  useEffect(() => {\n    if (!askMint) {\n      const defaultAskMint = ask_mint || configs.sol.askMintDefault\n      dispatch(setSwapState({ askMint: defaultAskMint }))\n    }\n  }, [askMint, ask_mint, dispatch])\n\n  const onChange = async (askAmount: string) => {\n    dispatch(\n      setSwapState({\n        askAmount,\n        isReverse: true,\n        bidAmount: '',\n        loading: true,\n      }),\n    ).unwrap()\n  }\n\n  return (\n    <Card bordered={false} className=\"card-swap\" bodyStyle={{ padding: 0 }}>\n      <Spin spinning={loading && !isReverse && !!Number(bidAmount)}>\n        <MintInput\n          amount={askAmount}\n          selectedMint={askMint}\n          onChangeAmount={onChange}\n          ratioButton={null}\n          mintSelection={\n            <MintSelection\n              value={askMint}\n              onChange={(mint) => {\n                const loading = askMint !== mint\n                dispatch(setSwapState({ askMint: mint, loading })).unwrap()\n              }}\n              style={{ background: theme === 'dark' ? '#394360' : '#F2F4FA' }}\n            />\n          }\n        />\n      </Spin>\n    </Card>\n  )\n}\n\nexport default AskInput\n","import { createContext, useContext, ReactNode, useMemo } from 'react'\n\nimport { PoolsState } from 'model/pools.controller'\nimport { useActivePools } from './pools/useActivePools'\n\nexport type BalansolPoolsProvider = {\n  activePools: PoolsState\n}\nconst Context = createContext<BalansolPoolsProvider>({\n  activePools: {},\n})\n\n/**\n * Pool Context Provider\n */\nconst Provider = ({ children }: { children: ReactNode }) => {\n  const activePools = useActivePools()\n  const provider = useMemo((): BalansolPoolsProvider => {\n    return { activePools }\n  }, [activePools])\n  // Context provider\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default Provider\n\n/**\n * Pool Hook\n */\nexport const useBalansolPools = () => {\n  return useContext<BalansolPoolsProvider>(Context)\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { PoolState } from '@senswap/balancer'\nimport { web3 } from '@project-serum/anchor'\n\nimport { PoolsState } from 'model/pools.controller'\nimport { AppState } from 'model'\nimport { useTVL } from 'hooks/useTVL'\n\nconst MIN_TVL = 100\n\nexport const useActivePools = () => {\n  const pools = useSelector((state: AppState) => state.pools)\n  const [activePools, setActivePools] = useState<PoolsState>({})\n  const { getTVL } = useTVL()\n\n  const filterPools = useCallback(async () => {\n    const activePools: PoolsState = {}\n    for (const addr in pools) {\n      const poolData = pools[addr]\n      if (!web3.PublicKey.isOnCurve(poolData.authority)) continue\n      const state = poolData.state as PoolState\n      if (!state['initialized']) continue\n      if (poolData.reserves.map((val) => val.toString()).includes('0')) continue\n      const tvl = await getTVL(poolData)\n      if (tvl < MIN_TVL) continue\n      activePools[addr] = poolData\n    }\n    setActivePools(activePools)\n  }, [getTVL, pools])\n\n  useEffect(() => {\n    filterPools()\n  }, [filterPools])\n\n  return activePools\n}\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport MintInput from 'components/mintInput'\nimport { MintSelection } from '@sen-use/app'\n\nimport { AppDispatch, AppState } from 'model'\nimport { setSwapState } from 'model/swap.controller'\nimport { useMintsCanSwap } from 'hooks/swap/useMintsCanSwap'\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport configs from 'configs'\nimport { useTheme } from '@sentre/senhub'\n\nconst BidInput = () => {\n  const { bidAmount, bidMint, askMint } = useSelector(\n    (state: AppState) => state.swap,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n  const theme = useTheme()\n  const mintsSwap = useMintsCanSwap()\n  const { getAllQuery } = useAppRouter()\n  const { bid_mint } = getAllQuery<{ bid_mint: string }>()\n\n  useEffect(() => {\n    if (!bidMint) {\n      const defaultBidMint = bid_mint || configs.sol.bidMintDefault\n      dispatch(setSwapState({ bidMint: defaultBidMint }))\n    }\n  }, [bidMint, bid_mint, dispatch])\n\n  const onChange = (val: string) => {\n    dispatch(\n      setSwapState({\n        bidAmount: val,\n        isReverse: false,\n        askAmount: '',\n        loading: true,\n      }),\n    )\n  }\n  // Ignore askMint in mints\n  const filteredMints = useMemo(\n    () => mintsSwap.filter((value) => value !== askMint),\n    [askMint, mintsSwap],\n  )\n\n  return (\n    <MintInput\n      amount={bidAmount}\n      selectedMint={bidMint}\n      onChangeAmount={onChange}\n      mints={filteredMints}\n      mintSelection={\n        <MintSelection\n          value={bidMint}\n          onChange={(mint) => {\n            const loading = bidMint !== mint\n            dispatch(setSwapState({ bidMint: mint, loading }))\n          }}\n          style={{ background: theme === 'dark' ? '#394360' : '#F2F4FA' }}\n        />\n      }\n    />\n  )\n}\n\nexport default BidInput\n","import { useMemo } from 'react'\nimport { useBalansolPools } from '../useBalansolPools'\n\nexport const useMintsCanSwap = (): string[] => {\n  const { activePools } = useBalansolPools()\n\n  const mintsSwap = useMemo(() => {\n    let mintsSwap: string[] = []\n    for (const { mints } of Object.values(activePools))\n      for (const mint of mints)\n        if (!mintsSwap.includes(mint.toBase58()))\n          mintsSwap.push(mint.toBase58())\n    return mintsSwap\n  }, [activePools])\n\n  return mintsSwap\n}\n","var _path, _path2, _path3, _path4, _path5, _path6, _defs;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgJupiterLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 100,\n    height: 100,\n    viewBox: \"0 0 100 100\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.57323 77.9508C13.7607 83.7753 19.1321 88.6489 25.3351 92.252C31.5381 95.8551 38.4327 98.1062 45.5668 98.8579C41.8964 93.3346 36.5613 88.2532 29.9008 84.3845C23.2403 80.5159 16.1867 78.4027 9.57323 77.9508Z\",\n    fill: \"url(#paint0_linear)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.8507 68.9805C26.0185 61.5254 12.1297 59.6255 2.19191 62.9818C3.15128 66.1526 4.41654 69.2226 5.96983 72.1486C14.6041 71.9487 24.0313 74.2937 32.8033 79.3886C41.5754 84.4835 48.2846 91.5153 52.3901 99.1165C55.7032 99.0148 58.9986 98.5928 62.2305 97.8566C60.2214 87.5627 51.6795 76.4372 38.8507 68.9805Z\",\n    fill: \"url(#paint1_linear)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M100 38.7201C98.3685 32.084 95.4165 25.8447 91.3202 20.3748C87.2239 14.9048 82.0673 10.3164 76.1584 6.88349C70.2495 3.45059 63.7094 1.24361 56.9287 0.394327C50.1479 -0.454959 43.2655 0.0708667 36.6925 1.94041C47.6735 3.28427 59.8623 7.40655 71.8159 14.3509C83.7695 21.2953 93.3966 29.8406 100 38.7201Z\",\n    fill: \"url(#paint2_linear)\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M84.0232 63.0577C78.4025 53.7229 68.7738 44.7846 56.9125 37.8939C45.0513 31.0033 32.5198 27.0675 21.6362 26.8071C12.0612 26.5803 4.87495 29.3638 1.92518 34.4419C1.90838 34.4721 1.88486 34.5007 1.86638 34.5309C1.60097 35.4834 1.37251 36.4375 1.16422 37.395C5.28314 35.769 10.0555 34.8635 15.3621 34.7627C27.1628 34.541 40.3696 38.3156 52.5567 45.396C64.7439 52.4765 74.5725 62.0834 80.2234 72.4412C82.7566 77.1077 84.3373 81.702 84.9639 86.0914C85.6929 85.4397 86.4085 84.766 87.1023 84.0656C87.1208 84.0336 87.1325 84 87.151 83.9664C90.1008 78.8833 88.9602 71.2636 84.0232 63.0577Z\",\n    fill: \"url(#paint3_linear)\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.8884 53.4254C29.7245 42.8728 9.65227 41.2198 0 48.5842C0.0189591 50.8892 0.195187 53.1903 0.527462 55.4714C3.36682 54.6107 6.29318 54.0687 9.25247 53.8554C20.0386 53.0441 31.9301 56.0493 42.7213 62.3218C53.5125 68.5942 62.0191 77.4402 66.6588 87.205C67.9412 89.8801 68.9193 92.6907 69.5749 95.5839C71.7216 94.7424 73.8088 93.7563 75.8222 92.6325C77.4382 80.5982 66.0574 63.9797 47.8884 53.4254Z\",\n    fill: \"url(#paint4_linear)\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M93.3659 47.4337C87.6814 38.109 77.9687 29.1455 66.0235 22.2095C54.0782 15.2735 41.4981 11.2755 30.5792 10.9547C22.2557 10.7145 15.8085 12.7319 12.4657 16.5434C26.346 14.1917 44.6544 18.1443 62.4001 28.4534C80.1457 38.7625 92.6537 52.7117 97.4815 65.9336C99.1361 61.1444 97.6965 54.5444 93.3659 47.4337Z\",\n    fill: \"url(#paint5_linear)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear\",\n    x1: 81,\n    y1: 13,\n    x2: 15,\n    y2: 99,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F9A43A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.25,\n    stopColor: \"#FFC45E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.53125,\n    stopColor: \"#93EEEF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.760417,\n    stopColor: \"#81F4FE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#3BDBFB\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear\",\n    x1: 81,\n    y1: 13,\n    x2: 15,\n    y2: 99,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F9A43A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.25,\n    stopColor: \"#FFC45E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.53125,\n    stopColor: \"#93EEEF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.760417,\n    stopColor: \"#81F4FE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#3BDBFB\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear\",\n    x1: 81,\n    y1: 13,\n    x2: 15,\n    y2: 99,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F9A43A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.25,\n    stopColor: \"#FFC45E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.53125,\n    stopColor: \"#93EEEF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.760417,\n    stopColor: \"#81F4FE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#3BDBFB\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint3_linear\",\n    x1: 81,\n    y1: 13,\n    x2: 15,\n    y2: 99,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F9A43A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.25,\n    stopColor: \"#FFC45E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.53125,\n    stopColor: \"#93EEEF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.760417,\n    stopColor: \"#81F4FE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#3BDBFB\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint4_linear\",\n    x1: 81,\n    y1: 13,\n    x2: 15,\n    y2: 99,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F9A43A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.25,\n    stopColor: \"#FFC45E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.53125,\n    stopColor: \"#93EEEF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.760417,\n    stopColor: \"#81F4FE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#3BDBFB\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint5_linear\",\n    x1: 81,\n    y1: 13,\n    x2: 15,\n    y2: 99,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F9A43A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.25,\n    stopColor: \"#FFC45E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.53125,\n    stopColor: \"#93EEEF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.760417,\n    stopColor: \"#81F4FE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#3BDBFB\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgJupiterLogo);\nexport default __webpack_public_path__ + \"static/media/jupiter-logo.6553c3779ce16057aa846301783447a2.svg\";\nexport { ForwardRef as ReactComponent };","import { Avatar, Space, Tooltip, Typography } from 'antd'\nimport JupiterIcon from 'static/images/jupiter-logo.svg'\n\nexport type PoweredByJupiterProps = {\n  title?: string\n  spacing?: number\n  iconSize?: number\n}\n\nconst PoweredByJupiter = ({\n  title = 'Powered by',\n  spacing = 4,\n  iconSize = 20,\n}: PoweredByJupiterProps) => {\n  return (\n    <Space size={spacing} style={{ cursor: 'pointer' }}>\n      <Typography.Text style={{ fontSize: 12, color: '#7A7B85' }}>\n        {title}\n      </Typography.Text>\n      <Tooltip title=\"Jupiter Aggregator\">\n        <Avatar src={JupiterIcon} size={iconSize} />\n      </Tooltip>\n    </Space>\n  )\n}\n\nexport default PoweredByJupiter\n","import { useCallback, useMemo } from 'react'\n\nimport { useBalansolPools } from '../useBalansolPools'\n\ntype MintAddress = string\ntype PoolAddress = string\nexport type MintRoutes = Record<MintAddress, Record<MintAddress, PoolAddress[]>>\n\n// Generate MintRoute, includes all pools that can swap bidMint -> askMint\nexport const useMintRoutes = (): MintRoutes => {\n  const { activePools } = useBalansolPools()\n\n  const addPoolToRoute = useCallback(\n    (routes: MintRoutes, bidMint: string, askMint: string, pool: string) => {\n      let poolData = activePools[pool]\n      let mints = poolData.mints.map((m) => m.toBase58())\n      let bidMintIdx = mints.indexOf(bidMint)\n      let askMintIdx = mints.indexOf(askMint)\n\n      let actions = poolData.actions as { active: {} }[]\n      if (!actions[bidMintIdx]['active'] || !actions[askMintIdx]['active'])\n        return routes\n\n      if (bidMint === askMint) return routes\n      // Init route if needed\n      if (!routes[bidMint]) routes[bidMint] = {}\n      if (!routes[bidMint][askMint]) routes[bidMint][askMint] = []\n      // Add pool in to route\n      routes[bidMint][askMint].push(pool)\n      return routes\n    },\n    [activePools],\n  )\n\n  return useMemo(() => {\n    let mintRoutes: MintRoutes = {}\n    for (const poolAddress in activePools) {\n      const mints = activePools[poolAddress].mints.map((e) => e.toBase58())\n      for (const bidMint of mints) {\n        for (const askMint of mints) {\n          mintRoutes = addPoolToRoute(mintRoutes, bidMint, askMint, poolAddress)\n        }\n      }\n    }\n    return mintRoutes\n  }, [activePools, addPoolToRoute])\n}\n","import { useCallback, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDebounce } from 'react-use'\n\nimport { AppState } from 'model'\nimport { useMintRoutes } from './useMintRoutes'\n\ntype Market = {\n  pool: string\n  bidMint: string\n  askMint: string\n}\nexport type MetaRoute = Market[]\n\nexport const useMetaRoutes = () => {\n  const { askMint, bidMint } = useSelector((state: AppState) => state.swap)\n  const tokenRoutes = useMintRoutes()\n  const [metaRoutes, setMetaRoutes] = useState<MetaRoute[]>([])\n\n  const validRoute = (route: MetaRoute) => {\n    const pools = route.map((e) => e.pool)\n    for (const idx in pools) {\n      // Check duplicate pool address\n      if (pools[idx] === pools[Number(idx) + 1]) return false\n    }\n    for (const marketBid of route) {\n      for (const marketAsk of route) {\n        if (\n          marketBid.bidMint === marketAsk.askMint &&\n          marketBid.askMint === marketAsk.bidMint\n        )\n          return false\n      }\n    }\n    return true\n  }\n\n  const computeMetaRoutes = useCallback(\n    (bidMint: string, askMint: string, deep: number = 1): MetaRoute[] => {\n      if (deep > 3) return []\n      const routesFromBidMint = tokenRoutes[bidMint]\n      if (!routesFromBidMint) return []\n\n      // Market is all pools can swap bidMint -> askMint\n      const markets = routesFromBidMint[askMint] || []\n      const routes: MetaRoute[] = markets.map((market) => {\n        return [{ pool: market, bidMint, askMint }]\n      })\n\n      for (const nextMint in routesFromBidMint) {\n        const nextMintMarkets = routesFromBidMint[nextMint]\n        if (!nextMintMarkets) continue\n        const nextDeep = deep + 1\n        const deepRoutes = computeMetaRoutes(nextMint, askMint, nextDeep)\n        for (const deepRoute of deepRoutes) {\n          for (const nextMintMarket of nextMintMarkets) {\n            const newRoute = [\n              { pool: nextMintMarket, bidMint, askMint: nextMint },\n              ...deepRoute,\n            ]\n            if (!validRoute(newRoute)) continue\n            routes.push(newRoute)\n          }\n        }\n      }\n      return routes\n    },\n    [tokenRoutes],\n  )\n\n  const compareMetaRoutes = useCallback(() => {\n    const metaRoutes = computeMetaRoutes(bidMint, askMint)\n    setMetaRoutes(metaRoutes)\n  }, [askMint, bidMint, computeMetaRoutes])\n\n  useDebounce(async () => compareMetaRoutes(), 300, [compareMetaRoutes])\n\n  return metaRoutes\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BN } from '@project-serum/anchor'\nimport { useDebounce } from 'react-use'\n\nimport { AppState } from 'model'\nimport { calcPriceImpact } from 'helper/oracles'\nimport { useBalansolPools } from 'hooks/useBalansolPools'\nimport { useOracles } from '../../useOracles'\nimport { RouteSwapInfo } from '../../useSwap'\nimport { useMetaRoutes } from '../useMetaRoutes'\nimport { useAllRoutesFromAsk } from './useAllRoutesFromAsk'\n\nexport const useBestRouteFromAsk = (): {\n  loading: boolean\n  bestRoute: RouteSwapInfo\n} => {\n  const [routeSwapInfo, setRouteSwapInfo] = useState<RouteSwapInfo>({\n    route: [],\n    bidAmount: 0,\n    askAmount: 0,\n    priceImpact: 0,\n  })\n  const [loading, setLoading] = useState(false)\n  const { bidMint, askAmount, askMint, isReverse } = useSelector(\n    (state: AppState) => state.swap,\n  )\n  const { activePools } = useBalansolPools()\n\n  const { undecimalizeMintAmount } = useOracles()\n  const metaRoutes = useMetaRoutes()\n  const routes = useAllRoutesFromAsk(metaRoutes)\n\n  const getBestRoute = useCallback(async () => {\n    let sortedRoute = routes.sort((routeA, routeB) => {\n      let bidAmountA: BN = routeA[0].bidAmount\n      let bidAmountB: BN = routeB[0].bidAmount\n      return bidAmountA.gt(bidAmountB) ? 1 : -1\n    })\n    const bestRoute = sortedRoute[0]\n    if (!bestRoute?.length || !bidMint || !askMint)\n      return setRouteSwapInfo({\n        route: [],\n        bidAmount: Number(0),\n        askAmount: 0,\n        priceImpact: 0,\n      })\n\n    let bidAmount = await undecimalizeMintAmount(\n      bestRoute[0]?.bidAmount,\n      bidMint,\n    )\n\n    const bestRouteFullInfo = bestRoute.map((value, idx) => {\n      const poolData = activePools[value.pool]\n      return { ...bestRoute[idx], poolData }\n    })\n    const newPriceImpact = calcPriceImpact(bestRouteFullInfo)\n\n    return setRouteSwapInfo({\n      route: bestRoute,\n      bidAmount: Number(bidAmount),\n      askAmount: Number(askAmount),\n      priceImpact: newPriceImpact,\n    })\n  }, [askAmount, askMint, bidMint, activePools, routes, undecimalizeMintAmount])\n\n  useDebounce(\n    () => {\n      try {\n        if (!isReverse) return\n        getBestRoute()\n      } catch (error) {\n        console.log('route error:', error)\n      } finally {\n        setLoading(false)\n      }\n    },\n    500,\n    [getBestRoute],\n  )\n  useEffect(() => {\n    setLoading(true)\n  }, [getBestRoute])\n\n  return { loading, bestRoute: routeSwapInfo }\n}\n","import { useCallback, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDebounce } from 'react-use'\n\nimport {\n  calcInGivenOutSwap,\n  calcPriceImpactSwap,\n  getMintInfo,\n} from 'helper/oracles'\nimport { AppState } from 'model'\nimport { useOracles } from '../../useOracles'\nimport { MetaRoute } from '../useMetaRoutes'\nimport { Route, RouteInfo } from '../../useSwap'\nimport { useGetMintDecimals } from '@sentre/senhub'\nimport { useBalansolPools } from 'hooks/useBalansolPools'\n\nexport const useAllRoutesFromAsk = (metaRoutes: MetaRoute[]) => {\n  const { askAmount, isReverse } = useSelector((state: AppState) => state.swap)\n  const { activePools } = useBalansolPools()\n  const { decimalizeMintAmount } = useOracles()\n  const [routes, setRoutes] = useState<Route[]>([])\n  const getDecimals = useGetMintDecimals()\n\n  const computeRouteInfos = useCallback(async () => {\n    const routes = []\n    if (!isReverse) return setRoutes([])\n    for (const metaRoute of metaRoutes) {\n      const askMint = metaRoute[metaRoute.length - 1].askMint\n      let route: RouteInfo[] = []\n      let isValidRoute = true\n      let currentAskAmount = await decimalizeMintAmount(askAmount, askMint)\n      for (const market of [...metaRoute].reverse()) {\n        const { bidMint, askMint, pool } = market\n        const poolData = activePools[pool]\n        const bidMintInfo = getMintInfo(poolData, bidMint)\n        const askMintInfo = getMintInfo(poolData, askMint)\n        const decimalIn = (await getDecimals({ mintAddress: bidMint })) || 0\n        const decimalOut = (await getDecimals({ mintAddress: askMint })) || 0\n\n        if (currentAskAmount.gt(askMintInfo.reserve)) {\n          isValidRoute = false\n          break\n        }\n        const tokenInAmount = calcInGivenOutSwap(\n          currentAskAmount,\n          askMintInfo.reserve,\n          bidMintInfo.reserve,\n          askMintInfo.normalizedWeight,\n          bidMintInfo.normalizedWeight,\n          poolData.fee.add(poolData.taxFee),\n        )\n        if (tokenInAmount.lten(0)) {\n          isValidRoute = false\n          break\n        }\n\n        const dataForSlippage = {\n          balanceIn: bidMintInfo.reserve,\n          balanceOut: askMintInfo.reserve,\n          weightIn: bidMintInfo.normalizedWeight,\n          weightOut: askMintInfo.normalizedWeight,\n          decimalIn: decimalIn,\n          decimalOut: decimalOut,\n          swapFee: poolData.fee.add(poolData.taxFee),\n        }\n\n        const newPriceImpact = calcPriceImpactSwap(\n          tokenInAmount,\n          dataForSlippage,\n        )\n        route = [\n          {\n            pool: market.pool,\n            bidMint,\n            askMint,\n            bidAmount: tokenInAmount,\n            askAmount: currentAskAmount,\n            priceImpact: newPriceImpact,\n          },\n        ].concat(route)\n        currentAskAmount = tokenInAmount\n      }\n      if (isValidRoute) routes.push(route)\n    }\n    return setRoutes(routes)\n  }, [\n    activePools,\n    askAmount,\n    decimalizeMintAmount,\n    getDecimals,\n    isReverse,\n    metaRoutes,\n  ])\n\n  useDebounce(async () => computeRouteInfos(), 300, [computeRouteInfos])\n\n  return routes\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BN } from '@project-serum/anchor'\nimport { useDebounce } from 'react-use'\n\nimport { AppState } from 'model'\nimport { calcPriceImpact } from 'helper/oracles'\nimport { useOracles } from '../../useOracles'\nimport { useMetaRoutes } from '../useMetaRoutes'\nimport { RouteSwapInfo } from '../../useSwap'\nimport { useAllRouteFromBid } from './useAllRouteFromBid'\nimport { useBalansolPools } from 'hooks/useBalansolPools'\n\nexport const useBestRouteFromBid = (): {\n  loading: boolean\n  bestRoute: RouteSwapInfo\n} => {\n  const [routeSwapInfo, setRouteSwapInfo] = useState<RouteSwapInfo>({\n    route: [],\n    bidAmount: 0,\n    askAmount: 0,\n    priceImpact: 0,\n  })\n  const [loading, setLoading] = useState(false)\n  const { bidAmount, askMint, bidMint, isReverse } = useSelector(\n    (state: AppState) => state.swap,\n  )\n  const { activePools } = useBalansolPools()\n  const { undecimalizeMintAmount } = useOracles()\n  const metaRoutes = useMetaRoutes()\n  const routes = useAllRouteFromBid(metaRoutes)\n\n  const getBestRoute = useCallback(async () => {\n    let sortedRoute = routes.sort((routeA, routeB) => {\n      let askAmountA = routeA[routeA.length - 1].askAmount\n      let askAmountB: BN = routeB[routeB.length - 1].askAmount\n      return askAmountB.gt(askAmountA) ? 1 : -1\n    })\n    const bestRoute = sortedRoute[0]\n    if (!bestRoute?.length || !bidMint || !askMint)\n      return setRouteSwapInfo({\n        route: [],\n        bidAmount: Number(bidAmount),\n        askAmount: 0,\n        priceImpact: 0,\n      })\n\n    let askAmount = await undecimalizeMintAmount(\n      bestRoute[bestRoute.length - 1]?.askAmount,\n      askMint,\n    )\n    const bestRouteFullInfo = bestRoute.map((value, idx) => {\n      const poolData = activePools[value.pool]\n      return { ...bestRoute[idx], poolData }\n    })\n    const newPriceImpact = calcPriceImpact(bestRouteFullInfo)\n\n    return setRouteSwapInfo({\n      route: bestRoute,\n      bidAmount: Number(bidAmount),\n      askAmount: Number(askAmount),\n      priceImpact: newPriceImpact,\n    })\n  }, [askMint, bidAmount, bidMint, activePools, routes, undecimalizeMintAmount])\n\n  useDebounce(\n    () => {\n      try {\n        if (isReverse) return\n        getBestRoute()\n      } catch (error) {\n        console.log('route error:', error)\n      } finally {\n        setLoading(false)\n      }\n    },\n    500,\n    [getBestRoute],\n  )\n\n  useEffect(() => {\n    setLoading(true)\n  }, [getBestRoute])\n\n  return { loading, bestRoute: routeSwapInfo }\n}\n","import { useCallback, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDebounce } from 'react-use'\n\nimport { useGetMintDecimals } from '@sentre/senhub'\nimport {\n  calcOutGivenInSwap,\n  calcPriceImpactSwap,\n  getMintInfo,\n} from 'helper/oracles'\nimport { AppState } from 'model'\nimport { useOracles } from '../../useOracles'\nimport { MetaRoute } from '../useMetaRoutes'\nimport { Route } from '../../useSwap'\nimport { useBalansolPools } from 'hooks/useBalansolPools'\n\nexport const useAllRouteFromBid = (metaRoutes: MetaRoute[]): Route[] => {\n  const { bidAmount, isReverse } = useSelector((state: AppState) => state.swap)\n  const { activePools } = useBalansolPools()\n  const { decimalizeMintAmount } = useOracles()\n  const [routes, setRoutes] = useState<Route[]>([])\n  const getDecimals = useGetMintDecimals()\n\n  const computeRouteInfos = useCallback(async () => {\n    const routes = []\n    if (isReverse || !Number(bidAmount)) return setRoutes([])\n    for (const metaRoute of metaRoutes) {\n      const bidMint = metaRoute[0].bidMint\n      const route = []\n      let bidAmountBN = await decimalizeMintAmount(bidAmount, bidMint)\n      for (const market of metaRoute) {\n        const { bidMint, askMint, pool } = market\n        const poolData = activePools[pool]\n        const bidMintInfo = getMintInfo(poolData, bidMint)\n        const askMintInfo = getMintInfo(poolData, askMint)\n        const decimalIn = (await getDecimals({ mintAddress: bidMint })) || 0\n        const decimalOut = (await getDecimals({ mintAddress: askMint })) || 0\n\n        const tokenOutAmount = calcOutGivenInSwap(\n          bidAmountBN,\n          askMintInfo.reserve,\n          bidMintInfo.reserve,\n          askMintInfo.normalizedWeight,\n          bidMintInfo.normalizedWeight,\n          poolData.fee.add(poolData.taxFee),\n        )\n\n        const dataForSlippage = {\n          balanceIn: bidMintInfo.reserve,\n          balanceOut: askMintInfo.reserve,\n          weightIn: bidMintInfo.normalizedWeight,\n          weightOut: askMintInfo.normalizedWeight,\n          decimalIn: decimalIn,\n          decimalOut: decimalOut,\n          swapFee: poolData.fee.add(poolData.taxFee),\n        }\n\n        let priceImpact = calcPriceImpactSwap(bidAmountBN, dataForSlippage)\n        if (priceImpact < 0) priceImpact = 0\n        route.push({\n          pool: market.pool,\n          bidMint,\n          askMint,\n          bidAmount: bidAmountBN,\n          askAmount: tokenOutAmount,\n          priceImpact: priceImpact,\n        })\n        bidAmountBN = tokenOutAmount\n      }\n      routes.push(route)\n    }\n    return setRoutes(routes)\n  }, [\n    bidAmount,\n    decimalizeMintAmount,\n    getDecimals,\n    isReverse,\n    metaRoutes,\n    activePools,\n  ])\n\n  useDebounce(async () => computeRouteInfos(), 300, [computeRouteInfos])\n\n  return routes\n}\n","import { account, WalletInterface } from '@senswap/sen-js'\nimport {\n  PublicKey,\n  Transaction,\n  Connection,\n  TransactionSignature,\n} from '@solana/web3.js'\nimport { SendTransactionOptions } from '@solana/wallet-adapter-base'\n\nclass JupiterWalletWrapper {\n  private _wallet\n  public publicKey: PublicKey\n\n  constructor(address: string, wallet: WalletInterface) {\n    this._wallet = wallet\n    this.publicKey = account.fromAddress(address) || null\n  }\n\n  async sendTransaction(\n    transaction: Transaction,\n    connection: Connection,\n    options?: SendTransactionOptions,\n  ): Promise<TransactionSignature> {\n    transaction = await this.signTransaction(transaction)\n    return await connection.sendRawTransaction(\n      transaction.serializeMessage(),\n      options,\n    )\n  }\n\n  async signTransaction(transaction: Transaction) {\n    return await this._wallet.signTransaction(transaction)\n  }\n\n  async signAllTransactions(transactions: Transaction[]) {\n    return await this._wallet.signAllTransactions(transactions)\n  }\n}\n\nexport default JupiterWalletWrapper\n","import { useCallback, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { web3, BN } from '@project-serum/anchor'\nimport { useJupiter } from '@jup-ag/react-hook'\nimport { useWalletAddress, rpc } from '@sentre/senhub'\nimport { useDebounce } from 'react-use'\n\nimport { AppState } from 'model'\n\nimport JupiterWalletWrapper from 'hooks/jupiter/jupiterWalletWrapper'\nimport { SwapPlatform, RouteSwapInfo, SwapProvider } from 'hooks/useSwap'\nimport { useOracles } from '../useOracles'\nimport { utilsBN } from 'helper/utilsBN'\n\nconst connection = new web3.Connection(rpc)\n\ninterface UseJupiterProps {\n  amount: number\n  inputMint: web3.PublicKey | undefined\n  outputMint: web3.PublicKey | undefined\n  slippage: number\n  debounceTime?: number\n}\n\nconst DEFAULT_JUPITER_PROPS = {\n  amount: 0,\n  inputMint: undefined,\n  outputMint: undefined,\n  slippage: 0,\n  debounceTime: 250,\n}\n\nconst DEFAULT_EMPTY_ROUTE = {\n  route: [],\n  bidAmount: 0,\n  askAmount: 0,\n  priceImpact: 0,\n}\n\nexport const useJupiterAggregator = (): SwapProvider => {\n  const [bestRouteInfo, setBestRouteInfo] =\n    useState<RouteSwapInfo>(DEFAULT_EMPTY_ROUTE)\n  const [jupiterProps, setJupiterProps] = useState<UseJupiterProps>({\n    ...DEFAULT_JUPITER_PROPS,\n  })\n  const { bidMint, askMint, bidAmount, slippageTolerance, isReverse } =\n    useSelector((state: AppState) => state.swap)\n  const walletAddress = useWalletAddress()\n  const { decimalizeMintAmount, undecimalizeMintAmount } = useOracles()\n  const { exchange, routes, loading } = useJupiter(jupiterProps)\n\n  const composeJupiterProps = useCallback(async () => {\n    if (!bidMint || !askMint || !Number(bidAmount) || isReverse)\n      return setJupiterProps({ ...DEFAULT_JUPITER_PROPS })\n    const bidAmountBN = await decimalizeMintAmount(bidAmount, bidMint)\n    setJupiterProps({\n      amount: utilsBN.toNumber(bidAmountBN),\n      inputMint: new web3.PublicKey(bidMint),\n      outputMint: new web3.PublicKey(askMint),\n      slippage: slippageTolerance,\n      debounceTime: 250,\n    })\n  }, [\n    askMint,\n    bidAmount,\n    bidMint,\n    decimalizeMintAmount,\n    isReverse,\n    slippageTolerance,\n  ])\n  useDebounce(() => composeJupiterProps(), 300, [composeJupiterProps])\n\n  const composeBestRoute = useCallback(async () => {\n    const bestJupiterRoute = routes?.[0]\n    if (\n      !bidMint ||\n      !askMint ||\n      !Number(bidAmount) ||\n      isReverse ||\n      !bestJupiterRoute\n    )\n      return setBestRouteInfo(DEFAULT_EMPTY_ROUTE)\n\n    const route = bestJupiterRoute.marketInfos.map((market) => {\n      return {\n        bidAmount: new BN(market.inAmount.toString()),\n        bidMint: market.inputMint.toBase58(),\n        askAmount: new BN(market.outAmount.toString()),\n        askMint: market.outputMint.toBase58(),\n        pool: '',\n        priceImpact: market.priceImpactPct,\n      }\n    })\n\n    const inAmount = await undecimalizeMintAmount(\n      new BN(bestJupiterRoute.inAmount.toString()),\n      bidMint,\n    )\n    const outAmount = await undecimalizeMintAmount(\n      new BN(bestJupiterRoute.outAmount.toString()),\n      askMint,\n    )\n\n    return setBestRouteInfo({\n      route,\n      bidAmount: Number(inAmount),\n      askAmount: Number(outAmount),\n      priceImpact: bestJupiterRoute.priceImpactPct,\n    })\n  }, [askMint, bidAmount, bidMint, isReverse, routes, undecimalizeMintAmount])\n  useDebounce(() => composeBestRoute(), 300, [composeBestRoute])\n\n  const swap = useCallback(async () => {\n    if (!routes?.length) throw new Error('No available route')\n    const wrappedWallet = new JupiterWalletWrapper(\n      walletAddress,\n      window.sentre.solana,\n    )\n    const result: any = await exchange({\n      wallet: wrappedWallet,\n      routeInfo: routes[0],\n      onTransaction: async (txid: string) => {\n        await connection.confirmTransaction(txid, 'confirmed')\n        return await connection.getTransaction(txid, {\n          commitment: 'confirmed',\n        })\n      },\n    })\n    if (result.error) throw new Error(result.error?.message || 'Unknown Error')\n    const { txid, outputAddress } = result\n    return { txId: txid, dstAddress: outputAddress }\n  }, [exchange, routes, walletAddress])\n\n  return useMemo(() => {\n    return {\n      ...bestRouteInfo,\n      swap,\n      platform: SwapPlatform.Jupiter,\n      loading: !Number(bidAmount) ? false : loading,\n    }\n  }, [bestRouteInfo, bidAmount, loading, swap])\n}\n","import {\n  createContext,\n  useContext,\n  ReactNode,\n  useMemo,\n  useCallback,\n  useState,\n} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useDebounce } from 'react-use'\nimport { BN } from '@project-serum/anchor'\nimport { net } from '@sentre/senhub'\n\nimport { AppDispatch, AppState } from 'model'\nimport { setSwapState } from 'model/swap.controller'\nimport { useSwapBalansol } from './swap/useSwapBalansol'\nimport { useJupiterAggregator } from './jupiter/useJupiterAggregator'\n\nexport type RouteSwapInfo = {\n  route: Route\n  bidAmount: number\n  askAmount: number\n  priceImpact: number\n}\nexport enum SwapPlatform {\n  Balansol,\n  Jupiter,\n}\nexport type SwapProvider = RouteSwapInfo & {\n  loading: boolean\n  platform: SwapPlatform\n  swap: () => Promise<{ txId: string }>\n}\nexport type RouteInfo = {\n  pool: string\n  bidMint: string\n  bidAmount: BN\n  askMint: string\n  askAmount: BN\n  priceImpact: number\n}\nexport type Route = RouteInfo[]\n\nconst DEFAULT_EMPTY_ROUTE = {\n  route: [],\n  bidAmount: 0,\n  askAmount: 0,\n  priceImpact: 0,\n  swap: async () => {\n    return { txId: '' }\n  },\n  loading: false,\n  platform: SwapPlatform.Balansol,\n}\n\nconst Context = createContext<SwapProvider>({ ...DEFAULT_EMPTY_ROUTE })\n\n/**\n * Swap Context Provider\n */\nconst Provider = ({ children }: { children: ReactNode }) => {\n  const isReverse = useSelector((state: AppState) => state.swap.isReverse)\n  const dispatch = useDispatch<AppDispatch>()\n  const [platformSwap, setPlatformSwap] = useState<SwapProvider>({\n    ...DEFAULT_EMPTY_ROUTE,\n  })\n  //Route balansol\n  const balansol = useSwapBalansol()\n  // Route Jupiter\n  const jupiter = useJupiterAggregator()\n\n  const updateRouteFromBid = useCallback(() => {\n    if (isReverse) return\n    if (balansol.loading || (jupiter.loading && net === 'mainnet'))\n      return dispatch(setSwapState({ askAmount: '0', loading: true }))\n\n    let askAmountBalansol = balansol.askAmount.toString()\n    let askAmountJup = jupiter.askAmount.toString()\n    // Select platform\n    let platformSwap = balansol\n    if (\n      Number(askAmountJup) > 1.05 * Number(askAmountBalansol) &&\n      net === 'mainnet'\n    )\n      platformSwap = jupiter\n    // Update platform\n    let askAmount = platformSwap.askAmount.toString()\n    dispatch(setSwapState({ askAmount, loading: false }))\n    return setPlatformSwap(platformSwap)\n  }, [balansol, dispatch, isReverse, jupiter])\n  useDebounce(() => updateRouteFromBid(), 1000, [updateRouteFromBid])\n\n  const updateRouteFromAsk = useCallback(() => {\n    if (!isReverse) return\n    let bidAmount = balansol.bidAmount.toString()\n    const loading = balansol.loading\n    if (loading) bidAmount = ''\n    dispatch(setSwapState({ bidAmount, loading }))\n    return setPlatformSwap(balansol)\n  }, [balansol, dispatch, isReverse])\n  useDebounce(() => updateRouteFromAsk(), 500, [updateRouteFromAsk])\n\n  const provider = useMemo((): SwapProvider => {\n    return platformSwap\n  }, [platformSwap])\n\n  // Context provider\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default Provider\n\n/**\n * Swap Hook\n */\nexport const useSwap = () => {\n  return useContext<SwapProvider>(Context)\n}\n","import { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { initTxCreateMultiTokenAccount } from '@sen-use/web3'\nimport { getAnchorProvider } from '@sentre/senhub'\n\nimport { AppState } from 'model'\nimport { SwapPlatform, SwapProvider } from '../useSwap'\nimport { useOracles } from '../useOracles'\nimport { useBestRouteFromAsk } from './routeFromAsk/useBestRouteFromAsk'\nimport { useBestRouteFromBid } from './routeFromBid/useBestRouteFromBid'\nimport { useWrapAndUnwrapSolIfNeed } from 'hooks/useWrapAndUnwrapSolIfNeed'\n\nexport const useSwapBalansol = (): SwapProvider => {\n  const { bidAmount, bidMint, askMint, slippageTolerance, isReverse } =\n    useSelector((state: AppState) => state.swap)\n  const { decimalizeMintAmount } = useOracles()\n  const routesFromBid = useBestRouteFromBid()\n  const routesFromAsk = useBestRouteFromAsk()\n  const { createWrapSolTxIfNeed, createUnWrapSolTxIfNeed } =\n    useWrapAndUnwrapSolIfNeed()\n\n  const { loading, bestRoute } = isReverse ? routesFromAsk : routesFromBid\n\n  const initTokenAccountTxs = useCallback(async () => {\n    const provider = getAnchorProvider()!\n    const transactions = await initTxCreateMultiTokenAccount(provider, {\n      mints: bestRoute.route.map((route) => route.askMint),\n    })\n    return transactions\n  }, [bestRoute.route])\n\n  const swap = useCallback(async () => {\n    const provider = getAnchorProvider()!\n    const bidAmountBN = await decimalizeMintAmount(bidAmount, bidMint)\n    const limit = Number(bestRoute.askAmount) * (1 - slippageTolerance / 100)\n    const limitBN = await decimalizeMintAmount(limit, askMint)\n    const transactions = await initTokenAccountTxs()\n    const wrapSolTx = await createWrapSolTxIfNeed(bidMint, bidAmount)\n    if (wrapSolTx) transactions.push(wrapSolTx)\n\n    const { transaction } = await window.balansol.createRouteTransaction(\n      bidAmountBN,\n      bestRoute.route,\n      limitBN,\n    )\n    transactions.push(transaction)\n\n    const unwrapSolTx = await createUnWrapSolTxIfNeed(askMint)\n    if (unwrapSolTx) transactions.push(unwrapSolTx)\n\n    const txIds = await provider.sendAll(\n      transactions.map((tx) => {\n        return { tx, signers: [] }\n      }),\n    )\n    return { txId: txIds[txIds.length - 1] }\n  }, [\n    askMint,\n    bestRoute.askAmount,\n    bestRoute.route,\n    bidAmount,\n    bidMint,\n    createUnWrapSolTxIfNeed,\n    createWrapSolTxIfNeed,\n    decimalizeMintAmount,\n    initTokenAccountTxs,\n    slippageTolerance,\n  ])\n\n  return useMemo(() => {\n    return {\n      ...bestRoute,\n      swap,\n      loading: loading,\n      platform: SwapPlatform.Balansol,\n    }\n  }, [bestRoute, swap, loading])\n}\n","import { Fragment } from 'react'\n\nimport { Divider, Space } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { MintAvatar } from '@sen-use/app'\nimport PoweredByJupiter from 'components/poweredByJupiter'\n\nimport { SwapPlatform, useSwap } from 'hooks/useSwap'\n\nconst RouteAvatar = () => {\n  const { route, platform } = useSwap()\n\n  const routeMints: string[] = []\n  route.forEach((routeElm, idx) => {\n    if (idx === 0) routeMints.push(routeElm.bidMint)\n    routeMints.push(routeElm.askMint)\n  })\n\n  return (\n    <Space>\n      {routeMints.map((mintAddress, i) => (\n        <Fragment key={i}>\n          {i > 0 && <IonIcon name=\"chevron-forward-outline\" />}\n          <MintAvatar mintAddress={mintAddress} />\n        </Fragment>\n      ))}\n      {!!route.length && platform === SwapPlatform.Jupiter && (\n        <Fragment>\n          <Divider type=\"vertical\" style={{ margin: 0 }} />\n          <PoweredByJupiter />\n        </Fragment>\n      )}\n      {!route.length && <Fragment>--</Fragment>}\n    </Space>\n  )\n}\nexport default RouteAvatar\n","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { util } from '@sentre/senhub'\n\nimport { Button, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { MintSymbol } from '@sen-use/app'\n\nimport { AppState } from 'model'\nimport { useSwap } from 'hooks/useSwap'\n\nconst MintRatio = ({ reversed = false }: { reversed?: boolean }) => {\n  const { askMint, bidMint } = useSelector((state: AppState) => state.swap)\n  const { bidAmount, askAmount } = useSwap()\n\n  let spotPrice = reversed ? askAmount / bidAmount : bidAmount / askAmount\n  if (!bidAmount || !askAmount) spotPrice = 0\n  const actualBid = reversed ? bidMint : askMint\n  const actualAsk = reversed ? askMint : bidMint\n\n  return (\n    <Space>\n      <MintSymbol mintAddress={actualBid} />\n      <Typography.Text>=</Typography.Text>\n      <Typography.Text>\n        {util.numeric(spotPrice).format('0.[0000]')}\n      </Typography.Text>\n      <MintSymbol mintAddress={actualAsk} />\n    </Space>\n  )\n}\n\nconst SpotPrice = () => {\n  const [reversed, setReversed] = useState(false)\n\n  const onReversed = () => {\n    setReversed(!reversed)\n  }\n\n  return (\n    <Space>\n      <Button\n        type=\"text\"\n        onClick={onReversed}\n        shape=\"circle\"\n        icon={<IonIcon name=\"swap-horizontal-outline\" />}\n        style={{ background: 'transparent' }}\n      />\n      <Typography.Text>1</Typography.Text>\n      <MintRatio reversed={reversed} />\n    </Space>\n  )\n}\n\nexport default SpotPrice\n","import { ReactNode, CSSProperties } from 'react'\nimport { PoolData } from '@senswap/sen-js'\nimport { useSelector } from 'react-redux'\nimport { util } from '@sentre/senhub'\n\nimport { Col, Row, Skeleton, Typography } from 'antd'\nimport RouteAvatar from './routeAvatar'\nimport SpotPrice from './spotPrice'\n\nimport { AppState } from 'model'\nimport { priceImpactColor } from 'helper'\nimport { useSwap } from 'hooks/useSwap'\n\nexport type LiteMintInfo = {\n  address: string\n  decimals: number\n}\n\nexport type HopData = {\n  poolData: PoolData & { address: string }\n  srcMintAddress: string\n  dstMintAddress: string\n}\n\ntype ExtraTypographyProps = {\n  label?: string\n  content?: string | ReactNode\n  loading?: boolean\n}\n\nconst ExtraTypography = ({\n  label = '',\n  content = '',\n  loading = false,\n}: ExtraTypographyProps) => {\n  return (\n    <Row align=\"middle\" style={{ width: '100%' }}>\n      <Col flex=\"auto\" style={{ justifyContent: 'left' }}>\n        <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      </Col>\n      <Col>\n        {loading ? (\n          <Skeleton.Input style={{ width: 150 }} active size=\"small\" />\n        ) : (\n          <span>{content}</span>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nconst SwapInfo = ({ extraStyle }: { extraStyle?: CSSProperties }) => {\n  const { slippageTolerance, loading, bidAmount, askAmount } = useSelector(\n    (state: AppState) => state.swap,\n  )\n  const { priceImpact } = useSwap()\n\n  const priceImpactDisplay = util.numeric(priceImpact).format('0.[0000]')\n  const swapLoading = loading && (!!Number(bidAmount) || !!Number(askAmount))\n\n  return (\n    <Row gutter={[12, 12]} style={{ ...extraStyle }}>\n      <Col span={24}>\n        <ExtraTypography\n          label=\"Price impact\"\n          content={\n            <Typography.Text style={{ color: priceImpactColor(priceImpact) }}>\n              {Number(priceImpactDisplay) > 0\n                ? util.numeric(priceImpactDisplay).format('0.[0000]%')\n                : '~ 0%'}\n            </Typography.Text>\n          }\n          loading={swapLoading}\n        />\n      </Col>\n      <Col span={24}>\n        <ExtraTypography\n          label=\"Price\"\n          content={<SpotPrice />}\n          loading={swapLoading}\n        />\n      </Col>\n      <Col span={24}>\n        <ExtraTypography\n          label=\"Slippage Tolerance\"\n          content={`${slippageTolerance}%`}\n          loading={swapLoading}\n        />\n      </Col>\n      <Col span={24} style={{ minHeight: 24 }}>\n        <ExtraTypography\n          label=\"Route\"\n          content={<RouteAvatar />}\n          loading={swapLoading}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default SwapInfo\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  Row,\n  Col,\n  Space,\n  Typography,\n  Modal,\n  Card,\n  Checkbox,\n  Button,\n} from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { MintAvatar, MintSymbol } from '@sen-use/app'\nimport PreviewSwap from 'view/swap/swapInfo'\n\nimport { AppDispatch, AppState } from 'model'\nimport { setSwapState } from 'model/swap.controller'\nimport { notifyError, notifySuccess } from 'helper'\nimport { PriceImpact } from 'constant'\nimport { useSwap } from 'hooks/useSwap'\n\nimport './index.less'\n\nexport type ConfirmSwapProps = {\n  visible?: boolean\n  onCancel?: () => void\n}\n\nconst ConfirmSwap = ({\n  visible = false,\n  onCancel = () => {},\n}: ConfirmSwapProps) => {\n  const [checked, setChecked] = useState(false)\n  const [isDisplayWarning, setIsDisplayWarning] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n  const { bidAmount, bidMint, askMint } = useSelector(\n    (state: AppState) => state.swap,\n  )\n  const { askAmount, priceImpact, swap } = useSwap()\n\n  useEffect(() => {\n    if (priceImpact > PriceImpact.goodSwap) return setIsDisplayWarning(true)\n    setIsDisplayWarning(false)\n  }, [priceImpact])\n\n  const onCloseModal = useCallback(() => {\n    onCancel()\n    setChecked(false)\n  }, [onCancel])\n\n  const onSwap = async () => {\n    setIsLoading(true)\n    try {\n      const { txId } = await swap()\n      onCancel()\n      dispatch(setSwapState({ bidAmount: '', askAmount: '' }))\n      notifySuccess('Swap', txId)\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      closeIcon={<IonIcon name=\"close\" />}\n      footer={null}\n      open={visible}\n      forceRender\n    >\n      <Row gutter={[16, 24]}>\n        <Col span={24}>\n          <Typography.Title level={4}> Review</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Row align=\"middle\" justify=\"space-between\">\n            <Col>\n              <Space direction=\"vertical\">\n                <Typography.Text>From</Typography.Text>\n                <Space>\n                  <MintAvatar mintAddress={bidMint} />\n                  <Typography.Text>\n                    <MintSymbol mintAddress={bidMint} />\n                  </Typography.Text>\n                </Space>\n                <Typography.Title level={4}>{bidAmount}</Typography.Title>\n              </Space>\n            </Col>\n            <Col>\n              <IonIcon name=\"arrow-forward-outline\" style={{ fontSize: 24 }} />\n            </Col>\n            <Col>\n              <Space direction=\"vertical\" align=\"end\">\n                <Typography.Text>To</Typography.Text>\n                <Space>\n                  <MintAvatar mintAddress={askMint} />\n                  <Typography.Text>\n                    <MintSymbol mintAddress={askMint} />\n                  </Typography.Text>\n                </Space>\n                <Typography.Title level={4}>{askAmount}</Typography.Title>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Card bordered={false} className=\"confirm-info\">\n            <PreviewSwap />\n          </Card>\n        </Col>\n        {isDisplayWarning && (\n          <Col span={24}>\n            <Checkbox checked={checked} onChange={() => setChecked(!checked)}>\n              The price impact is currently high. Tick the checkbox to accept\n              the swap.\n            </Checkbox>\n          </Col>\n        )}\n\n        <Col span={24}>\n          <Button\n            type=\"primary\"\n            onClick={onSwap}\n            disabled={isDisplayWarning && !checked}\n            loading={isLoading}\n            block\n            size=\"large\"\n          >\n            Swap\n          </Button>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\nexport default ConfirmSwap\n","import { memo, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Button, Col, Row } from 'antd'\nimport ConfirmSwap from './confirmSwap'\n\nimport { AppState } from 'model'\nimport { useSwap } from 'hooks/useSwap'\nimport { useWrapAccountBalance } from 'hooks/useWrapAccountBalance'\n\nimport './index.less'\n\nconst ReviewSwap = () => {\n  const bidAmount = useSelector((state: AppState) => state.swap.bidAmount)\n  const askAmount = useSelector((state: AppState) => state.swap.askAmount)\n  const bidMint = useSelector((state: AppState) => state.swap.bidMint)\n  const loading = useSelector((state: AppState) => state.swap.loading)\n\n  const [visible, setVisible] = useState(false)\n  const { route } = useSwap()\n  const { balance } = useWrapAccountBalance(bidMint)\n\n  const errorMessage = useMemo(() => {\n    if (!Number(bidAmount)) return 'Enter an amount'\n    if (balance < Number(bidAmount)) return 'Balance not enough'\n    if (!Number(askAmount) || !route.length) return 'Route not found'\n\n    return ''\n  }, [askAmount, balance, bidAmount, route.length])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          onClick={() => setVisible(true)}\n          disabled={!!errorMessage}\n          loading={loading && Number(bidAmount) + Number(askAmount) !== 0}\n          block\n          size=\"large\"\n        >\n          {!errorMessage ? 'Review' : errorMessage}\n        </Button>\n      </Col>\n      <ConfirmSwap visible={visible} onCancel={() => setVisible(false)} />\n    </Row>\n  )\n}\n\nexport default memo(ReviewSwap)\n","var _defs, _path, _path2;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgSen(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    viewBox: \"0 0 283.465 283.465\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear-gradient\",\n    x1: -1222.504,\n    y1: -2883.343,\n    x2: -1135.428,\n    y2: -2970.419,\n    gradientTransform: \"translate(1300.837 3068.613)\",\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#f9575e\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.27,\n    stopColor: \"#f8555b\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.486,\n    stopColor: \"#f44f51\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.685,\n    stopColor: \"#ee4540\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.871,\n    stopColor: \"#e63728\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#de2a13\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear-gradient-2\",\n    x1: 1314.111,\n    y1: -895.144,\n    x2: 1389.882,\n    y2: -811.556,\n    gradientTransform: \"translate(1516.988 -707.868) rotate(180)\",\n    xlinkHref: \"#linear-gradient\"\n  }))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Senswap logo FINAL\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.179,85.127H114a92.562,92.562,0,0,1,92.562,92.562v20.648a0,0,0,0,1,0,0H129.741a92.562,92.562,0,0,1-92.562-92.562V85.127A0,0,0,0,1,37.179,85.127Z\",\n    transform: \"translate(107.828 328.128) rotate(-135)\",\n    fill: \"url(#linear-gradient)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M169.462,85.127h76.823a0,0,0,0,1,0,0v20.648a92.562,92.562,0,0,1-92.562,92.562H76.9a0,0,0,0,1,0,0V177.689a92.562,92.562,0,0,1,92.562-92.562Z\",\n    transform: \"translate(-52.89 155.776) rotate(-45)\",\n    fill: \"url(#linear-gradient-2)\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSen);\nexport default __webpack_public_path__ + \"static/media/sen.f2d012c907167ba613b035621b6423cb.svg\";\nexport { ForwardRef as ReactComponent };","import SentreIcon from 'static/images/sen.svg'\nimport { Avatar, Space, Tooltip, Typography } from 'antd'\n\nexport type PoweredBySentreProps = {\n  title?: string\n  spacing?: number\n  iconSize?: number\n}\n\nconst PoweredBySentre = ({\n  title = 'Powered by',\n  spacing = 4,\n  iconSize = 20,\n}: PoweredBySentreProps) => {\n  return (\n    <Space size={spacing} style={{ cursor: 'pointer' }}>\n      <Typography.Text style={{ fontSize: 12, color: '#7A7B85' }}>\n        {title}\n      </Typography.Text>\n      <Tooltip title=\"Sentre Protocol\">\n        <Avatar src={SentreIcon} size={iconSize} />\n      </Tooltip>\n    </Space>\n  )\n}\n\nexport default PoweredBySentre\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Card, Space, Typography } from 'antd'\n\nimport { setSwapState } from 'model/swap.controller'\nimport { AppState } from 'model'\n\nconst slippageOptions = [0.5, 1, 2, 100]\n\nconst Setting = () => {\n  const slippageTolerance = useSelector(\n    (state: AppState) => state.swap.slippageTolerance,\n  )\n  const dispatch = useDispatch()\n\n  const onChange = (value: number) => {\n    dispatch(\n      setSwapState({\n        slippageTolerance: value,\n      }),\n    )\n  }\n\n  return (\n    <Card\n      bodyStyle={{\n        padding: 16,\n      }}\n      style={{ boxShadow: 'none' }}\n    >\n      <Space size={24} direction=\"vertical\">\n        <Typography.Title level={5}>Slippage tolerance</Typography.Title>\n        <Space size={12}>\n          {slippageOptions.map((value) => {\n            const slippageSelected =\n              value === slippageTolerance ? 'selected' : ''\n            return (\n              <Button\n                className={`btn-slippage ${slippageSelected}`}\n                onClick={() => {\n                  onChange(value)\n                }}\n                key={value}\n              >\n                {value === 100 ? 'Freely' : `${value}%`}\n              </Button>\n            )\n          })}\n        </Space>\n      </Space>\n    </Card>\n  )\n}\n\nexport default Setting\n","import { Button, Divider, Popover, Space } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport PoweredBySentre from './poweredBySentre'\nimport Setting from './setting'\n\nconst SettingArea = () => {\n  return (\n    <Space>\n      <PoweredBySentre />\n      <Divider type=\"vertical\" />\n      <Popover\n        placement=\"bottomRight\"\n        content={<Setting />}\n        trigger=\"click\"\n        overlayClassName=\"slippage\"\n        overlayInnerStyle={{ borderRadius: 24 }}\n      >\n        <Button\n          style={{ marginRight: -7 }}\n          type=\"text\"\n          icon={<IonIcon name=\"cog-outline\" />}\n        />\n      </Popover>\n    </Space>\n  )\n}\n\nexport default SettingArea\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport AskInput from './askInput'\nimport BidInput from './bidInput'\nimport ActionReview from './reviewSwap'\nimport SettingArea from './settingArea'\nimport SwapInfo from 'view/swap/swapInfo'\n\nimport { setSwapState } from 'model/swap.controller'\nimport { AppState } from 'model'\nimport { useAppRouter } from 'hooks/useAppRouter'\n\nimport './index.less'\n\nconst Swap = () => {\n  const dispatch = useDispatch()\n  const { askMint, bidMint, askAmount } = useSelector(\n    (state: AppState) => state.swap,\n  )\n  const { pushHistory, getAllQuery } = useAppRouter()\n\n  useEffect(() => {\n    if (!askMint || !bidMint) return\n    const { bid_mint, ask_mint } = getAllQuery<{\n      bid_mint: string\n      ask_mint: string\n    }>()\n    if (bidMint !== bid_mint || askMint !== ask_mint) {\n      pushHistory(`/swap`, { bid_mint: bidMint, ask_mint: askMint }, false)\n    }\n  }, [askMint, bidMint, getAllQuery, pushHistory])\n\n  const onSwitch = () => {\n    dispatch(\n      setSwapState({\n        askMint: bidMint,\n        bidMint: askMint,\n        bidAmount: askAmount,\n        askAmount: '',\n        isReverse: false,\n        loading: true,\n      }),\n    )\n  }\n\n  return (\n    <Row gutter={[12, 12]} justify=\"center\">\n      <Col xs={24} md={14} lg={12} xl={8}>\n        <Card style={{ boxShadow: 'unset' }}>\n          <Row gutter={[0, 16]} justify=\"end\">\n            <Col>\n              <SettingArea />\n            </Col>\n            <Col span={24}>\n              <Row gutter={[0, 4]}>\n                <Col span={24}>\n                  <BidInput />\n                </Col>\n                <Col span={24}>\n                  <Button\n                    className=\"btn-switch-type\"\n                    size=\"small\"\n                    icon={<IonIcon name=\"git-compare-outline\" />}\n                    onClick={onSwitch}\n                  />\n                </Col>\n                <Col span={24}>\n                  <AskInput />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <SwapInfo />\n            </Col>\n            <Col span={24} />\n            <Col span={24}>\n              <ActionReview />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24} />\n    </Row>\n  )\n}\n\nexport default Swap\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { TokenInfo } from '@solana/spl-token-registry'\nimport { tokenProvider, useTheme, util } from '@sentre/senhub'\n\nimport { Card, Space, Typography } from 'antd'\n\nimport { AppState } from 'model'\nimport { calcNormalizedWeight } from 'helper/oracles'\n\nexport type PercentGroupMintsProps = { poolAddress: string }\n\nconst PercentGroupMints = ({ poolAddress }: PercentGroupMintsProps) => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const [poolSymbol, setPoolSymbol] = useState<string[]>([])\n  const theme = useTheme()\n\n  useEffect(() => {\n    ;(async () => {\n      let poolSymbols = await Promise.all(\n        poolData.mints.map(async (mint, index) => {\n          const normalizedWeight = calcNormalizedWeight(\n            poolData.weights,\n            poolData.weights[index],\n          )\n          const tokenInfo: TokenInfo | undefined =\n            await tokenProvider.findByAddress(mint.toBase58())\n\n          return `${util.numeric(normalizedWeight).format('0,0.[00]%')} ${\n            tokenInfo?.symbol || mint.toBase58().substring(0, 4)\n          }`\n        }),\n      )\n      return setPoolSymbol(poolSymbols)\n    })()\n  }, [poolData.mints, poolData.weights])\n\n  return (\n    <Space size={[16, 8]} align=\"center\" wrap={true}>\n      <Typography.Text style={{ whiteSpace: 'nowrap' }}>\n        Balansol LP\n      </Typography.Text>\n\n      {poolSymbol.map((value, idx) => (\n        <Card\n          bodyStyle={{ padding: '2px 8px' }}\n          style={{\n            background: theme === 'dark' ? '#394360' : '#ffffff',\n            marginRight: '-8px',\n            boxShadow: 'none',\n          }}\n          key={value + idx}\n        >\n          <Typography.Text>{value}</Typography.Text>\n        </Card>\n      ))}\n    </Space>\n  )\n}\n\nexport default PercentGroupMints\n","import { MouseEvent, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useWalletAddress, util } from '@sentre/senhub'\nimport { PoolState } from '@senswap/balancer'\n\nimport { Button, Space, Tooltip, Typography } from 'antd'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport IonIcon from '@sentre/antd-ionicon'\nimport { AppState } from 'model'\n\nexport type PoolAddressActionsProps = { poolAddress: string }\n\nconst PoolAddressActions = ({ poolAddress }: PoolAddressActionsProps) => {\n  const [copied, setCopied] = useState(false)\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const walletAddress = useWalletAddress()\n  const state = poolData.state as PoolState\n\n  const onCopy = async (e: MouseEvent<HTMLElement>) => {\n    setCopied(true)\n    setTimeout(() => setCopied(false), 1500)\n    e.stopPropagation()\n  }\n  return (\n    <Space size={10}>\n      {state['frozen'] && (\n        <Tooltip title=\"Frozen Pool\">\n          <IonIcon name=\"snow-outline\" />\n        </Tooltip>\n      )}\n      {poolData.authority.toBase58() === walletAddress && (\n        <Tooltip title=\"Your pool\">\n          <IonIcon name=\"person-outline\" />\n        </Tooltip>\n      )}\n      <Tooltip title={`Pool Address: ${poolAddress}`}>\n        <Typography.Text\n          type=\"secondary\"\n          style={{ cursor: 'pointer' }}\n          onClick={(e) => {\n            window.open(util.explorer(poolAddress), '_blank')\n            e?.stopPropagation()\n          }}\n        >\n          {util.shortenAddress(poolAddress, 3, '...')}\n        </Typography.Text>\n      </Tooltip>\n      <Tooltip title=\"Copied\" open={copied}>\n        <CopyToClipboard text={poolAddress}>\n          <Button\n            type=\"text\"\n            icon={<IonIcon name=\"copy-outline\" />}\n            onClick={onCopy}\n            style={{ width: 'unset', height: 'unset' }}\n          />\n        </CopyToClipboard>\n      </Tooltip>\n    </Space>\n  )\n}\nexport default PoolAddressActions\n","import { useSelector } from 'react-redux'\nimport { useWalletAddress, util } from '@sentre/senhub'\n\nimport { Card, Col, Row, Space, Typography } from 'antd'\nimport PercentGroupMints from './percentGroupMints'\nimport PoolAddressActions from './poolAddressActions'\nimport { PoolAvatar } from 'components/pools/poolAvatar'\n\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport { useTVL } from 'hooks/useTVL'\nimport { useVolume24h } from 'hooks/useVolume24h'\nimport { AppState } from 'model'\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\n\nexport type DetailsCardProps = { poolAddress: string }\n\nconst DetailsCard = ({ poolAddress }: DetailsCardProps) => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const walletAddress = useWalletAddress()\n  const { vol24h } = useVolume24h(poolAddress)\n  const { pushHistory } = useAppRouter()\n\n  const poolState: any = poolData.state\n  const { TVL } = useTVL(poolAddress)\n  const { balance } = useAccountBalanceByMintAddress(\n    poolData.mintLpt.toBase58(),\n  )\n\n  const validPool =\n    poolState['initialized'] || poolData.authority.toBase58() === walletAddress\n\n  return (\n    <Card\n      className={`${validPool ? 'pool-card-detail' : 'disabled-pool'}`}\n      style={{ boxShadow: 'unset' }}\n      onClick={() => pushHistory(`/details`, { pool: poolAddress })}\n    >\n      <Row style={{ marginBottom: '16px' }}>\n        <Col flex=\"auto\">\n          <PoolAvatar size={32} poolAddress={poolAddress} max={3} />\n        </Col>\n        <Col>\n          <PoolAddressActions poolAddress={poolAddress} />\n        </Col>\n      </Row>\n      <Row gutter={[0, 24]}>\n        <Col span={24}>\n          <PercentGroupMints poolAddress={poolAddress} />\n        </Col>\n        <Col span={24}>\n          <Row align=\"bottom\" wrap={false}>\n            <Col flex=\"auto\">\n              <Row gutter={[32, 0]}>\n                <Col>\n                  <Space size={4} direction=\"vertical\">\n                    <Typography.Text type=\"secondary\">TVL:</Typography.Text>\n                    <Typography.Title level={5}>\n                      {' '}\n                      {util.numeric(TVL).formatCurrency('($0.00a)')}\n                    </Typography.Title>\n                  </Space>\n                </Col>\n                <Col>\n                  <Space size={4} direction=\"vertical\">\n                    <Typography.Text type=\"secondary\">Vol 24h:</Typography.Text>\n                    <Typography.Title level={5}>\n                      {' '}\n                      {util.numeric(vol24h).formatCurrency('($0.00a)')}\n                    </Typography.Title>\n                  </Space>\n                </Col>\n                <Col flex=\"auto\">\n                  <Space size={4} direction=\"vertical\">\n                    <Typography.Text type=\"secondary\">\n                      My Contribution:\n                    </Typography.Text>\n                    <Typography.Title level={5}>\n                      {' '}\n                      {util.numeric(balance).format('0,0.[00]')} LP\n                    </Typography.Title>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default DetailsCard\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react'\nimport { PoolState } from '@senswap/balancer'\nimport LazyLoad from '@sentre/react-lazyload'\nimport { notifyError } from '@sen-use/app'\n\nimport { Col, Row, Spin } from 'antd'\nimport DetailsCard from './detailsCard'\n\nimport { useFilterPools } from 'hooks/pools/useFilterPools'\nimport { useSearchedPools } from 'hooks/pools/useSearchedPools'\nimport { fetchServerTVL } from 'helper'\n\nconst ListPools = () => {\n  const [loading, setLoading] = useState(true)\n  const [tvls, setTVLs] = useState<Record<string, number>>({})\n  const { poolsFilter } = useFilterPools()\n  const listPool = useSearchedPools(poolsFilter)\n\n  const sortedPool = useMemo(\n    () => Object.keys(listPool).sort((a, b) => (tvls[b] || 0) - (tvls[a] || 0)),\n    [listPool, tvls],\n  )\n\n  const fetchTVL = useCallback(async () => {\n    try {\n      setLoading(true)\n      const poolTVLs = await fetchServerTVL()\n      const newTVLs: Record<string, number> = {}\n      for (const { address, tvl } of poolTVLs) newTVLs[address] = tvl\n\n      setTVLs(newTVLs)\n    } catch (err) {\n      notifyError(err)\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    fetchTVL()\n  }, [fetchTVL])\n\n  if (loading)\n    return (\n      <Row justify=\"center\">\n        <Col>\n          <Spin />\n        </Col>\n      </Row>\n    )\n\n  return (\n    <Row gutter={[24, 24]}>\n      {sortedPool.map((poolAddress) => {\n        const poolData = listPool[poolAddress]\n        if (!poolData) return <Fragment />\n        let poolState: PoolState = poolData.state\n        if (poolState['uninitialized'] || poolState['deleted']) return null\n        if (poolData.reserves.map((val) => val.toString()).includes('0'))\n          return null\n\n        return (\n          <Col xs={24} md={24} key={poolAddress}>\n            <LazyLoad height={198}>\n              <DetailsCard poolAddress={poolAddress} />\n            </LazyLoad>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nexport default ListPools\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAccounts, useWalletAddress } from '@sentre/senhub'\nimport { utils, web3 } from '@project-serum/anchor'\n\nimport { AppState } from 'model'\nimport { PoolsState } from 'model/pools.controller'\nimport { FilterPools } from 'constant'\n\nexport const useFilterPools = () => {\n  const [poolsFilter, setPoolsFilter] = useState<PoolsState>({})\n  const pools = useSelector((state: AppState) => state.pools)\n  const filterPool = useSelector(\n    (state: AppState) => state.searchPools.filterPool,\n  )\n  const walletAddress = useWalletAddress()\n  const accounts = useAccounts()\n\n  const checkIsYourPool = useCallback(\n    (address: string) => pools[address].authority.toBase58() === walletAddress,\n    [pools, walletAddress],\n  )\n\n  const checkIsDepositedPool = useCallback(\n    async (poolAddress: string) => {\n      const tokenAccountLpt = await utils.token.associatedAddress({\n        mint: pools[poolAddress].mintLpt,\n        owner: new web3.PublicKey(walletAddress),\n      })\n      const balance = accounts[tokenAccountLpt.toBase58()]?.amount\n      if (!balance) return false\n      return true\n    },\n    [accounts, pools, walletAddress],\n  )\n\n  const filterListPools = useCallback(\n    async (pools: PoolsState) => {\n      let newPools: PoolsState = {}\n      for (const poolAddress in pools) {\n        let isValid = false\n        switch (filterPool) {\n          case FilterPools.YourPools:\n            isValid = checkIsYourPool(poolAddress)\n            break\n          case FilterPools.DepositedPools:\n            isValid = await checkIsDepositedPool(poolAddress)\n            break\n          default:\n            isValid = true\n            break\n        }\n        for (const reserve of pools[poolAddress].reserves) {\n          if (reserve.isZero()) isValid = false\n        }\n        if (isValid && web3.PublicKey.isOnCurve(pools[poolAddress].authority))\n          newPools[poolAddress] = pools[poolAddress]\n      }\n      setPoolsFilter(newPools)\n    },\n    [checkIsDepositedPool, checkIsYourPool, filterPool],\n  )\n\n  useEffect(() => {\n    filterListPools(pools)\n  }, [filterListPools, pools])\n\n  return { poolsFilter, filterListPools, checkIsYourPool }\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { forceCheck } from '@sentre/react-lazyload'\nimport { tokenProvider } from '@sentre/senhub'\n\nimport { AppState } from 'model'\nimport { PoolsState } from 'model/pools.controller'\n\nconst KEY_SIZE = 3\n\nexport const useSearchedPools = (pools: PoolsState) => {\n  const [poolsSearched, setPoolsSearched] = useState<PoolsState>({})\n  const searchInput = useSelector(\n    (state: AppState) => state.searchPools.searchInput,\n  )\n\n  const search = useCallback(async () => {\n    const newPoolsSearch: PoolsState = {}\n    const listTokenInfo = await tokenProvider.find(searchInput)\n    const listTokenAddress = listTokenInfo.map((info) => info.address)\n\n    const listPoolsAddress = Object.keys(pools).filter((poolAddress) => {\n      if (!searchInput || !pools || searchInput.length < KEY_SIZE) return true\n      const poolData = pools[poolAddress]\n      const { mintLpt, mints } = poolData\n      // Search poolAddress\n      if (poolAddress.includes(searchInput)) return true\n      // Search minLpt\n      if (mintLpt.toBase58().includes(searchInput)) return true\n      // Search Token\n      for (const mint in mints) {\n        if (listTokenAddress.includes(mints[mint].toBase58())) return true\n        if (searchInput.includes(mints[mint].toBase58())) return true\n      }\n      return false\n    })\n    listPoolsAddress\n      .sort()\n      .map((poolAddress) => (newPoolsSearch[poolAddress] = pools[poolAddress]))\n    setPoolsSearched(newPoolsSearch)\n  }, [pools, searchInput])\n\n  useEffect(() => {\n    search().then(() => {\n      // fix lazyload\n      setTimeout(() => {\n        forceCheck()\n      }, 500)\n    })\n  }, [search])\n\n  return poolsSearched\n}\n","import { MintAvatar } from '@sen-use/app'\nimport { util } from '@sentre/senhub'\n\nimport { TokenInfo } from 'view/pools/newPool'\n\nexport default function Proportion({ tokenList }: { tokenList: TokenInfo[] }) {\n  const weightTotal = tokenList.reduce(\n    (previousSum, currentValue) => previousSum + Number(currentValue.weight),\n    0,\n  )\n\n  const remainingPortion = 100 - weightTotal\n\n  return (\n    <div style={{ display: 'flex', marginTop: 8 }}>\n      {tokenList.map((value, index) => {\n        if (Number(value.weight) === 0) return null\n        return (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              width:\n                index !== 1\n                  ? `calc(${value.weight}% + 8px)`\n                  : `${value.weight}%`,\n              background: `${util.randomColor(value.addressToken || '_', 1)}`,\n              height: '8px',\n              borderRadius: '20px',\n              zIndex: `${index}`,\n              marginRight: '-8px',\n              alignItems: 'center',\n            }}\n            key={`${value.addressToken}${index}`}\n          >\n            <MintAvatar mintAddress={value.addressToken} />\n          </div>\n        )\n      })}\n      <div\n        style={{\n          width: `${remainingPortion}%`,\n          background: '#142042',\n          borderRadius: '20px',\n        }}\n      ></div>\n    </div>\n  )\n}\n","import { Button, Space } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { MintSetup } from '../index'\nimport NumericInput from 'components/numericInput'\n\nexport type WeightControlProps = {\n  tokenInfo: MintSetup\n  onChangeWeight: (weight: string) => void\n  onChangeLock: (isLocked: boolean) => void\n  onRemoveToken: () => void\n}\n\nconst WeightControl = ({\n  tokenInfo,\n  onChangeWeight,\n  onChangeLock,\n  onRemoveToken,\n}: WeightControlProps) => {\n  const { weight, isLocked } = tokenInfo\n\n  return (\n    <Space size={4}>\n      <NumericInput\n        value={weight}\n        controls={false}\n        size=\"large\"\n        bordered={false}\n        onValue={onChangeWeight}\n        addonAfter={<div style={{ marginLeft: -4 }}>%</div>}\n        maxLength={5}\n        placeholder=\"0\"\n      />\n      <Button\n        onClick={() => {\n          onChangeLock(!isLocked)\n        }}\n        shape=\"circle\"\n        icon={\n          <IonIcon\n            name={isLocked ? 'lock-closed-outline' : 'lock-open-outline'}\n          />\n        }\n        style={{ background: 'unset' }}\n        type=\"text\"\n      />\n      <Button\n        onClick={onRemoveToken}\n        shape=\"circle\"\n        icon={<IonIcon name=\"trash-outline\" />}\n        type=\"text\"\n      />\n    </Space>\n  )\n}\n\nexport default WeightControl\n","import { Col, Row } from 'antd'\nimport WeightControl from './weightControl'\n\nimport { MintSetup } from '../index'\nimport { MintSelection } from '@sen-use/app'\nimport { useTheme } from '@sentre/senhub'\n\nexport type TokenSetupProps = {\n  tokenList: MintSetup[]\n  mintSetup: MintSetup\n  onChangeTokenInfo: (value: MintSetup, index: number) => void\n  onRemoveToken: (index: number) => void\n  id: number\n}\n\nconst TokenSetup = ({\n  tokenList,\n  mintSetup,\n  onChangeTokenInfo,\n  onRemoveToken,\n  id,\n}: TokenSetupProps) => {\n  const theme = useTheme()\n\n  const onChangeToken = (addressToken: string) => {\n    onChangeTokenInfo(\n      {\n        ...mintSetup,\n        addressToken,\n      },\n      id,\n    )\n  }\n\n  const onChangeWeight = (weight: string) => {\n    onChangeTokenInfo(\n      {\n        ...mintSetup,\n        weight,\n      },\n      id,\n    )\n  }\n\n  const onChangeLock = (isLocked: boolean) => {\n    onChangeTokenInfo(\n      {\n        ...mintSetup,\n        isLocked,\n      },\n      id,\n    )\n  }\n\n  return (\n    <Row wrap={false}>\n      <Col flex=\"auto\">\n        <MintSelection\n          value={mintSetup.addressToken}\n          onChange={onChangeToken}\n          style={{ background: theme === 'dark' ? '#394360' : '#F2F4FA' }}\n        />\n      </Col>\n      <Col>\n        <WeightControl\n          tokenInfo={mintSetup}\n          onChangeWeight={onChangeWeight}\n          onChangeLock={onChangeLock}\n          onRemoveToken={() => onRemoveToken(id)}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TokenSetup\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { BN, web3 } from '@project-serum/anchor'\nimport { MintActionStates } from '@senswap/balancer'\n\nimport { Button, Col, Row } from 'antd'\nimport Proportion from 'components/proportion'\nimport IonIcon from '@sentre/antd-ionicon'\nimport TokenSetup from './tokenSetup'\n\nimport { GENERAL_NORMALIZED_NUMBER, PoolCreatingStep } from 'constant'\nimport { notifyError, notifySuccess } from 'helper'\nimport { MintSetup } from '../index'\nimport configs from 'configs'\n\nconst DEFAULT_SWAP_FEE = new BN(2_500_000) // 0.25%\nconst DEFAULT_TAX_FEE = new BN(500_000) // 0.05%\nconst DEFAULT_EMPTY_TOKEN = {\n  addressToken: '',\n  weight: '',\n  isLocked: false,\n}\nconst TOKEN_LIMIT = 8\n\nexport type ListTokenSetupProps = {\n  setCurrentStep: (step: PoolCreatingStep) => void\n}\n\nconst ListTokenSetup = ({ setCurrentStep }: ListTokenSetupProps) => {\n  const [listMintSetting, setListMintSetting] = useState<MintSetup[]>([])\n  const [indexJustUpdated, setIndexJustUpdated] = useState(-1)\n  const [loading, setLoading] = useState(false)\n\n  const autoEstimateWeight = useCallback(() => {\n    let totalWeight = 100\n    // Locked mint\n    let lockedMintsAmount = 0\n    let lastUnlockIndex = -1\n    listMintSetting.forEach((mintSetting, idx) => {\n      const locked = mintSetting.isLocked || idx === indexJustUpdated\n      if (!locked) return (lastUnlockIndex = idx)\n      totalWeight -= Number(mintSetting.weight)\n      lockedMintsAmount++\n    })\n    if (totalWeight < 0) totalWeight = 0\n\n    // Unlocked mint\n    const unlockedMintsAmount = listMintSetting.length - lockedMintsAmount\n    let averageWeight = totalWeight / unlockedMintsAmount\n    const newListMintSetting = JSON.parse(\n      JSON.stringify(listMintSetting),\n    ) as MintSetup[]\n    newListMintSetting.forEach((mintSetting, idx) => {\n      const locked = mintSetting.isLocked || idx === indexJustUpdated\n      if (locked) return\n      if (idx === lastUnlockIndex)\n        return (mintSetting.weight = totalWeight.toFixed(2))\n      mintSetting.weight = averageWeight.toFixed(2)\n      return (totalWeight -= Number(mintSetting.weight))\n    })\n    if (JSON.stringify(listMintSetting) !== JSON.stringify(newListMintSetting))\n      setListMintSetting(newListMintSetting)\n  }, [indexJustUpdated, listMintSetting])\n\n  useEffect(() => {\n    autoEstimateWeight()\n  }, [autoEstimateWeight])\n\n  const onCreatePool = async () => {\n    try {\n      setLoading(true)\n      const mintsConfigs = listMintSetting.map(({ addressToken, weight }) => {\n        const normalizeWeight = Number(weight) * GENERAL_NORMALIZED_NUMBER\n        return {\n          publicKey: new web3.PublicKey(addressToken),\n          action: MintActionStates.Active,\n          amountIn: new BN(0),\n          weight: new BN(normalizeWeight),\n        }\n      })\n      const { txId } = await window.balansol.initializePool({\n        fee: DEFAULT_SWAP_FEE,\n        taxFee: DEFAULT_TAX_FEE,\n        mintsConfigs,\n        taxMan: configs.sol.taxmanAddress,\n        sendAndConfirm: true,\n      })\n      notifySuccess('Create pool', txId)\n      setCurrentStep(PoolCreatingStep.addLiquidity)\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const onChangeTokenInfo = (mintSetting: MintSetup, index: number) => {\n    if (loading) return\n    const newListMintSetting = [...listMintSetting]\n    newListMintSetting[index] = { ...mintSetting }\n    setListMintSetting(newListMintSetting)\n    // Change weight\n    if (mintSetting.weight !== listMintSetting[index].weight)\n      setIndexJustUpdated(index)\n  }\n\n  const onAddNewToken = () => {\n    if (loading || listMintSetting.length >= TOKEN_LIMIT) return\n    setListMintSetting([...listMintSetting, { ...DEFAULT_EMPTY_TOKEN }])\n  }\n\n  const onRemoveToken = (index: number) => {\n    if (loading) return\n    setListMintSetting(listMintSetting.filter((e, i) => i !== index))\n  }\n\n  // Set default tokens new pool\n  useEffect(() => {\n    setListMintSetting([{ ...DEFAULT_EMPTY_TOKEN }, { ...DEFAULT_EMPTY_TOKEN }])\n  }, [])\n\n  const disabled = useMemo(() => {\n    if (listMintSetting.length < 2) return true\n    let sum = 0\n    for (const setting of listMintSetting) {\n      if (!setting.addressToken || !Number(setting.weight)) return true\n      sum += Number(setting.weight)\n    }\n    return sum !== 100\n  }, [listMintSetting])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[0, 12]}>\n          <Col flex=\"auto\">Token</Col>\n          <Col>Weight</Col>\n          {listMintSetting.map((mintSetup, index) => (\n            <Col span={24} key={mintSetup.addressToken + index}>\n              <TokenSetup\n                tokenList={listMintSetting}\n                mintSetup={mintSetup}\n                onChangeTokenInfo={onChangeTokenInfo}\n                onRemoveToken={onRemoveToken}\n                id={index}\n              />\n            </Col>\n          ))}\n          {listMintSetting.length < TOKEN_LIMIT && (\n            <Col span={24}>\n              <Button\n                icon={<IonIcon name=\"add-outline\" />}\n                onClick={onAddNewToken}\n                ghost\n                disabled={loading}\n              >\n                Add a token\n              </Button>\n            </Col>\n          )}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Proportion tokenList={listMintSetting} />\n      </Col>\n      <Col span={24}>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Button\n              type=\"primary\"\n              onClick={onCreatePool}\n              disabled={disabled}\n              loading={loading}\n              block\n            >\n              Supply\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ListTokenSetup\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { PoolData, PoolState } from '@senswap/balancer'\nimport { account } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type PoolsState = Record<string, PoolData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'pools'\nconst initialState: PoolsState = {}\n\n/**\n * Actions\n */\n\nexport const getPools = createAsyncThunk(`${NAME}/getPools`, async () => {\n  const pools = await window.balansol.getAllPoolData()\n  let bulk: PoolsState = {}\n  for (const pool of pools) {\n    const poolData = pool.account as PoolData\n    const poolState = poolData.state as PoolState\n    if (poolState['deleted']) continue\n    bulk[pool.publicKey.toBase58()] = poolData\n  }\n  return bulk\n})\n\nexport const getPool = createAsyncThunk<\n  PoolsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getPool`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  const {\n    pools: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n\n  const poolData = await window.balansol.getPoolData(address)\n  return { [address]: poolData }\n})\n\nexport const upsetPool = createAsyncThunk<\n  PoolsState,\n  { address: string; data: PoolData },\n  { state: any }\n>(`${NAME}/upsetPool`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const removePool = createAsyncThunk<\n  PoolsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/removePool`, async ({ address }, { getState }) => {\n  const { pools } = getState()\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!pools[address]) throw new Error('Pool address does not exist!')\n  const newPools = { ...pools }\n  delete newPools[address]\n  return newPools\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getPools.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(removePool.fulfilled, (state, { payload }) => payload),\n})\n\nexport default slice.reducer\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAnchorProvider, util } from '@sentre/senhub'\nimport { MintPrice, MintSymbol, useGetMintPrice } from '@sen-use/app'\nimport { web3 } from '@project-serum/anchor'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\n\nimport { notifyError, notifySuccess } from 'helper'\nimport { PoolCreatingStep } from 'constant'\nimport { AppDispatch, AppState } from 'model'\nimport { useOracles } from 'hooks/useOracles'\nimport { useMintBalance } from 'hooks/useMintBalance'\nimport { removePool } from 'model/pools.controller'\nimport { useWrapAndUnwrapSolIfNeed } from 'hooks/useWrapAndUnwrapSolIfNeed'\n\nexport type LiquidityInfoProps = {\n  poolAddress: string\n  setCurrentStep: (step: PoolCreatingStep) => void\n  amounts: string[]\n  onClose?: () => void\n}\n\nconst LiquidityInfo = ({\n  poolAddress,\n  setCurrentStep,\n  amounts,\n  onClose = () => {},\n}: LiquidityInfoProps) => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const dispatch = useDispatch<AppDispatch>()\n  const [tokenPrice, setTokenPrice] = useState<number[]>([])\n  const [loadingAdd, setLoadingAdd] = useState(false)\n  const [loadingClose, setLoadingClose] = useState(false)\n  const [disabledSupply, setDisabledSupply] = useState(true)\n  const { decimalizeMintAmount } = useOracles()\n  const { getMintBalance } = useMintBalance()\n  const getPrice = useGetMintPrice()\n  const { createWrapSolTxIfNeed } = useWrapAndUnwrapSolIfNeed()\n\n  const fetchMarketData = useCallback(async () => {\n    const tokensPrice = await Promise.all(\n      poolData.mints.map(async (mint) => (await getPrice(mint)) || 0),\n    )\n    setTokenPrice(tokensPrice)\n  }, [getPrice, poolData.mints])\n\n  useEffect(() => {\n    fetchMarketData()\n  }, [fetchMarketData])\n\n  const onAddLiquidity = async () => {\n    try {\n      setLoadingAdd(true)\n      const txs: web3.Transaction[] = []\n      for (const idx in poolData.mints) {\n        const mintAddress = poolData.mints[idx]\n        if (!poolData.reserves[idx].isZero()) continue\n        const amount = await decimalizeMintAmount(amounts[idx], mintAddress)\n        const wrapSolTx = await createWrapSolTxIfNeed(\n          mintAddress.toBase58(),\n          amounts[idx],\n        )\n        if (wrapSolTx) txs.push(wrapSolTx)\n\n        const { transaction } = await window.balansol.initializeJoin({\n          poolAddress,\n          mint: mintAddress,\n          amountIn: amount,\n          sendAndConfirm: false,\n        })\n        txs.push(transaction)\n      }\n\n      const anchorProvider = getAnchorProvider()!\n      const txIds = await anchorProvider.sendAll(\n        txs.map((tx) => {\n          return { tx, signers: [] }\n        }),\n      )\n      notifySuccess('Fund pool', txIds[txIds.length])\n      setCurrentStep(PoolCreatingStep.confirmCreatePool)\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoadingAdd(false)\n    }\n  }\n\n  const onClosePool = async () => {\n    try {\n      setLoadingClose(true)\n      const { txId } = await window.balansol.closePool(poolAddress)\n      notifySuccess('Close pool', txId)\n      onClose()\n      dispatch(removePool({ address: poolAddress }))\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoadingClose(false)\n    }\n  }\n\n  const totalValue = useMemo(() => {\n    let total = 0\n    amounts.forEach((amount, idx) => {\n      if (!poolData.reserves[idx].isZero()) return\n      total += Number(amount) * (tokenPrice[idx] || 0)\n    })\n    return total\n  }, [amounts, poolData.reserves, tokenPrice])\n\n  const checkAmountIns = useCallback(async () => {\n    const { mints } = poolData\n    for (let i in amounts) {\n      const { balance } = await getMintBalance(mints[i].toBase58(), true)\n      if (Number(amounts[i]) > balance || Number(amounts[i]) <= 0)\n        return setDisabledSupply(true)\n    }\n    return setDisabledSupply(false)\n  }, [amounts, getMintBalance, poolData])\n\n  useEffect(() => {\n    checkAmountIns()\n  }, [checkAmountIns])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          {poolData.mints.map((mint, idx) => {\n            const mintValue = Number(amounts[idx]) * (tokenPrice[idx] || 0)\n            return (\n              <Col span={24} key={mint.toBase58()}>\n                <Row key={idx}>\n                  <Col flex={1}>\n                    <Space>\n                      <Typography.Text type=\"secondary\">\n                        <MintSymbol mintAddress={mint.toBase58()} />\n                      </Typography.Text>\n                      <Typography.Text type=\"secondary\">\n                        (<MintPrice mintAddress={mint} />)\n                      </Typography.Text>\n                    </Space>\n                  </Col>\n                  <Col>\n                    <Typography.Text>\n                      {util.numeric(mintValue).format('$0,0.[0000]')}\n                    </Typography.Text>\n                  </Col>\n                </Row>\n              </Col>\n            )\n          })}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row align=\"middle\">\n          <Col flex={1}>\n            <Typography.Text type=\"secondary\">Total value</Typography.Text>\n          </Col>\n          <Col>\n            <Typography.Title level={3}>\n              ${util.numeric(totalValue).format('0,0.[0000]')}\n            </Typography.Title>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={12}>\n        <Button\n          type=\"ghost\"\n          disabled={loadingAdd}\n          loading={loadingClose}\n          onClick={onClosePool}\n          block\n        >\n          Delete pool\n        </Button>\n      </Col>\n      <Col span={12}>\n        <Button\n          type=\"primary\"\n          onClick={onAddLiquidity}\n          disabled={disabledSupply || loadingClose}\n          loading={loadingAdd}\n          block\n        >\n          Supply\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default LiquidityInfo\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useGetMintDecimals, util } from '@sentre/senhub'\nimport { MintSymbol, useGetMintPrice } from '@sen-use/app'\n\nimport { Button, Col, Row, Tooltip, Typography } from 'antd'\nimport LiquidityInfo from './liquidityInfo'\nimport MintInput from 'components/mintInput'\n\nimport { PoolCreatingStep } from 'constant'\nimport { AppState } from 'model'\nimport { useOracles } from 'hooks/useOracles'\nimport { calcNormalizedWeight } from 'helper/oracles'\n\nexport type AddLiquidityProps = {\n  setCurrentStep: (step: PoolCreatingStep) => void\n  onClose?: () => void\n  poolAddress: string\n}\n\nconst AddLiquidity = ({\n  setCurrentStep,\n  poolAddress,\n  onClose = () => {},\n}: AddLiquidityProps) => {\n  const [inputAmounts, setInputAmounts] = useState<string[]>([])\n  const [suggestedAmounts, setSuggestAmounts] = useState<string[]>([])\n  const [baseTokenIndex, setBaseTokenIndex] = useState(0)\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const { undecimalizeMintAmount } = useOracles()\n  const getPrice = useGetMintPrice()\n  const getDecimals = useGetMintDecimals()\n\n  const isVisibleSuggestion = (idx: number) =>\n    baseTokenIndex !== idx &&\n    Number(inputAmounts[baseTokenIndex]) > 0 &&\n    Number(suggestedAmounts[idx]) > 0 &&\n    Number(suggestedAmounts[idx]) !== Number(inputAmounts[idx])\n\n  const initInputAmountFromPoolData = useCallback(async () => {\n    if (!poolData || inputAmounts.length !== 0) return\n    const initInputAmounts = await Promise.all(\n      poolData.mints.map((mint, idx) => {\n        if (Number(inputAmounts[idx])) return inputAmounts[idx]\n        return undecimalizeMintAmount(poolData.reserves[idx], mint)\n      }),\n    )\n    setInputAmounts(initInputAmounts)\n  }, [inputAmounts, poolData, undecimalizeMintAmount])\n\n  useEffect(() => {\n    initInputAmountFromPoolData()\n  }, [initInputAmountFromPoolData])\n\n  const onApplySuggestion = async (index: number) => {\n    const newAmounts = [...inputAmounts]\n    newAmounts[index] = suggestedAmounts[index]\n    setInputAmounts(newAmounts)\n  }\n\n  const onUpdateAmount = async (amount: string, baseIdx: number) => {\n    const newAmounts = [...inputAmounts]\n    newAmounts[baseIdx] = amount\n    setBaseTokenIndex(baseIdx)\n    setInputAmounts(newAmounts)\n    // handle suggestion for other tokens\n    const { mints, weights } = poolData\n    const basePrice = await getPrice(mints[baseIdx])\n\n    if (!basePrice) return null\n    const baseNormalizedWeight = calcNormalizedWeight(weights, weights[baseIdx])\n\n    const newSuggestAmounts = await Promise.all(\n      mints.map(async (mint, index) => {\n        if (baseIdx === index) return ''\n        const price = await getPrice(mint)\n        if (!price) return ''\n\n        const appliedNormalizedWeight = calcNormalizedWeight(\n          weights,\n          weights[index],\n        )\n        const decimals = await getDecimals({ mintAddress: mint.toBase58() })\n        const suggestedAmount = (\n          ((basePrice * Number(amount)) / baseNormalizedWeight) *\n          (appliedNormalizedWeight / price)\n        ).toFixed(decimals)\n\n        return suggestedAmount\n      }),\n    )\n    setSuggestAmounts(newSuggestAmounts)\n  }\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row justify=\"center\" gutter={[8, 8]}>\n          {poolData.mints.map((mint, idx) => {\n            const normalizedWeight = calcNormalizedWeight(\n              poolData.weights,\n              poolData.weights[idx],\n            )\n            return (\n              <Col span={24} key={`${mint.toBase58() + idx}`}>\n                <MintInput\n                  amount={inputAmounts[idx]}\n                  selectedMint={mint.toBase58()}\n                  onChangeAmount={\n                    !poolData.reserves[idx].toNumber()\n                      ? (value: string) => onUpdateAmount(value, idx)\n                      : undefined\n                  }\n                  mintLabel={\n                    <Fragment>\n                      <Typography.Text>\n                        <MintSymbol mintAddress={mint.toBase58() || ''} />\n                      </Typography.Text>\n                      <Typography.Text>\n                        {util.numeric(normalizedWeight).format('0,0.[0000]%')}\n                      </Typography.Text>\n                    </Fragment>\n                  }\n                  placeholder={suggestedAmounts[idx]}\n                  force\n                  ratioButton={\n                    isVisibleSuggestion(idx) && (\n                      <Tooltip title={suggestedAmounts[idx]}>\n                        <Button\n                          type=\"text\"\n                          onClick={() => onApplySuggestion(idx)}\n                          style={{ marginRight: -15 }}\n                        >\n                          Apply suggestion\n                        </Button>\n                      </Tooltip>\n                    )\n                  }\n                />\n              </Col>\n            )\n          })}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <LiquidityInfo\n          onClose={onClose}\n          amounts={inputAmounts}\n          poolAddress={poolAddress}\n          setCurrentStep={setCurrentStep}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default AddLiquidity\n","import { util } from '@sentre/senhub'\n\nimport { Space, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from '@sen-use/app'\n\nimport { MintSetup } from '../index'\nimport { PoolInfo } from './index'\n\nexport const COLUMNS_CONFIG = [\n  {\n    title: 'TOKEN',\n    dataIndex: 'token',\n    render: (token: MintSetup) => {\n      return (\n        <Typography.Text>\n          <Space size={8}>\n            <MintAvatar mintAddress={token.addressToken} />\n            <MintSymbol mintAddress={token.addressToken} />\n          </Space>\n        </Typography.Text>\n      )\n    },\n  },\n  {\n    title: 'WEIGHT',\n    dataIndex: 'token',\n    render: (token: MintSetup) => {\n      return (\n        <Typography.Text style={{ fontWeight: 700 }}>\n          {Number(token.weight)}\n        </Typography.Text>\n      )\n    },\n  },\n  {\n    title: 'AMOUNT',\n    dataIndex: 'amount',\n    render: (amount: number, poolData: PoolInfo) => {\n      return (\n        <Typography.Text>\n          {util\n            .numeric(amount)\n            .format(`0,0.[${'0'.repeat(poolData.token.decimal || 9)}]a`)}\n        </Typography.Text>\n      )\n    },\n  },\n  {\n    title: 'VALUE',\n    dataIndex: 'value',\n    render: (value: number, poolData: PoolInfo) => {\n      return (\n        <Typography.Text>\n          {util.numeric(value).format(`$0,0.[0000]`)}\n        </Typography.Text>\n      )\n    },\n  },\n]\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { util, tokenProvider } from '@sentre/senhub'\nimport { useGetMintPrice } from '@sen-use/app'\n\nimport { Button, Card, Col, Row, Table, Typography } from 'antd'\nimport { MintSetup } from '../index'\nimport { COLUMNS_CONFIG } from './columns'\n\nimport { AppState } from 'model'\nimport { useOracles } from 'hooks/useOracles'\nimport { getMintInfo } from 'helper/oracles'\nimport './index.less'\n\nexport type PoolInfo = {\n  token: MintSetup\n  amount: number\n  value: number\n}\n\nexport type ConfirmPoolInfoProps = {\n  onConfirm: () => void\n  poolAddress: string\n}\n\nconst ConfirmPoolInfo = ({ onConfirm, poolAddress }: ConfirmPoolInfoProps) => {\n  const poolData = useSelector((state: AppState) => state.pools[poolAddress])\n  const [poolInfo, setPoolInfo] = useState<PoolInfo[]>([])\n  const [poolTotalValue, setPoolTotalValue] = useState(0)\n\n  const { undecimalizeMintAmount } = useOracles()\n  const getPrice = useGetMintPrice()\n\n  const getPoolInfo = useCallback(async () => {\n    if (!poolData) {\n      setPoolInfo([])\n      return setPoolTotalValue(0)\n    }\n    const { mints, reserves } = poolData\n    let totalValue = 0\n    const newPoolInfo: PoolInfo[] = await Promise.all(\n      mints.map(async (mint, idx) => {\n        const mintAddress = mint.toBase58()\n        const mintInfo = getMintInfo(poolData, mint)\n        const tokenInfo = await tokenProvider.findByAddress(mintAddress)\n        let mintAmount = await undecimalizeMintAmount(\n          reserves[idx],\n          mintAddress,\n        )\n        const price = await getPrice(mintAddress)\n        let mintTotalValue = Number(mintAmount) * (price || 0)\n        totalValue += mintTotalValue\n        return {\n          token: {\n            addressToken: mintAddress,\n            weight: util.numeric(mintInfo.normalizedWeight).format('0,0.[00]'),\n            isLocked: true,\n            decimal: tokenInfo?.decimals,\n          },\n          amount: Number(mintAmount),\n          value: mintTotalValue,\n        }\n      }),\n    )\n    setPoolTotalValue(totalValue)\n    setPoolInfo(newPoolInfo)\n  }, [getPrice, poolData, undecimalizeMintAmount])\n\n  useEffect(() => {\n    getPoolInfo()\n  }, [getPoolInfo])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Table\n          columns={COLUMNS_CONFIG}\n          dataSource={poolInfo}\n          rowClassName={(_, index) => (index % 2 ? 'odd-row' : 'even-row')}\n          pagination={false}\n          rowKey={(record) => record.token.addressToken}\n          scroll={{ x: true }}\n        />\n      </Col>\n      <Col span={24}>\n        <Card\n          style={{\n            borderRadius: '8px',\n          }}\n          bodyStyle={{ padding: 16 }}\n          bordered={false}\n          className=\"card-total-value\"\n        >\n          <Row align=\"middle\">\n            <Col flex={1}>\n              <Typography.Text type=\"secondary\">Total value</Typography.Text>\n            </Col>\n            <Col>\n              <Typography.Title level={3}>\n                ${util.numeric(poolTotalValue).format('0,0.[00]')}\n              </Typography.Title>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          onClick={onConfirm}\n          style={{ borderRadius: 40 }}\n          block\n          size=\"large\"\n        >\n          Confirm\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConfirmPoolInfo\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useWalletAddress } from '@sentre/senhub'\n\nimport { Col, Row, Steps, Typography } from 'antd'\nimport ListTokenSetup from './listTokenSetup'\nimport AddLiquidity from './addLiquidity'\nimport ConfirmPoolInfo from './confirmPoolInfo'\n\nimport { AppState } from 'model'\nimport { PoolCreatingStep } from 'constant'\nimport { PoolState } from '@senswap/balancer'\n\nconst { Step } = Steps\n\nexport type MintSetup = {\n  addressToken: string\n  weight: string\n  isLocked: boolean\n  decimal?: number\n}\n\nexport type ModalNewPoolProps = { onClose: () => void }\n\nconst ModalNewPool = ({ onClose = () => {} }: ModalNewPoolProps) => {\n  const pools = useSelector((state: AppState) => state.pools)\n  const [currentStep, setCurrentStep] = useState(PoolCreatingStep.setupToken)\n  const [poolAddress, setPoolAddress] = useState('')\n  const walletAddress = useWalletAddress()\n\n  const recoverCreatePoolProcess = useCallback(async () => {\n    if (poolAddress) return\n    for (const poolAddress in pools) {\n      const poolData = pools[poolAddress]\n      if (poolData.authority.toBase58() !== walletAddress) continue\n      if (!(poolData.state as PoolState)['uninitialized']) continue\n      setCurrentStep(PoolCreatingStep.addLiquidity)\n      return setPoolAddress(poolAddress)\n    }\n    return setPoolAddress('')\n  }, [poolAddress, pools, walletAddress])\n\n  useEffect(() => {\n    recoverCreatePoolProcess()\n  }, [recoverCreatePoolProcess])\n\n  const creatingPoolProcess = useMemo(() => {\n    switch (currentStep) {\n      case PoolCreatingStep.setupToken:\n        return <ListTokenSetup setCurrentStep={setCurrentStep} />\n      case PoolCreatingStep.addLiquidity:\n        if (!pools[poolAddress]) return null\n        return (\n          <AddLiquidity\n            setCurrentStep={setCurrentStep}\n            poolAddress={poolAddress}\n            onClose={onClose}\n          />\n        )\n      case PoolCreatingStep.confirmCreatePool:\n        if (!pools[poolAddress]) return null\n        return <ConfirmPoolInfo onConfirm={onClose} poolAddress={poolAddress} />\n    }\n  }, [currentStep, onClose, poolAddress, pools])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Typography.Title level={4}>New Pool</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Steps size=\"small\" current={currentStep}>\n          <Step title=\"Select tokens & weights\" />\n          <Step title=\"Add liquidity\" />\n          <Step title=\"Confirm\" />\n        </Steps>\n      </Col>\n      <Col span={24}>{creatingPoolProcess}</Col>\n    </Row>\n  )\n}\n\nexport default ModalNewPool\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { PoolState } from '@senswap/balancer'\nimport { useWalletAddress } from '@sentre/senhub'\n\nimport { Button, Modal } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ModalNewPool from './modalNewPool'\nimport { AppState } from 'model'\n\nexport type TokenInfo = {\n  addressToken: string\n  weight: string\n  isLocked: boolean\n}\n\nconst NewPool = () => {\n  const pools = useSelector((state: AppState) => state.pools)\n  const [visible, setVisible] = useState(false)\n  const [isInProcess, setIsInProcess] = useState(false)\n  const walletAddress = useWalletAddress()\n\n  const checkUninitializedPool = useCallback(async () => {\n    for (const poolAddress in pools) {\n      const poolData = pools[poolAddress]\n      if (poolData.authority.toBase58() !== walletAddress) continue\n      if (!(poolData.state as PoolState)['uninitialized']) continue\n      return setIsInProcess(true)\n    }\n    return setIsInProcess(false)\n  }, [pools, walletAddress])\n\n  useEffect(() => {\n    checkUninitializedPool()\n  }, [checkUninitializedPool])\n\n  return (\n    <Fragment>\n      <Button\n        icon={<IonIcon name={!isInProcess ? 'add-outline' : 'sync-outline'} />}\n        onClick={() => setVisible(true)}\n        style={{ borderRadius: 40 }}\n        block\n        ghost\n      >\n        {!isInProcess ? 'New Pool' : 'Resume'}\n      </Button>\n      <Modal\n        open={visible}\n        onCancel={() => {\n          setVisible(false)\n        }}\n        closeIcon={<IonIcon name=\"close\" />}\n        footer={null}\n        destroyOnClose\n        centered\n        width={572}\n      >\n        <ModalNewPool onClose={() => setVisible(false)} />\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default NewPool\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { FilterPools } from 'constant'\n\n/**\n * Interface & Utility\n */\n\nexport type SearchState = {\n  searchInput: string\n  filterPool: FilterPools\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'searchPools'\nconst initialState: SearchState = {\n  searchInput: '',\n  filterPool: FilterPools.AllPools,\n}\n\n/**\n * Actions\n */\n\nexport const setFilterPool = createAsyncThunk(\n  `${NAME}/setSearchSelection`,\n  async ({ filterPool }: { filterPool: FilterPools }) => {\n    return {\n      filterPool: filterPool,\n    }\n  },\n)\n\nexport const setSearchInput = createAsyncThunk(\n  `${NAME}/setSearchInput`,\n  async ({ searchText }: { searchText: string }) => {\n    return {\n      searchInput: searchText,\n    }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setFilterPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setSearchInput.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Col, Input, Row, Select } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { FilterPools } from 'constant'\nimport { AppDispatch, AppState } from 'model'\nimport { setSearchInput, setFilterPool } from 'model/searchPools.controller'\n\nimport './index.less'\n\nconst Search = () => {\n  const { searchInput, filterPool } = useSelector(\n    (state: AppState) => state.searchPools,\n  )\n\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onSearch = (value: string) => {\n    dispatch(setSearchInput({ searchText: value }))\n  }\n\n  return (\n    <Row className=\"search-pools\" gutter={[12, 12]}>\n      <Col md={8} xs={10}>\n        <Select\n          value={filterPool}\n          onChange={(value: FilterPools) => {\n            dispatch(setFilterPool({ filterPool: value }))\n          }}\n          style={{ width: '100%', height: '32px' }}\n          className=\"category\"\n        >\n          <Select.Option value={FilterPools.AllPools}>All pools</Select.Option>\n          <Select.Option value={FilterPools.DepositedPools}>\n            Deposited pools\n          </Select.Option>\n          <Select.Option value={FilterPools.YourPools}>\n            Your pools\n          </Select.Option>\n        </Select>\n      </Col>\n      <Col flex={'1 0'}>\n        <Input\n          placeholder=\"Search\"\n          className=\"search\"\n          value={searchInput}\n          prefix={\n            searchInput ? (\n              <Button\n                type=\"text\"\n                style={{\n                  width: 'auto',\n                  height: 'auto',\n                  background: 'transparent',\n                  marginLeft: -7,\n                }}\n                onClick={() => onSearch('')}\n                icon={<IonIcon name=\"close-outline\" />}\n              />\n            ) : (\n              <IonIcon\n                style={{ fontSize: '24px', marginLeft: -5 }}\n                name=\"search-outline\"\n              />\n            )\n          }\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            onSearch(e.target.value)\n          }}\n          style={{\n            borderRadius: '24px',\n            height: '32px',\n          }}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Search\n","import { Infix, useInfix } from '@sentre/senhub'\nimport { Col, Row } from 'antd'\n\nimport ListPools from './listPools'\nimport New from './newPool'\nimport Search from './search'\n\nconst Pools = () => {\n  const infix = useInfix()\n\n  const isMobile = infix < Infix.md\n\n  return (\n    <Row gutter={[12, 12]} justify=\"center\" align=\"middle\">\n      <Col xs={24} md={20} lg={16} xl={12} xxl={8}>\n        <Row gutter={[12, 12]} justify=\"space-between\">\n          <Col flex=\"auto\">\n            <Search />\n          </Col>\n          <Col span={isMobile ? 24 : undefined}>\n            <New />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24} />\n      <Col xs={24} md={20} lg={16} xl={12} xxl={8}>\n        <ListPools />\n      </Col>\n      <Col span={24} />\n    </Row>\n  )\n}\nexport default Pools\n","import { IPFS } from '@sen-use/app'\n\nimport { ProjectInfoData } from 'constant'\n\nconst KEY =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDU4M0Q5MmIwMGJlNjZDNjg2NDUyY0JkNTZEMTlmOWZlMTRhNjhCYTQiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NTg4MDM1NjE3MTcsIm5hbWUiOiJCb29zdGVyRGV2In0.kaP_EXFB2q7Zo8_CWZfGI1n5R-AoZzfVTWpDdZ_REcM'\n\ntype MapTypes = {\n  launchpad: ProjectInfoData\n}\ntype Idl = ['launchpad']\nconst IDL: Idl = ['launchpad']\n\nexport const Ipfs = new IPFS<MapTypes, Idl>(KEY, IDL)\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'model'\nimport { Ipfs } from 'shared/ipfs'\nimport { ProjectInfoData } from 'constant'\n\nexport const useLaunchpadData = (address: string) => {\n  const launchpadData = useSelector(\n    (state: AppState) => state.launchpads[address],\n  )\n  const [metadata, setMetadata] = useState<ProjectInfoData>()\n\n  useEffect(() => {\n    ;(async () => {\n      const metadata = launchpadData.metadata\n      const projectInfo = await Ipfs.methods.launchpad.get(metadata)\n      return setMetadata(projectInfo)\n    })()\n  }, [address, launchpadData])\n\n  return { launchpadData, metadata }\n}\n","import {\n  CSSProperties,\n  Fragment,\n  memo,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\nimport moment from 'moment'\nimport { useTheme } from '@sentre/senhub'\n\nimport { Space, Tag, Typography } from 'antd'\n\ntype TimeTagProps = { children?: ReactNode; style?: CSSProperties }\nconst TimeTag = ({ children, style }: TimeTagProps) => {\n  const theme = useTheme()\n  return (\n    <Tag\n      style={{\n        background: theme === 'dark' ? '#394360' : '#FFFFFF',\n        border: 'none',\n        borderRadius: 4,\n        marginRight: 0,\n        ...style,\n      }}\n    >\n      {children}\n    </Tag>\n  )\n}\n\ntype TimeCountDownProps = { endTime: number }\nconst TimeCountDown = memo(({ endTime }: TimeCountDownProps) => {\n  const startTime = Math.floor(Date.now() / 1000)\n  const currentTime = Date.now() / 1000\n  const duration = moment.duration(endTime - startTime, 'seconds')\n\n  const [countDown, setCountDown] = useState({\n    days: Math.floor(duration.asDays()),\n    hours: duration.hours(),\n    minutes: duration.minutes(),\n    seconds: duration.seconds(),\n  })\n\n  const updateCountDown = useCallback(async () => {\n    if (!endTime || endTime < currentTime) return\n\n    const duration = moment.duration(endTime - startTime, 'seconds')\n    const days = Math.floor(duration.asDays())\n    const hours = duration.hours()\n    const minutes = duration.minutes()\n    const seconds = duration.seconds()\n    setCountDown({ days, hours, minutes, seconds })\n  }, [endTime, currentTime, startTime])\n\n  useEffect(() => {\n    const interval = setInterval(() => updateCountDown(), 1000)\n    return () => clearInterval(interval)\n  }, [updateCountDown])\n\n  if (!endTime) return <Typography.Text>Unlimited</Typography.Text>\n  if (endTime < currentTime)\n    return (\n      <TimeTag>\n        <Typography.Text>Expired</Typography.Text>\n      </TimeTag>\n    )\n\n  return (\n    <Space size={4}>\n      {!!countDown.days && (\n        <Fragment>\n          <TimeTag>\n            <Typography.Text>{countDown.days}d</Typography.Text>\n          </TimeTag>\n          :\n        </Fragment>\n      )}\n      <TimeTag>\n        <Typography.Text>{countDown.hours}h</Typography.Text>\n      </TimeTag>\n      :\n      <TimeTag>\n        <Typography.Text>{countDown.minutes}m</Typography.Text>\n      </TimeTag>\n      {!countDown.days && (\n        <Fragment>\n          :\n          <TimeTag>\n            <Typography.Text>{countDown.seconds}s</Typography.Text>\n          </TimeTag>\n        </Fragment>\n      )}\n    </Space>\n  )\n})\nexport default TimeCountDown\n","import { useTheme } from '@sentre/senhub'\n\nimport { Col, Progress, Row, Space, Typography } from 'antd'\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\nimport TimeCountDown from '../../../components/timeCountDown'\nimport { LaunchpadCardProps } from './launchpadCard'\n\nconst EndIn = ({ launchpadAddress }: LaunchpadCardProps) => {\n  const theme = useTheme()\n  const { launchpadData } = useLaunchpadData(launchpadAddress)\n  const { startTime, endTime } = launchpadData\n  const totalTime = endTime.toNumber() - startTime.toNumber()\n  const recent = Date.now() / 1000 - startTime.toNumber()\n  const percent = recent / totalTime\n\n  const isStarted = Date.now() / 1000 > startTime.toNumber()\n  const time = !isStarted ? startTime : endTime\n\n  return (\n    <Row align=\"middle\">\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">\n          {isStarted ? ' End in' : 'Start in'}\n        </Typography.Text>\n      </Col>\n      <Col>\n        <Space>\n          <TimeCountDown endTime={time.toNumber()} />\n          {isStarted && (\n            <Progress\n              type=\"circle\"\n              percent={percent * 100}\n              showInfo={false}\n              className=\"end-time-progress\"\n              strokeWidth={10}\n              strokeColor={theme === 'dark' ? '#63E0B3' : '#081438'}\n            />\n          )}\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default EndIn\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useWalletAddress } from '@sentre/senhub'\n\nimport { AppState } from 'model'\n\nexport const useCheques = (launchpadAddress: string, owner?: boolean) => {\n  const cheques = useSelector((state: AppState) => state.cheques)\n  const walletAddress = useWalletAddress()\n\n  const filteredCheques = useMemo(\n    () =>\n      Object.keys(cheques).filter((address) => {\n        const { authority, launchpad } = cheques[address]\n        if (!owner) return launchpad.toBase58() === launchpadAddress\n        return (\n          authority.toBase58() === walletAddress &&\n          launchpad.toBase58() === launchpadAddress\n        )\n      }),\n    [cheques, launchpadAddress, owner, walletAddress],\n  )\n\n  return filteredCheques\n}\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BN } from '@project-serum/anchor'\n\nimport { AppState } from 'model'\nimport { useCheques } from './useCheques'\n\nexport const useParticipants = (launchpadAddress: string, owner?: boolean) => {\n  const cheques = useSelector((state: AppState) => state.cheques)\n  const filteredCheques = useCheques(launchpadAddress, owner)\n\n  const participants = useMemo(() => {\n    let totalUsers = 0\n    let totalBid = new BN(0)\n    let totalAsk = new BN(0)\n    const boughtAddress: string[] = []\n    for (const address of filteredCheques) {\n      const { authority, bidAmount, askAmount } = cheques[address]\n      totalBid = totalBid.add(bidAmount)\n      totalAsk = totalAsk.add(askAmount)\n      if (boughtAddress.includes(authority.toBase58())) continue\n      boughtAddress.push(authority.toBase58())\n      totalUsers += 1\n    }\n    return {\n      totalUsers,\n      totalBid,\n      totalAsk,\n    }\n  }, [cheques, filteredCheques])\n\n  return participants\n}\n","import { useMemo } from 'react'\nimport { useMintDecimals, util } from '@sentre/senhub'\nimport { MintAmount, MintSymbol } from '@sen-use/app'\n\nimport { Col, Row, Space, Typography } from 'antd'\n\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\nimport { useParticipants } from 'hooks/launchpad/useParticipants'\nimport { utilsBN } from 'helper/utilsBN'\n\ntype SoldProps = {\n  direction?: string\n  launchpadAddress: string\n}\n\nconst Sold = ({ direction = 'row', launchpadAddress }: SoldProps) => {\n  const { totalAsk } = useParticipants(launchpadAddress)\n  const { launchpadData } = useLaunchpadData(launchpadAddress)\n  const decimals =\n    useMintDecimals({ mintAddress: launchpadData?.mint.toBase58() }) || 0\n\n  const soldRatio = useMemo(() => {\n    const totalAskNum = Number(utilsBN.undecimalize(totalAsk, decimals || 0))\n    const reserveAskNum = Number(\n      utilsBN.undecimalize(launchpadData?.startReserves[0], decimals),\n    )\n    return totalAskNum / reserveAskNum\n  }, [decimals, launchpadData?.startReserves, totalAsk])\n\n  const isStarted = Date.now() / 1000 > launchpadData.startTime.toNumber()\n  return (\n    <Row gutter={[12, 12]} align=\"middle\" style={{ flexFlow: direction }}>\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">\n          {isStarted ? 'Sold' : 'Total raise'}\n        </Typography.Text>\n      </Col>\n      <Col>\n        <Space>\n          <Typography.Title level={5} type=\"success\">\n            {isStarted && (\n              <>\n                <MintAmount\n                  mintAddress={launchpadData.mint}\n                  amount={totalAsk}\n                  formatter=\"0,0.[000]\"\n                />\n                /\n              </>\n            )}\n            <MintAmount\n              mintAddress={launchpadData.mint}\n              amount={launchpadData?.startReserves[0]}\n              formatter=\"0,0.[000]\"\n            />{' '}\n            <MintSymbol mintAddress={launchpadData.mint} />\n          </Typography.Title>\n          {isStarted && (\n            <Typography.Title level={5}>\n              ({util.numeric(soldRatio).format('%0,0.[00]')})\n            </Typography.Title>\n          )}\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Sold\n","import { useMemo } from 'react'\nimport { useMintDecimals, useTheme, util } from '@sentre/senhub'\nimport { utilsBN } from '@sen-use/web3'\n\nimport { Col, Progress, Row, Space, Typography } from 'antd'\nimport { MintAmount, MintSymbol } from '@sen-use/app'\n\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\nimport { useParticipants } from 'hooks/launchpad/useParticipants'\n\ntype FundraisingProps = {\n  launchpadAddress: string\n  isDetail?: boolean\n  direction?: string\n}\n\nconst Fundraising = ({\n  launchpadAddress,\n  isDetail = false,\n  direction = 'row',\n}: FundraisingProps) => {\n  const { launchpadData } = useLaunchpadData(launchpadAddress)\n  const { totalBid, totalUsers } = useParticipants(launchpadAddress)\n  const theme = useTheme()\n  const stableDecimal =\n    useMintDecimals({ mintAddress: launchpadData.stableMint.toBase58() }) || 0\n\n  const fundraisingRatio = useMemo(() => {\n    const totalBidNum = Number(\n      utilsBN.undecimalize(totalBid, stableDecimal || 0),\n    )\n    const reserveBidNum = Number(\n      utilsBN.undecimalize(launchpadData?.startReserves[1], stableDecimal),\n    )\n    return totalBidNum / reserveBidNum\n  }, [launchpadData?.startReserves, stableDecimal, totalBid])\n\n  const isStarted = Date.now() / 1000 > launchpadData.startTime.toNumber()\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Row gutter={[12, 12]} style={{ flexFlow: direction }}>\n          <Col flex=\"auto\">\n            <Typography.Text type=\"secondary\">Fundraising goal</Typography.Text>\n          </Col>\n          <Col>\n            <Space>\n              <Typography.Title level={5} type=\"success\">\n                {isStarted && (\n                  <>\n                    <MintAmount\n                      mintAddress={launchpadData.stableMint}\n                      amount={totalBid}\n                      formatter=\"0,0.[000]\"\n                    />\n                    /\n                  </>\n                )}\n                <MintAmount\n                  mintAddress={launchpadData.stableMint}\n                  amount={launchpadData?.startReserves[1]}\n                  formatter=\"0,0.[000]\"\n                />{' '}\n                <MintSymbol\n                  mintAddress={launchpadData?.stableMint.toBase58()}\n                />\n              </Typography.Title>\n              {isStarted && (\n                <Typography.Title level={5}>\n                  ({util.numeric(fundraisingRatio).format('%0,0.[00]')})\n                </Typography.Title>\n              )}\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n      {!isDetail && isStarted && (\n        <Col span={24}>\n          <Row gutter={[8, 8]}>\n            <Col span={24}>\n              <Progress\n                strokeColor={theme === 'dark' ? '#63E0B3' : '#081438'}\n                percent={fundraisingRatio * 100}\n                showInfo={false}\n                className={\n                  fundraisingRatio >= 1\n                    ? 'sold-progress active'\n                    : 'sold-progress'\n                }\n              />\n            </Col>\n            <Col span={24}>\n              <Space>\n                <Typography.Text type=\"secondary\">\n                  Participants:\n                </Typography.Text>\n                <Typography.Text>{totalUsers}</Typography.Text>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      )}\n    </Row>\n  )\n}\n\nexport default Fundraising\n","import { CSSProperties, useCallback, useEffect } from 'react'\n\nimport { Tag } from 'antd'\n\nimport { CATEGORY } from 'constant'\n\ntype CategoryTagProps = {\n  category: keyof typeof CATEGORY\n  style?: CSSProperties\n}\n\nconst CategoryTag = ({ category, style }: CategoryTagProps) => {\n  const categoryColor = useCallback(\n    (opacity?: string) => {\n      const color = CATEGORY[category]\n      if (opacity) return `rgba(${color[0]},${color[1]},${color[2]},${opacity})`\n      return `rgba(${color[0]},${color[1]},${color[2]},1)`\n    },\n    [category],\n  )\n  useEffect(() => {\n    categoryColor()\n  }, [categoryColor])\n  return (\n    <Tag\n      style={{ color: categoryColor(), ...style, borderRadius: 8 }}\n      color={categoryColor('0.1')}\n    >\n      {category}\n    </Tag>\n  )\n}\n\nexport default CategoryTag\n","import { MouseEvent } from 'react'\n\nimport IonIcon from '@sentre/antd-ionicon'\nimport { Avatar, Button, Space, Spin, Typography } from 'antd'\nimport CategoryTag from 'components/categoryTag'\n\nimport { LaunchpadCardProps } from './launchpadCard'\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\nimport { getDataWebsite, validURL } from 'helper'\n\nconst LaunchpadProfile = ({ launchpadAddress }: LaunchpadCardProps) => {\n  const { metadata } = useLaunchpadData(launchpadAddress)\n  const onRedirect = (e: MouseEvent<HTMLElement>, url?: string) => {\n    e.stopPropagation()\n    if (!url || !validURL(url)) return\n    return window.open(url, '_blank')\n  }\n\n  return (\n    <Spin spinning={!metadata}>\n      <Space size={24} align=\"center\">\n        <Avatar shape=\"square\" size={69} src={metadata?.coverPhoto} />\n        <Space size={0} direction=\"vertical\">\n          <Typography.Title level={4}>{metadata?.projectName}</Typography.Title>\n          <Space size={4} wrap>\n            {metadata?.category.map((tag: any) => (\n              <CategoryTag key={tag} category={tag} style={{ margin: 0 }} />\n            ))}\n          </Space>\n          {!!metadata?.socials.length && (\n            <Space size={2}>\n              {metadata?.socials.map((social, index) => {\n                const data = getDataWebsite(social)\n                return (\n                  <Button\n                    key={index}\n                    type=\"text\"\n                    icon={<IonIcon name={data?.iconName} />}\n                    onClick={(e) => onRedirect(e, social)}\n                  />\n                )\n              })}\n            </Space>\n          )}\n        </Space>\n      </Space>\n    </Spin>\n  )\n}\n\nexport default LaunchpadProfile\n","import { useSelector } from 'react-redux'\nimport { LaunchpadData } from '@sentre/launchpad'\nimport { AppState } from 'model'\n\nexport const useLaunchpad = (address: string): LaunchpadData => {\n  const launchpadData = useSelector(\n    (state: AppState) => state.launchpads[address],\n  )\n  return launchpadData\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { useLaunchpad } from './useLaunchpad'\n\nconst MINT_IDX = 0\nconst BASE_MINT_IDX = 1\n\nfunction calc_new_weight(\n  start_weight: number,\n  end_weight: number,\n  ratio_with_precision: number,\n) {\n  let amount =\n    start_weight > end_weight\n      ? start_weight - end_weight\n      : end_weight - start_weight\n\n  let diff = amount * ratio_with_precision\n  let new_weight =\n    start_weight > end_weight ? start_weight - diff : start_weight + diff\n  return new_weight\n}\n\nexport const useLaunchpadWeights = (launchpad: string, timeout = 10000) => {\n  const launchpadData = useLaunchpad(launchpad)!\n  const [currentTime, setCurrentTime] = useState(new Date().getTime() / 1000)\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setCurrentTime(new Date().getTime() / 1000)\n    }, timeout)\n    return () => clearInterval(interval)\n  }, [timeout])\n\n  // src/schema/launchpad.rs\n  const currentWeights = useMemo(() => {\n    let start_time = launchpadData.startTime.toNumber()\n    let end_time = launchpadData.endTime.toNumber()\n    let start_weight_mint = launchpadData.startWeights[MINT_IDX].toNumber()\n    let start_weight_base_mint =\n      launchpadData.startWeights[BASE_MINT_IDX].toNumber()\n    let end_weight_mint = launchpadData.endWeights[MINT_IDX].toNumber()\n    let end_weight_base_mint =\n      launchpadData.endWeights[BASE_MINT_IDX].toNumber()\n    let ratio = (currentTime - start_time) / (end_time - start_time)\n    return [\n      calc_new_weight(start_weight_mint, end_weight_mint, ratio),\n      calc_new_weight(start_weight_base_mint, end_weight_base_mint, ratio),\n    ]\n  }, [\n    currentTime,\n    launchpadData.endTime,\n    launchpadData.endWeights,\n    launchpadData.startTime,\n    launchpadData.startWeights,\n  ])\n\n  return currentWeights\n}\n","import { useCallback } from 'react'\nimport { BN } from '@project-serum/anchor'\nimport { utilsBN } from '@sen-use/web3'\n\nexport const useGetPriceInPool = () => {\n  const getTokenPrice = useCallback(\n    (weightA: BN, balanceA: BN, priceB: number, balanceB: BN, weightB: BN) => {\n      const totalWeights = utilsBN.toNumber(weightA) + utilsBN.toNumber(weightB)\n      const numWeightA = utilsBN.toNumber(weightA) / totalWeights\n      const numWeightB = utilsBN.toNumber(weightB) / totalWeights\n      const numBalanceA = utilsBN.toNumber(balanceA)\n      const numBalanceB = utilsBN.toNumber(balanceB)\n      const priceA =\n        (numWeightA * numBalanceB * priceB) / (numBalanceA * numWeightB)\n      return priceA\n    },\n    [],\n  )\n\n  return getTokenPrice\n}\n","import { useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { BN } from '@project-serum/anchor'\n\nimport { AppState } from 'model'\n\nexport const useGetBalanceAtTime = () => {\n  const cheques = useSelector((state: AppState) => state.cheques)\n  const launchpads = useSelector((state: AppState) => state.launchpads)\n\n  const getBalanceAtTime = useCallback(\n    (launchpadAddr: string, time: number) => {\n      const { startReserves } = launchpads[launchpadAddr]\n      let totalSoldBid = new BN(0)\n      let totalSoldAsk = new BN(0)\n\n      for (const address in cheques) {\n        const { createAt, askAmount, bidAmount, launchpad } = cheques[address]\n        if (launchpad.toBase58() !== launchpadAddr) continue\n        if (createAt.toNumber() * 1000 > time) continue\n        totalSoldAsk = totalSoldAsk.add(askAmount)\n        totalSoldBid = totalSoldAsk.add(bidAmount)\n      }\n\n      return [\n        startReserves[0].sub(totalSoldAsk),\n        startReserves[1].add(totalSoldBid),\n      ]\n    },\n    [cheques, launchpads],\n  )\n\n  return getBalanceAtTime\n}\n","import { useCallback } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'model'\n\nconst MINT_IDX = 0\nconst BASE_MINT_IDX = 1\n\nfunction calc_new_weight(\n  start_weight: number,\n  end_weight: number,\n  ratio_with_precision: number,\n) {\n  let amount =\n    start_weight > end_weight\n      ? start_weight - end_weight\n      : end_weight - start_weight\n\n  let diff = amount * ratio_with_precision\n  let new_weight =\n    start_weight > end_weight ? start_weight - diff : start_weight + diff\n  return new_weight\n}\n\nexport const useGetLaunchpadWeight = () => {\n  const launchpads = useSelector((state: AppState) => state.launchpads)\n\n  const getLaunchpadWeights = useCallback(\n    (\n      currentTime: number,\n      launchpadAddr = '',\n      startWeights = [0, 0],\n      endWeights = [0, 0],\n      startTime = 0,\n      endTime = 0,\n    ) => {\n      const launchpadData = launchpads[launchpadAddr]\n      let start_time = launchpadAddr\n        ? launchpadData.startTime.toNumber()\n        : startTime\n      let end_time = launchpadAddr ? launchpadData.endTime.toNumber() : endTime\n\n      let start_weight_mint = launchpadAddr\n        ? launchpadData.startWeights[MINT_IDX].toNumber()\n        : startWeights[MINT_IDX].toNumber()\n\n      let start_weight_base_mint = launchpadAddr\n        ? launchpadData.startWeights[BASE_MINT_IDX].toNumber()\n        : startWeights[BASE_MINT_IDX].toNumber()\n\n      let end_weight_mint = launchpadAddr\n        ? launchpadData.endWeights[MINT_IDX].toNumber()\n        : endWeights[MINT_IDX].toNumber()\n\n      let end_weight_base_mint = launchpadAddr\n        ? launchpadData.endWeights[BASE_MINT_IDX].toNumber()\n        : endWeights[BASE_MINT_IDX].toNumber()\n\n      let ratio = (currentTime / 1000 - start_time) / (end_time - start_time)\n      return [\n        calc_new_weight(start_weight_mint, end_weight_mint, ratio),\n        calc_new_weight(start_weight_base_mint, end_weight_base_mint, ratio),\n      ]\n    },\n    [launchpads],\n  )\n\n  return getLaunchpadWeights\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDebounce } from 'react-use'\nimport { tokenProvider } from '@sentre/senhub'\nimport { utilsBN } from '@sen-use/web3'\n\nimport { AppState } from 'model'\nimport { useLaunchpadData } from './useLaunchpadData'\nimport { useLaunchpadWeights } from './useLaunchpadWeights'\nimport { useGetPriceInPool } from './useGetTokenInPoolPrice'\nimport { useGetBalanceAtTime } from './useGetBalanceAtTime'\nimport { useGetLaunchpadWeight } from './useGetLaunchpadWeight'\n\nexport const useTokenPrice = (launchpadAddress: string) => {\n  const [mintPrice, setMintPrice] = useState(0)\n  const { launchpadData } = useLaunchpadData(launchpadAddress)\n  const pools = useSelector((state: AppState) => state.pools)\n  const weights = useLaunchpadWeights(launchpadAddress, 5000)\n  const getTokenPrice = useGetPriceInPool()\n  const getBalanceAtTime = useGetBalanceAtTime()\n  const getLaunchpadWeights = useGetLaunchpadWeight()\n\n  const getMintPrice = useCallback(async () => {\n    const { pool, endTime } = launchpadData\n    const { reserves } = pools[pool.toBase58()]\n    const stbPrice =\n      (await tokenProvider.getPrice(launchpadData.stableMint)) || 0\n    let balances = reserves\n    let currentWeights = weights\n    if (balances[0].isZero() || balances[1].isZero()) {\n      currentWeights = getLaunchpadWeights(\n        endTime.toNumber() * 1000,\n        launchpadAddress,\n      )\n      balances = getBalanceAtTime(launchpadAddress, endTime.toNumber() * 1000)\n    }\n\n    const price = getTokenPrice(\n      utilsBN.decimalize(currentWeights[0], 9),\n      balances[0],\n      stbPrice,\n      balances[1],\n      utilsBN.decimalize(currentWeights[1], 9),\n    )\n\n    return setMintPrice(price)\n  }, [\n    launchpadData,\n    pools,\n    weights,\n    getTokenPrice,\n    getLaunchpadWeights,\n    launchpadAddress,\n    getBalanceAtTime,\n  ])\n\n  useDebounce(getMintPrice, 500, [getMintPrice])\n\n  useEffect(() => {\n    getMintPrice()\n  }, [getMintPrice])\n\n  return mintPrice\n}\n","import { util } from '@sentre/senhub'\n\nimport { Col, Row, Typography } from 'antd'\n\nimport { useTokenPrice } from 'hooks/launchpad/useTokenPrice'\n\ntype PriceProps = {\n  direction?: string\n  launchpadAddress: string\n}\n\nconst Price = ({ direction = 'row', launchpadAddress }: PriceProps) => {\n  const mintPrice = useTokenPrice(launchpadAddress)\n  return (\n    <Row gutter={[12, 12]} style={{ flexFlow: direction }}>\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">Price</Typography.Text>\n      </Col>\n      <Col>\n        <Typography.Text>\n          ${util.numeric(mintPrice).format('0,0.[000]')}{' '}\n        </Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Price\n","import { useWalletAddress } from '@sentre/senhub'\nimport { CSSProperties } from 'react'\n\nimport { Col, Row, Image, Card, Typography, Spin } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport EndIn from '../endIn'\nimport Sold from '../sold'\nimport Fundraising from '../fundraising'\nimport LaunchpadProfile from '../launchpadProfile'\nimport Price from '../price'\n\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\n\nimport './index.less'\n\nexport type LaunchpadCardProps = {\n  launchpadAddress: string\n  style?: CSSProperties\n}\n\nconst LaunchpadCard = ({ launchpadAddress, style }: LaunchpadCardProps) => {\n  const {\n    metadata,\n    launchpadData: { authority },\n  } = useLaunchpadData(launchpadAddress)\n  const walletAddress = useWalletAddress()\n  const { pushHistory } = useAppRouter()\n\n  const owner = authority.toBase58() === walletAddress\n\n  return (\n    <Row\n      className=\"project-card\"\n      onClick={() => pushHistory('/launchpad-details', { launchpadAddress })}\n    >\n      <Col span={24} className=\"project-card_header\">\n        <Spin spinning={!metadata}>\n          <Image\n            style={{ aspectRatio: '16/9', objectFit: 'cover' }}\n            src={metadata?.coverPhoto}\n            preview={false}\n          />\n        </Spin>\n      </Col>\n      <Col span={24}>\n        <Card className=\"project-card_body\" style={{ ...style }}>\n          <Row gutter={[16, 16]}>\n            <Col span={24}>\n              <Row gutter={[24, 24]} wrap={false} justify=\"space-between\">\n                <Col>\n                  <LaunchpadProfile launchpadAddress={launchpadAddress} />\n                </Col>\n                {owner && (\n                  <Col>\n                    <IonIcon className=\"owner\" name=\"person-outline\" />\n                  </Col>\n                )}\n              </Row>\n            </Col>\n            <Col span={24}>\n              <EndIn launchpadAddress={launchpadAddress} />\n            </Col>\n            <Col span={24}>\n              <Price launchpadAddress={launchpadAddress} />\n            </Col>\n            <Col span={24}>\n              <Sold launchpadAddress={launchpadAddress} />\n            </Col>\n            <Col span={24}>\n              <Fundraising launchpadAddress={launchpadAddress} />\n            </Col>\n            <Col span={24}>\n              <Typography.Paragraph\n                ellipsis={{ rows: 2 }}\n                style={{ margin: 0 }}\n                type=\"secondary\"\n              >\n                {metadata?.description}\n              </Typography.Paragraph>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default LaunchpadCard\n","import { Card, Col, Row, Typography } from 'antd'\nimport LaunchpadProfile from '../launchpadProfile'\nimport Price from '../price'\n\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport { LaunchpadCardProps } from './index'\nimport { useWidth } from '@sentre/senhub'\nimport { useParticipants } from 'hooks/launchpad/useParticipants'\nimport Fundraising from '../fundraising'\n\nconst CompletedLaunchpad = ({ launchpadAddress }: LaunchpadCardProps) => {\n  const { pushHistory } = useAppRouter()\n  const width = useWidth()\n  const participants = useParticipants(launchpadAddress)\n\n  const isMobile = width < 983\n  const direction = isMobile ? 'row' : 'column'\n  return (\n    <Card\n      hoverable\n      style={{ cursor: 'pointer' }}\n      onClick={() => pushHistory('/launchpad-details', { launchpadAddress })}\n      className=\"completed-card\"\n    >\n      <Row gutter={[8, 8]} align=\"middle\">\n        <Col sm={24} xs={24} md={24} lg={8}>\n          <LaunchpadProfile launchpadAddress={launchpadAddress} />\n        </Col>\n        <Col sm={24} xs={24} md={24} lg={16}>\n          <Row gutter={[8, 8]} style={{ height: '100%' }}>\n            <Col xs={24} sm={24} md={24} lg={8}>\n              <Row gutter={[12, 12]} style={{ flexFlow: direction }}>\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">\n                    Participants\n                  </Typography.Text>\n                </Col>\n                <Col>\n                  <Typography.Text>{participants.totalUsers}</Typography.Text>\n                </Col>\n              </Row>\n            </Col>\n            <Col xs={24} sm={24} md={24} lg={8}>\n              <Price\n                launchpadAddress={launchpadAddress}\n                direction={direction}\n              />\n            </Col>\n            <Col xs={24} sm={24} md={24} lg={8}>\n              <Fundraising\n                launchpadAddress={launchpadAddress}\n                isDetail\n                direction={direction}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CompletedLaunchpad\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { LaunchpadSate } from 'constant'\nimport { AppState } from 'model'\n\nexport const useFilterLaunchpad = (state?: LaunchpadSate) => {\n  const launchpads = useSelector((state: AppState) => state.launchpads)\n\n  const filteredLaunchpads = useMemo(() => {\n    const result = []\n\n    const validLaunchpads = Object.keys(launchpads).filter(\n      (address) => !launchpads[address].state['uninitialized'],\n    )\n\n    validLaunchpads.sort((a, b) => {\n      const a_startTime = launchpads[a].startTime.toNumber()\n      const b_startTime = launchpads[b].startTime.toNumber()\n\n      return b_startTime - a_startTime\n    })\n\n    if (!state) return validLaunchpads\n\n    for (const address of validLaunchpads) {\n      const launchpadData = launchpads[address]\n      let valid = true\n      const startTime = launchpadData.startTime.toNumber() * 1000\n      const endTime = launchpadData.endTime.toNumber() * 1000\n      const now = Date.now()\n\n      switch (state) {\n        case LaunchpadSate.active:\n          if (startTime > now || endTime < now) valid = false\n          break\n        case LaunchpadSate.upcoming:\n          if (startTime < now || endTime < now) valid = false\n          break\n        case LaunchpadSate.completed:\n          if (endTime >= now) valid = false\n          break\n      }\n      if (valid) result.push(address)\n    }\n\n    return result\n  }, [launchpads, state])\n\n  return filteredLaunchpads\n}\n","import { Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport LaunchpadCard from './components/launchpadCard'\nimport CompletedLaunchpad from './components/launchpadCard/completedLaunchpad'\n\nimport { LaunchpadSate } from 'constant'\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport { useFilterLaunchpad } from 'hooks/launchpad/useFilterLaunchpad'\n\nconst AllLaunchpad = () => {\n  const { getQuery, pushHistory } = useAppRouter()\n  const launchpadState = (getQuery('state') || '') as LaunchpadSate\n  const launchpads = useFilterLaunchpad(launchpadState)\n  const completed = launchpadState === LaunchpadSate.completed\n  const upcoming = launchpadState === LaunchpadSate.upcoming\n\n  return (\n    <Row justify=\"center\">\n      <Col xs={24} sm={24} md={20} lg={18}>\n        <Row gutter={[0, 18]} id=\"all-launchpad\">\n          <Col span={24}>\n            <Button\n              onClick={() => pushHistory('/launchpad')}\n              icon={<IonIcon name=\"chevron-back-outline\" />}\n              type=\"text\"\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Space size={16} align=\"center\">\n              <Typography.Title level={2}>\n                All {launchpadState} launchpad\n              </Typography.Title>\n              <Typography.Text className=\"amount-launchpad\">\n                {launchpads.length}\n              </Typography.Text>\n            </Space>\n          </Col>\n          {/* List launchpad */}\n          <Col span={24}>\n            <Row gutter={[12, 12]}>\n              {launchpads.map((launchpadAddress) => (\n                <Col key={launchpadAddress} xs={24} md={completed ? 24 : 12}>\n                  {completed ? (\n                    <CompletedLaunchpad launchpadAddress={launchpadAddress} />\n                  ) : (\n                    <LaunchpadCard\n                      style={{ minHeight: upcoming ? 344 : 404 }}\n                      launchpadAddress={launchpadAddress}\n                    />\n                  )}\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Col span={24} />\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default AllLaunchpad\n","import { PopupButton } from '@typeform/embed-react'\nimport { Button, Card, Col, Row, Typography } from 'antd'\n\nimport { useAppRouter } from 'hooks/useAppRouter'\n\nimport './index.less'\n\nconst Banner = () => {\n  const { pushHistory } = useAppRouter()\n\n  return (\n    <Card className=\"banner\" bordered={false}>\n      <Row gutter={[12, 12]}>\n        <Col span={24}>\n          <Typography.Title style={{ color: '#F3F3F5', fontWeight: 800 }}>\n            The{' '}\n            <span style={{ color: '#081438' }}>\n              Liquidity Bootstrapping Launchpad\n            </span>\n            <br /> for new projects on Solana\n          </Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Typography.Text style={{ color: '#CED0D7', fontSize: 20 }}>\n            Full support in project incubation\n          </Typography.Text>\n        </Col>\n        <Col span={24} />\n        <Col span={24}>\n          <Row gutter={[8, 8]} justify=\"center\">\n            <Col xs={{ order: 2 }} sm={{ order: 1 }} md={{ order: 1 }}>\n              <PopupButton\n                id=\"iWsRUCat\"\n                style={{ minWidth: 176 }}\n                className=\"balansol-btn balansol-btn-default balansol-btn-lg balansol-btn-background-ghost\"\n              >\n                Contact us\n              </PopupButton>\n            </Col>\n            <Col xs={{ order: 1 }} sm={{ order: 2 }} md={{ order: 2 }}>\n              <Button\n                onClick={() => pushHistory('/launchpad-create')}\n                size=\"large\"\n                type=\"primary\"\n              >\n                Create a launchpad\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Banner\n","import { Button, Col, Empty, Row, Space, Typography } from 'antd'\nimport LaunchpadCard from '../launchpadCard'\nimport CompletedLaunchpad from '../launchpadCard/completedLaunchpad'\n\nimport { LaunchpadSate } from 'constant'\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport { useFilterLaunchpad } from 'hooks/launchpad/useFilterLaunchpad'\n\ntype ListLaunchpadProps = {\n  state: LaunchpadSate\n}\n\nconst ListLaunchpad = ({ state }: ListLaunchpadProps) => {\n  const launchpads = useFilterLaunchpad(state)\n  const { pushHistory } = useAppRouter()\n  const completed = state === LaunchpadSate.completed\n  const upcoming = state === LaunchpadSate.upcoming\n\n  const pageSize = completed ? 5 : 2\n\n  return (\n    <Row gutter={[0, 8]} id=\"launchpad\">\n      <Col span={24}>\n        <Row justify=\"space-between\">\n          <Col>\n            <Space size={16} align=\"center\">\n              <Typography.Title\n                level={2}\n                style={{ textTransform: 'capitalize' }}\n              >\n                {state}\n              </Typography.Title>\n              <Typography.Text className=\"amount-launchpad\" type=\"success\">\n                {launchpads.length}\n              </Typography.Text>\n            </Space>\n          </Col>\n          <Col>\n            <Button\n              onClick={() => pushHistory('/launchpad-all', { state })}\n              type=\"link\"\n              disabled={!launchpads.length}\n              style={{ padding: 4 }}\n            >\n              View all\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        {launchpads.length ? (\n          <Row gutter={[24, 24]}>\n            {launchpads.slice(0, pageSize).map((launchpadAddress) => (\n              <Col key={launchpadAddress} md={24} lg={completed ? 24 : 12}>\n                {completed ? (\n                  <CompletedLaunchpad launchpadAddress={launchpadAddress} />\n                ) : (\n                  <LaunchpadCard\n                    style={{ minHeight: upcoming ? 344 : 404 }}\n                    launchpadAddress={launchpadAddress}\n                  />\n                )}\n              </Col>\n            ))}\n          </Row>\n        ) : (\n          <Empty description={`No ${state} launchpads`} />\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ListLaunchpad\n","import { Col, Collapse, Row, Typography } from 'antd'\n\nconst { Panel } = Collapse\n\nconst CONTENT = [\n  {\n    question: 'What is special about Liquidity Bootstrapping Pool (LBP)?',\n    answer:\n      'LBP is one of the uses of Smart Pool in Balancer. It is well suited for projects that want to distribute their tokens to the community in a fair manner. At the same time, creating a high level of liquidity with a low initial cost.',\n  },\n  {\n    question: 'Have any bots front-run?',\n    answer:\n      'Prevent bot front-run so participants have a higher chance of buying tokens than in other ways.',\n  },\n  {\n    question: 'Do I have to pay any fees to purchase tokens?',\n    answer:\n      'Yes, it is a tax fee (0.05%). It is the cost to help the development team maintain and stabilize the system.',\n  },\n  {\n    question:\n      'What difference between the Token price and the Avg. purchased price?',\n    answer:\n      'The token price is the price at that time of the project. It will have a quick increase in a short time when buying demand appears and then continue to decrease or move sideways. While the Avg. purchased price is based on the average of all purchased users.',\n  },\n  {\n    question: 'When can I claim the purchased token?',\n    answer:\n      'The tokens you bought will be locked while the launchpad is active, you can claim your tokens after it ends.',\n  },\n  {\n    question:\n      'After the launchpad is completed, what can I do with the purchased tokens?',\n    answer:\n      'After the launchpad is completed, the launchpad owner will create a pool based on the assets raised, you can deposit to this pool to get the corresponding reward.',\n  },\n]\n\nconst FAQ = () => {\n  return (\n    <Row justify=\"center\" gutter={[0, 32]}>\n      <Col>\n        <Typography.Title>FAQ</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Collapse\n          defaultActiveKey={['0']}\n          bordered={false}\n          expandIconPosition=\"end\"\n          ghost\n        >\n          {CONTENT.map((val, idx) => (\n            <Panel\n              header={\n                <Typography.Text>\n                  {`${idx + 1}. ${val.question}`}\n                </Typography.Text>\n              }\n              key={idx}\n            >\n              <Typography.Text type=\"secondary\">{val.answer}</Typography.Text>\n            </Panel>\n          ))}\n        </Collapse>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FAQ\n","import { Button, Col, Row, Space, Tooltip, Typography } from 'antd'\nimport { PopupButton } from '@typeform/embed-react'\nimport IonIcon from '@sentre/antd-ionicon'\nimport Banner from './banner'\nimport ListLaunchpad from './components/listLaunchpad'\nimport FAQ from './components/faq'\n\nimport { LaunchpadSate } from 'constant'\nimport { useAppRouter } from 'hooks/useAppRouter'\n\nimport './index.less'\n\nconst Launchpad = () => {\n  const { pushHistory } = useAppRouter()\n\n  return (\n    <Row justify=\"center\">\n      <Col xs={24} sm={24} md={20} lg={18}>\n        <Row gutter={[0, 48]}>\n          <Col span={24}>\n            <Banner />\n          </Col>\n          <Col span={24}>\n            <Row gutter={[0, 8]}>\n              <Col span={24} style={{ textAlign: 'right' }}>\n                <Tooltip title=\"View your purchased\">\n                  <Button\n                    icon={<IonIcon name=\"bag-handle-outline\" />}\n                    onClick={() => pushHistory('/launchpad-your-purchased')}\n                    ghost\n                  />\n                </Tooltip>\n              </Col>\n              <Col span={24}>\n                <ListLaunchpad state={LaunchpadSate.active} />\n              </Col>\n            </Row>\n          </Col>\n          <Col span={24}>\n            <ListLaunchpad state={LaunchpadSate.upcoming} />\n          </Col>\n          <Col span={24}>\n            <ListLaunchpad state={LaunchpadSate.completed} />\n          </Col>\n          <Col span={24} /> {/** Safe place */}\n          <Col span={24} style={{ textAlign: 'center' }}>\n            <Space direction=\"vertical\" size={24}>\n              <Typography.Title>Ready to launch your project?</Typography.Title>\n              <PopupButton\n                id=\"iWsRUCat\"\n                className=\"balansol-btn balansol-btn-primary balansol-btn-lg\"\n              >\n                Apply now\n              </PopupButton>\n            </Space>\n          </Col>\n          <Col span={24} /> {/** Safe place */}\n          <Col span={24}>\n            <FAQ />\n          </Col>\n          <Col span={24} /> {/** Safe place */}\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Launchpad\n","import IonIcon from '@sentre/antd-ionicon'\nimport { Button, Col, Input, Row, Space } from 'antd'\n\ntype SocialsProps = {\n  socials: string[]\n  onChangeSocials: (socials: string[]) => void\n}\n\nconst Socials = ({ socials, onChangeSocials }: SocialsProps) => {\n  const onAddMore = () => {\n    const nextData = [...socials]\n    nextData.push('')\n    return onChangeSocials(nextData)\n  }\n\n  const onRemove = (index: number) => {\n    const nextData = [...socials]\n    nextData.splice(index, 1)\n    return onChangeSocials(nextData)\n  }\n\n  const onChange = (val: string, index: number) => {\n    const nextData = [...socials]\n    nextData[index] = val\n    return onChangeSocials(nextData)\n  }\n\n  return (\n    <Row gutter={[8, 8]}>\n      {socials.map((social, index) => (\n        <Col span={24} key={index}>\n          <Space style={{ width: '100%' }} className=\"input-vc\">\n            <Input\n              value={social}\n              placeholder=\"Input link\"\n              style={{ width: '100%' }}\n              onChange={(e) => onChange(e.target.value, index)}\n            />\n            {index !== 0 && (\n              <Button\n                type=\"text\"\n                icon={<IonIcon name=\"remove-circle-outline\" />}\n                onClick={() => onRemove(index)}\n              />\n            )}\n          </Space>\n        </Col>\n      ))}\n      <Col span={24}>\n        <Button\n          size=\"large\"\n          block\n          type=\"dashed\"\n          icon={<IonIcon name=\"add-outline\" />}\n          onClick={onAddMore}\n        >\n          Add more\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Socials\n","import { ReactNode } from 'react'\n\nimport { Col, Row } from 'antd'\n\ntype SpaceVerticalProps = {\n  label: ReactNode | string\n  children: JSX.Element\n}\n\nconst SpaceVertical = ({ label, children }: SpaceVerticalProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>{label}</Col>\n      <Col span={24}>{children}</Col>\n    </Row>\n  )\n}\n\nexport default SpaceVertical\n","import IonIcon from '@sentre/antd-ionicon'\n\ntype AvatarUploadedProps = {\n  children: JSX.Element\n  onRemove?: () => void\n  iconSize?: number\n}\n\nconst AvatarUploaded = ({\n  children,\n  onRemove,\n  iconSize = 14,\n}: AvatarUploadedProps) => {\n  return (\n    <div className=\"avatar-uploaded\" style={{ height: '100%' }}>\n      <div className=\"avatar\" style={{ height: '100%' }}>\n        {children}\n      </div>\n      <IonIcon\n        onClick={onRemove}\n        className=\"remove-icon\"\n        name=\"trash-outline\"\n        style={{ fontSize: iconSize }}\n      />\n    </div>\n  )\n}\n\nexport default AvatarUploaded\n","import { Avatar, Button, Col, Input, Row, Space, Upload } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport AvatarUploaded from '../avatarUploaded'\n\nimport { UploadChangeParam } from 'antd/lib/upload'\nimport { fileToBase64 } from 'helper'\n\nexport type VC = { logo: string; link: string }\n\ntype VCInfoProps = {\n  vCs: VC[]\n  onChangeVC: (vcs: VC[]) => void\n}\n\nconst VCInfo = ({ vCs, onChangeVC }: VCInfoProps) => {\n  const onAddMore = () => {\n    const nextData = [...vCs]\n    nextData.push({ logo: '', link: '' })\n    return onChangeVC(nextData)\n  }\n\n  const onRemove = (index: number) => {\n    const nextData = [...vCs]\n    nextData.splice(index, 1)\n    return onChangeVC(nextData)\n  }\n\n  const onFileChange = (file: UploadChangeParam, index: number) => {\n    const { fileList } = file\n    const originFile = fileList[0].originFileObj as File\n    fileToBase64(originFile, formatImg, index)\n  }\n\n  const formatImg = async (imgBase64: string, index: number) => {\n    const vCInfo: VC = {\n      ...vCs[index],\n      logo: imgBase64,\n    }\n    const nextData = [...vCs]\n    nextData[index] = vCInfo\n    return onChangeVC(nextData)\n  }\n\n  const onLinkChange = (val: string, index: number) => {\n    const nextData = [...vCs]\n    nextData[index] = { ...nextData[index], link: val }\n    return onChangeVC(nextData)\n  }\n\n  const onRemoveLogo = (index: number) => {\n    const nextData = [...vCs]\n    nextData[index] = { ...nextData[index], logo: '' }\n    return onChangeVC(nextData)\n  }\n\n  return (\n    <Row gutter={[8, 8]}>\n      {vCs.map(({ link, logo }, index) => (\n        <Col span={24} key={index}>\n          <Row gutter={12} align=\"middle\">\n            <Col xs={4} md={2}>\n              {logo ? (\n                <AvatarUploaded onRemove={() => onRemoveLogo(index)}>\n                  <Avatar size={40} src={logo} />\n                </AvatarUploaded>\n              ) : (\n                <Upload\n                  className=\"upload-vc\"\n                  accept=\"image/png,image/jpg,image/webp\"\n                  maxCount={1}\n                  onChange={(file) => onFileChange(file, index)}\n                >\n                  <Button\n                    size=\"large\"\n                    block\n                    type=\"dashed\"\n                    icon={<IonIcon name=\"attach-outline\" />}\n                  />\n                </Upload>\n              )}\n            </Col>\n            <Col xs={20} md={22}>\n              <Space style={{ width: '100%' }} className=\"input-vc\">\n                <Input\n                  value={link}\n                  placeholder=\"Input name\"\n                  style={{ width: '100%' }}\n                  onChange={(e) => onLinkChange(e.target.value, index)}\n                />\n                {index !== 0 && (\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"remove-circle-outline\" />}\n                    onClick={() => onRemove(index)}\n                  />\n                )}\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      ))}\n      <Col span={24}>\n        <Button\n          size=\"large\"\n          block\n          type=\"dashed\"\n          icon={<IonIcon name=\"add-outline\" />}\n          onClick={onAddMore}\n        >\n          Add more\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default VCInfo\n","import { Button, Col, Input, Row, Typography } from 'antd'\nimport Socials from './socials'\nimport SpaceVertical from './spaceVertical'\nimport VCInfo, { VC } from './vcInfo'\n\nimport { useGlobalLaunchpad } from '../index'\nimport { InitLaunchpadStep, ProjectInfoData } from 'constant'\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport { validURL } from 'helper'\nimport { useMemo } from 'react'\n\ntype ProjectInfoProp = {\n  setStep: (val: InitLaunchpadStep) => void\n}\n\nconst ProjectInfo = ({ setStep }: ProjectInfoProp) => {\n  const [launchpadData, setLaunchpadData] = useGlobalLaunchpad()\n  const { pushHistory } = useAppRouter()\n\n  const { description, projectName, socials } = launchpadData.projectInfo\n  const { whitepaper, vCs, github, website } = launchpadData.projectInfo\n\n  const onChangeInfo = (name: keyof ProjectInfoData, value: string) => {\n    const nextProjectInfo = {\n      ...launchpadData.projectInfo,\n      [name]: value,\n    }\n    return setLaunchpadData({ ...launchpadData, projectInfo: nextProjectInfo })\n  }\n\n  const onChangeVC = (vCs: VC[]) => {\n    const nextData = { ...launchpadData }\n    const nextProjectInfo = { ...launchpadData.projectInfo, vCs }\n    return setLaunchpadData({ ...nextData, projectInfo: nextProjectInfo })\n  }\n\n  const onChangeSocials = (socials: string[]) => {\n    const nextData = { ...launchpadData }\n    const nextProjectInfo = { ...launchpadData.projectInfo, socials }\n    return setLaunchpadData({ ...nextData, projectInfo: nextProjectInfo })\n  }\n\n  const onConfirm = async () => {\n    return setStep(InitLaunchpadStep.projectPhoto)\n  }\n\n  const disabled = useMemo(() => {\n    if (socials.length > 1)\n      for (const social of socials) if (!validURL(social)) return true\n\n    return (\n      !projectName ||\n      !description ||\n      !website ||\n      !validURL(website) ||\n      !whitepaper ||\n      !validURL(whitepaper) ||\n      !github ||\n      !validURL(github) ||\n      projectName.length > 32 ||\n      description.length > 150\n    )\n  }, [description, github, projectName, socials, website, whitepaper])\n\n  return (\n    <Row gutter={[20, 20]}>\n      {/* Name */}\n      <Col span={24}>\n        <SpaceVertical\n          label={\n            <Row justify=\"space-between\">\n              <Col>\n                <Typography.Text>Project name</Typography.Text>\n              </Col>\n              <Col>\n                <Typography.Text type=\"secondary\">\n                  <span style={{ color: projectName.length > 32 ? 'red' : '' }}>\n                    {projectName.length}\n                  </span>\n                  /32 characters\n                </Typography.Text>\n              </Col>\n            </Row>\n          }\n        >\n          <Input\n            placeholder=\"Input your project name\"\n            value={projectName}\n            onChange={(e) => onChangeInfo('projectName', e.target.value)}\n          />\n        </SpaceVertical>\n      </Col>\n\n      {/* Description */}\n      <Col span={24}>\n        <SpaceVertical\n          label={\n            <Row justify=\"space-between\">\n              <Col>\n                <Typography.Text>Description</Typography.Text>\n              </Col>\n              <Col>\n                <Typography.Text type=\"secondary\">\n                  <span\n                    style={{ color: description.length > 150 ? 'red' : '' }}\n                  >\n                    {description.length}\n                  </span>\n                  /150 characters\n                </Typography.Text>\n              </Col>\n            </Row>\n          }\n        >\n          <Input.TextArea\n            value={description}\n            rows={4}\n            placeholder=\"Summarize about your project...\"\n            className=\"description\"\n            onChange={(e) => onChangeInfo('description', e.target.value)}\n          />\n        </SpaceVertical>\n      </Col>\n\n      {/* Website + Whitepaper + Github */}\n      <Col span={24}>\n        <SpaceVertical label=\"Website\">\n          <Input\n            placeholder=\"Input link\"\n            value={website}\n            onChange={(e) => onChangeInfo('website', e.target.value)}\n          />\n        </SpaceVertical>\n      </Col>\n      <Col span={24}>\n        <SpaceVertical label=\"Whitepaper\">\n          <Input\n            placeholder=\"Input link\"\n            value={whitepaper}\n            onChange={(e) => onChangeInfo('whitepaper', e.target.value)}\n          />\n        </SpaceVertical>\n      </Col>\n      <Col span={24}>\n        <SpaceVertical label=\"Github\">\n          <Input\n            placeholder=\"Input link\"\n            value={github}\n            onChange={(e) => onChangeInfo('github', e.target.value)}\n          />\n        </SpaceVertical>\n      </Col>\n\n      {/* VC */}\n      <Col span={24}>\n        <SpaceVertical label=\"Leading venture capital (Optional)\">\n          <VCInfo onChangeVC={onChangeVC} vCs={vCs} />\n        </SpaceVertical>\n      </Col>\n\n      {/* Socials */}\n      <Col span={24}>\n        <SpaceVertical label=\"Socials (Optional)\">\n          <Socials onChangeSocials={onChangeSocials} socials={socials} />\n        </SpaceVertical>\n      </Col>\n\n      {/* Action */}\n      <Col span={24} style={{ marginTop: 12 }}>\n        <Row gutter={[12, 12]}>\n          <Col span={12}>\n            <Button\n              onClick={() => pushHistory('/launchpad')}\n              block\n              ghost\n              size=\"large\"\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col span={12}>\n            <Button\n              disabled={disabled}\n              onClick={onConfirm}\n              block\n              type=\"primary\"\n              size=\"large\"\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProjectInfo\n","import { Button, Col, Image, Row, Space, Typography, Upload } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport AvatarUploaded from '../avatarUploaded'\n\nimport { InitLaunchpadStep } from 'constant'\nimport { UploadChangeParam } from 'antd/lib/upload'\nimport { fileToBase64 } from 'helper'\nimport { useGlobalLaunchpad } from '../index'\n\ntype ProjectPhotoProp = {\n  setStep: (val: InitLaunchpadStep) => void\n}\n\nconst ProjectPhoto = ({ setStep }: ProjectPhotoProp) => {\n  const [launchpadData, setLaunchpadData] = useGlobalLaunchpad()\n  const coverPhoto = launchpadData.projectInfo.coverPhoto\n\n  const onFileChange = (file: UploadChangeParam) => {\n    const { fileList } = file\n    const originFile = fileList[0].originFileObj as File\n    fileToBase64(originFile, onChangePhoto, 0)\n  }\n\n  const onChangePhoto = async (imgBase64: string) => {\n    const nextProjectInfo = {\n      ...launchpadData.projectInfo,\n      coverPhoto: imgBase64,\n    }\n    return setLaunchpadData({ ...launchpadData, projectInfo: nextProjectInfo })\n  }\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Text>\n          The cover photo on your project will help create more impressions and\n          attract users.\n        </Typography.Text>\n      </Col>\n      <Col span={24} style={{ minHeight: 240 }} className=\"project-photo\">\n        {!coverPhoto ? (\n          <Upload.Dragger\n            accept=\"image/png,image/jpg,image/webp\"\n            onChange={onFileChange}\n            className=\"cover-photo\"\n          >\n            <Space direction=\"vertical\">\n              <IonIcon style={{ fontSize: 40 }} name=\"cloud-upload-outline\" />\n              <Space direction=\"vertical\" size={0}>\n                <Typography.Text>Click or drag image to upload</Typography.Text>\n                <Typography.Text type=\"secondary\">\n                  Should be 800x450px with JPG, PNG file.\n                </Typography.Text>\n              </Space>\n            </Space>\n          </Upload.Dragger>\n        ) : (\n          <AvatarUploaded iconSize={32} onRemove={() => onChangePhoto('')}>\n            <Image\n              src={coverPhoto.toString()}\n              preview={false}\n              style={{\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover',\n                objectPosition: 'center',\n                aspectRatio: '16/9',\n              }}\n              className=\"cover-photo\"\n            />\n          </AvatarUploaded>\n        )}\n      </Col>\n      <Col span={24} />\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col span={12}>\n            <Button\n              onClick={() => setStep(InitLaunchpadStep.projectInfo)}\n              block\n              ghost\n              size=\"large\"\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={12}>\n            <Button\n              onClick={() => setStep(InitLaunchpadStep.configuration)}\n              block\n              type=\"primary\"\n              size=\"large\"\n              disabled={!coverPhoto}\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProjectPhoto\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport moment from 'moment'\nimport { utilsBN } from '@sen-use/web3'\nimport ReactEChartsCore from 'echarts-for-react/lib/core'\nimport * as echarts from 'echarts/core'\nimport {\n  GridComponent,\n  TitleComponent,\n  LegendComponent,\n  TooltipComponent,\n} from 'echarts/components'\nimport { CanvasRenderer } from 'echarts/renderers'\nimport { LineChart } from 'echarts/charts'\nimport { tokenProvider, useMintDecimals, useTheme, util } from '@sentre/senhub'\n\nimport { useGetPriceInPool } from 'hooks/launchpad/useGetTokenInPoolPrice'\nimport { useGetLaunchpadWeight } from 'hooks/launchpad/useGetLaunchpadWeight'\n\necharts.use([\n  TitleComponent,\n  GridComponent,\n  LineChart,\n  CanvasRenderer,\n  LegendComponent,\n  TooltipComponent,\n])\n\ntype LaunchpadLineChartProps = {\n  startPrice: number\n  endPrice: number\n  balanceA: number\n  balanceB: number\n  baseMint: string\n  startTime: number\n  endTime: number\n  mint: string\n}\n\nconst getTimes = (starTime: number, endTime: number) => {\n  const result: number[] = []\n  const blockTime = (endTime - starTime) / 3\n  for (let i = 0; i < 4; i++) {\n    if (i === 0) {\n      result[i] = starTime\n      continue\n    }\n    const time = result[result.length - 1] + blockTime\n    result[i] = time\n  }\n  return result\n}\n\nconst buildOptions = (\n  defaultValue: number[],\n  durations: number[],\n  style: { color: string; lineColor: string },\n) => {\n  const xAxis = durations.map((time) => moment(time).format('DD/MM HH:mm'))\n  return {\n    legend: {\n      data: ['Estimated price'],\n      textStyle: {\n        color: style.color,\n      },\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: function (params: any) {\n        return `<div style=\"min-width: 150px; font-weight: 400\"><span style=\"display: flex; justify-content: space-between\"><span style=\"font-size: 14px, font-weight: 400\">Price:</span> <span style=\"font-size: 16px; font-weight: 700\">$${util\n          .numeric(params.value)\n          .format(\n            '0,0.[000]',\n          )}</span></span> <span style=\"display: flex; justify-content: space-between;\"><span style=\"font-size: 14px; font-weight: 400\">Date:</span> <span style=\"font-size: 16px; font-weight: 700\">${\n          params.name\n        }</span></span></div>`\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: xAxis,\n      axisLine: {\n        lineStyle: {\n          color: style.color,\n        },\n      },\n    },\n    yAxis: {\n      type: 'value',\n      axisLine: {\n        lineStyle: {\n          color: style.color,\n        },\n      },\n      splitLine: {\n        lineStyle: {\n          color: [style.lineColor],\n        },\n      },\n    },\n    series: [\n      {\n        name: 'Estimated price',\n        data: defaultValue,\n        type: 'line',\n        smooth: true,\n        lineStyle: {\n          normal: {\n            width: 2,\n            type: 'dashed',\n          },\n        },\n      },\n    ],\n  }\n}\n\nconst STYLE = {\n  light: {\n    color: '#081438',\n    lineColor: '#CED0D7',\n  },\n  dark: {\n    color: '#F3F3F5',\n    lineColor: '#394360',\n  },\n}\nconst LaunchpadChartInit = ({\n  startPrice,\n  endPrice,\n  balanceA,\n  balanceB,\n  baseMint,\n  startTime,\n  endTime,\n  mint,\n}: LaunchpadLineChartProps) => {\n  const [stablePrice, setStablePrice] = useState(0)\n  const calcPriceInPool = useGetPriceInPool()\n  const getLaunchpadWeight = useGetLaunchpadWeight()\n  const decimal = useMintDecimals({ mintAddress: mint }) || 0\n  const stbDecimal = useMintDecimals({ mintAddress: baseMint }) || 0\n  const theme = useTheme()\n\n  const getWeight = useCallback(\n    (priceA: number, balanceA: number, priceB: number, balanceB) => {\n      const total = priceA * balanceA + priceB * balanceB\n      const weightA = (priceA * balanceA) / total\n      const weightB = 1 - weightA\n      return [utilsBN.decimalize(weightA, 9), utilsBN.decimalize(weightB, 9)]\n    },\n    [],\n  )\n\n  const durations = useMemo(() => {\n    const times = getTimes(startTime, endTime)\n    return times\n  }, [endTime, startTime])\n\n  const defaultValue = useMemo(() => {\n    let prices: number[] = []\n    const startWeight = getWeight(startPrice, balanceA, stablePrice, balanceB)\n    const endWeight = getWeight(endPrice, balanceA, stablePrice, balanceB)\n\n    for (const time of durations) {\n      const weights = getLaunchpadWeight(\n        time,\n        '',\n        startWeight,\n        endWeight,\n        startTime / 1000,\n        endTime / 1000,\n      )\n\n      const price = calcPriceInPool(\n        utilsBN.decimalize(weights[0], 9),\n        utilsBN.decimalize(balanceA, decimal),\n        stablePrice,\n        utilsBN.decimalize(balanceB, 9),\n        utilsBN.decimalize(weights[1], stbDecimal),\n      )\n      prices.push(price)\n    }\n\n    return prices\n  }, [\n    balanceA,\n    balanceB,\n    calcPriceInPool,\n    decimal,\n    durations,\n    endPrice,\n    endTime,\n    getLaunchpadWeight,\n    getWeight,\n    stablePrice,\n    startPrice,\n    startTime,\n    stbDecimal,\n  ])\n\n  useEffect(() => {\n    ;(async () => {\n      if (stablePrice) return\n      const price = await tokenProvider.getPrice(baseMint)\n      if (!price) return setStablePrice(0)\n      return setStablePrice(price)\n    })()\n  }, [baseMint, stablePrice])\n\n  return (\n    <ReactEChartsCore\n      echarts={echarts}\n      option={buildOptions(defaultValue, durations, STYLE[theme])}\n      notMerge={true}\n      lazyUpdate={true}\n    />\n  )\n}\n\nexport default LaunchpadChartInit\n","import { useCallback } from 'react'\nimport {\n  getAnchorProvider,\n  tokenProvider,\n  useGetMintDecimals,\n} from '@sentre/senhub'\nimport { BN, web3 } from '@project-serum/anchor'\nimport { utilsBN } from '@sen-use/web3'\n\nimport { MintActionStates, MintConfigs } from '@senswap/balancer'\nimport { Launchpad } from 'constant'\nimport { Ipfs } from 'shared/ipfs'\nimport configs from 'configs'\n\nconst DEFAULT_TAX_FEE = new BN(500_000) // 0.05%\n\nexport const useCreateLaunchpad = () => {\n  const getDecimals = useGetMintDecimals()\n\n  const getWeight = useCallback(\n    (priceA: number, balanceA: number, priceB: number, balanceB) => {\n      const total = priceA * balanceA + priceB * balanceB\n      const weightA = (priceA * balanceA) / total\n      const weightB = 1 - weightA\n      return {\n        weightA: utilsBN.decimalize(weightA, 9),\n        weightB: utilsBN.decimalize(weightB, 9),\n      }\n    },\n    [],\n  )\n\n  const onCreateLaunchpad = useCallback(\n    async (props: Launchpad) => {\n      const { amount, mint, endTime, endPrice, fee } = props\n      const { stableMint, projectInfo, startPrice, startTime } = props\n      const { baseAmount } = projectInfo\n      const launchpad = web3.Keypair.generate()\n      const transactions: web3.Transaction[] = []\n      const transactionsInit: web3.Transaction[] = []\n\n      const baseMintDecimal = (await getDecimals({ mintAddress: mint })) || 0\n      const stableDecimal =\n        (await getDecimals({ mintAddress: stableMint })) || 0\n\n      const bnAmount = utilsBN.decimalize(amount, baseMintDecimal)\n      const bnBaseAmount = utilsBN.decimalize(baseAmount, stableDecimal)\n      const metadata = await Ipfs.methods.launchpad.set(projectInfo)\n      const swapFee = utilsBN.decimalize(fee, 9)\n      const provider = getAnchorProvider()!\n      provider.opts.skipPreflight = true\n\n      /** Initialize launchpad */\n      const { tx: txInitLaunchpad } =\n        await window.launchpad.initializeLaunchpad({\n          baseAmount: bnBaseAmount,\n          stableMint: new web3.PublicKey(stableMint),\n          mint: new web3.PublicKey(mint),\n          sendAndConfirm: true,\n          launchpad,\n        })\n      transactionsInit.push(txInitLaunchpad)\n\n      const baseMint = await window.launchpad.deriveBaseMintAddress(\n        launchpad.publicKey,\n      )\n      const stablePrice = (await tokenProvider.getPrice(stableMint)) || 0\n      const startWeights = getWeight(\n        startPrice,\n        amount,\n        stablePrice,\n        baseAmount,\n      )\n      const endWeights = getWeight(endPrice, amount, stablePrice, baseAmount)\n\n      const mintsConfigs: MintConfigs[] = [\n        {\n          publicKey: mint,\n          action: MintActionStates.Active,\n          amountIn: bnAmount,\n          weight: startWeights.weightA,\n        },\n        {\n          publicKey: baseMint,\n          action: MintActionStates.Active,\n          amountIn: bnBaseAmount,\n          weight: startWeights.weightB,\n        },\n      ]\n\n      /** Initialize Pool  */\n      const { poolAddress, tx: txInitPool } =\n        await window.balansol.initializePool({\n          fee: swapFee,\n          taxFee: DEFAULT_TAX_FEE,\n          mintsConfigs,\n          taxMan: configs.sol.taxmanAddress,\n          sendAndConfirm: true,\n        })\n      transactionsInit.push(txInitPool)\n\n      /** Join to Pool  */\n      const { transaction: txMintJoin } = await window.balansol.initializeJoin({\n        poolAddress,\n        mint,\n        amountIn: bnAmount,\n        sendAndConfirm: false,\n      })\n\n      const { transaction: txBaseMintJoin } =\n        await window.balansol.initializeJoin({\n          poolAddress,\n          mint: baseMint,\n          amountIn: bnBaseAmount,\n          sendAndConfirm: false,\n        })\n      transactions.push(txMintJoin)\n      transactions.push(txBaseMintJoin)\n\n      //Update action\n      const { tx: txUpdateAction } = await window.balansol.updateActions({\n        poolAddress,\n        actions: [MintActionStates.AskOnly, MintActionStates.BidOnly],\n        sendAndConfirm: false,\n      })\n      transactions.push(txUpdateAction)\n\n      //Transfer pool Owner\n      const treasurer = await window.launchpad.deriveTreasurerAddress(\n        launchpad.publicKey,\n      )\n      const { tx: txTransfer } = await window.balansol.transferOwnership({\n        poolAddress,\n        newOwner: treasurer,\n        sendAndConfirm: false,\n      })\n      transactions.push(txTransfer)\n\n      /** Active launchpad */\n      const { tx: txActive } = await window.launchpad.activeLaunchpad({\n        pool: new web3.PublicKey(poolAddress),\n        startTime: new BN(startTime / 1000),\n        endTime: new BN(endTime / 1000),\n        launchpad: launchpad.publicKey,\n        metadata: Array.from(metadata.digest),\n        endWeights: [endWeights.weightA, endWeights.weightB],\n        sendAndConfirm: false,\n      })\n      transactions.push(txActive)\n\n      await provider.sendAll(transactions.map((tx) => ({ tx, signers: [] })))\n      return window.notify({\n        type: 'success',\n        description: 'Initialized launchpad successfully!',\n      })\n    },\n    [getDecimals, getWeight],\n  )\n\n  return { onCreateLaunchpad }\n}\n","import { useState } from 'react'\nimport { useTheme, util } from '@sentre/senhub'\nimport moment from 'moment'\n\nimport { Button, Col, DatePicker, InputNumber } from 'antd'\nimport { Row, Select, Space, Typography } from 'antd'\nimport LaunchpadChartInit from 'view/launchpad/launchpadLineChart/launchpadChartInit'\nimport { MintSelection } from '@sen-use/app'\nimport CategoryTag from 'components/categoryTag'\nimport SpaceVertical from '../projectInfo/spaceVertical'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { CATEGORY, Launchpad, ProjectInfoData } from 'constant'\nimport { DATE_FORMAT, InitLaunchpadStep } from 'constant'\nimport { DEFAULT_LAUNCHPAD, useGlobalLaunchpad } from '../index'\nimport { useCreateLaunchpad } from 'hooks/launchpad/actions/useCreateLaunchpad'\nimport { useWrapAccountBalance } from 'hooks/useWrapAccountBalance'\nimport { RangePickerProps } from 'antd/lib/date-picker'\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport { notifyError } from '@sen-use/app'\nimport type { CustomTagProps } from 'rc-select/lib/BaseSelect'\n\ntype ConfigurationProps = {\n  setStep: (val: InitLaunchpadStep) => void\n}\n\nconst tagRender = (props: CustomTagProps) => {\n  const category = props.label as keyof typeof CATEGORY\n  return <CategoryTag category={category} />\n}\n\nconst Configuration = ({ setStep }: ConfigurationProps) => {\n  const [loading, setLoading] = useState(false)\n  const [launchpadData, setLaunchpadData] = useGlobalLaunchpad()\n  const { onCreateLaunchpad } = useCreateLaunchpad()\n  const { stableMint, startPrice, endPrice, mint } = launchpadData\n  const { startTime, endTime, projectInfo, amount } = launchpadData\n  const { balance } = useWrapAccountBalance(mint)\n  const theme = useTheme()\n  const { pushHistory } = useAppRouter()\n\n  const onChange = (name: keyof Launchpad, value: string | number) =>\n    setLaunchpadData({ ...launchpadData, [name]: value })\n\n  const onChangeProjectInfo = (\n    name: keyof ProjectInfoData,\n    value: string | number,\n  ) => {\n    const nextProjectInfo = { ...launchpadData.projectInfo, [name]: value }\n    return setLaunchpadData({ ...launchpadData, projectInfo: nextProjectInfo })\n  }\n\n  const onCreate = async () => {\n    try {\n      setLoading(true)\n      const nextData: Launchpad = JSON.parse(JSON.stringify(launchpadData))\n      const nextSocials = []\n\n      for (const social of launchpadData.projectInfo.socials)\n        if (social) nextSocials.push(social)\n\n      nextData.projectInfo.socials = nextSocials\n\n      await onCreateLaunchpad(nextData)\n      setLaunchpadData(DEFAULT_LAUNCHPAD)\n      return pushHistory('/launchpad')\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const disabledStartDate: RangePickerProps['disabledDate'] = (current) => {\n    return current < moment().subtract(1, 'minutes')\n  }\n\n  const disabledEndDate: RangePickerProps['disabledDate'] = (current) => {\n    return (\n      (current && current > moment(startTime).add(7, 'days')) ||\n      current < moment()\n    )\n  }\n\n  const disabled =\n    !mint ||\n    !amount ||\n    !stableMint ||\n    !projectInfo.baseAmount ||\n    !projectInfo.category.length ||\n    !startTime ||\n    !endTime ||\n    !startPrice ||\n    !endPrice\n\n  return (\n    <Row gutter={[20, 20]}>\n      {/* Your token */}\n      <Col span={24}>\n        <SpaceVertical\n          label={\n            <Row justify=\"space-between\">\n              <Col>\n                <Typography.Text>Your token</Typography.Text>\n              </Col>\n              <Col>\n                <Typography.Text\n                  onClick={() => onChange('amount', balance)}\n                  style={{ cursor: 'pointer' }}\n                  className=\"caption\"\n                  type=\"secondary\"\n                >\n                  Available: {util.numeric(balance).format('0,0.[0000]')}\n                </Typography.Text>\n              </Col>\n            </Row>\n          }\n        >\n          <Row gutter={[12, 12]}>\n            <Col span={12}>\n              <MintSelection\n                style={{\n                  background: theme === 'dark' ? '#142042' : '#e6eaf5',\n                  width: '100%',\n                  textAlign: 'left',\n                  height: 40,\n                  paddingLeft: 12,\n                }}\n                value={mint}\n                placeholder=\"Select a token\"\n                onChange={(val) => onChange('mint', val)}\n              />\n            </Col>\n            <Col span={12}>\n              <InputNumber\n                onChange={(val) => onChange('amount', val)}\n                value={amount ? amount : undefined}\n                placeholder=\"Input total raise\"\n              />\n            </Col>\n          </Row>\n        </SpaceVertical>\n      </Col>\n\n      {/* Purchase token */}\n      <Col span={24}>\n        <SpaceVertical\n          label={\n            <Space direction=\"vertical\">\n              <Typography.Text>Purchase token</Typography.Text>\n              <Typography.Text className=\"caption\" type=\"secondary\">\n                Should be a stablecoin\n              </Typography.Text>\n            </Space>\n          }\n        >\n          <Row gutter={[12, 12]}>\n            <Col span={12}>\n              <MintSelection\n                style={{\n                  width: '100%',\n                  textAlign: 'left',\n                  height: 40,\n                  paddingLeft: 12,\n                  background: theme === 'dark' ? '#142042' : '#e6eaf5',\n                }}\n                placeholder=\"Select a token\"\n                value={stableMint}\n                onChange={(val) => onChange('stableMint', val)}\n              />\n            </Col>\n            <Col span={12}>\n              <InputNumber\n                placeholder=\"Input fundraising goal\"\n                onChange={(val) => onChangeProjectInfo('baseAmount', val)}\n                value={\n                  projectInfo.baseAmount ? projectInfo.baseAmount : undefined\n                }\n              />\n            </Col>\n          </Row>\n        </SpaceVertical>\n      </Col>\n\n      {/* Category */}\n      <Col span={24}>\n        <SpaceVertical\n          label={\n            <Space direction=\"vertical\">\n              <Typography.Text>Type of project</Typography.Text>\n              <Typography.Text className=\"caption\" type=\"secondary\">\n                E.g. defi, gamefi, lending, DAO... (maximum 4 tags)\n              </Typography.Text>\n            </Space>\n          }\n        >\n          <Select\n            className=\"select-category\"\n            mode=\"multiple\"\n            showArrow\n            style={{ width: '100%', paddingLeft: 8 }}\n            tagRender={tagRender}\n            placeholder=\"Select types\"\n            onChange={(categories) =>\n              onChangeProjectInfo('category', categories)\n            }\n          >\n            {Object.keys(CATEGORY).map((item) => (\n              <Select.Option\n                disabled={\n                  projectInfo.category.length >= 4 &&\n                  !projectInfo.category.includes(item)\n                }\n                key={item}\n              >\n                {item}\n              </Select.Option>\n            ))}\n          </Select>\n        </SpaceVertical>\n      </Col>\n\n      {/* weights */}\n      <Col span={12}>\n        <SpaceVertical label=\"Start price\">\n          <InputNumber\n            placeholder=\"Input price\"\n            onChange={(val) => onChange('startPrice', val)}\n            value={startPrice ? startPrice : undefined}\n            className=\"input-price\"\n          />\n        </SpaceVertical>\n      </Col>\n      <Col span={12}>\n        <SpaceVertical label=\"Floor price\">\n          <InputNumber\n            placeholder=\"Input price\"\n            onChange={(val) => onChange('endPrice', val)}\n            value={endPrice ? endPrice : undefined}\n            className=\"input-price\"\n          />\n        </SpaceVertical>\n      </Col>\n\n      {/* Time */}\n      <Col span={12}>\n        <SpaceVertical label=\"Start Time\">\n          <DatePicker\n            placeholder=\"Select time\"\n            suffixIcon={<IonIcon name=\"time-outline\" />}\n            className=\"date-option\"\n            onChange={(date) => onChange('startTime', date?.valueOf() || 0)}\n            clearIcon={null}\n            value={startTime ? moment(startTime) : moment(Date.now())}\n            showTime={{ showSecond: false }}\n            placement=\"bottomRight\"\n            format={DATE_FORMAT}\n            disabledDate={disabledStartDate}\n          />\n        </SpaceVertical>\n      </Col>\n      <Col span={12}>\n        <SpaceVertical label=\"End Time\">\n          <DatePicker\n            placeholder=\"Select time\"\n            suffixIcon={<IonIcon name=\"time-outline\" />}\n            className=\"date-option\"\n            onChange={(date) => onChange('endTime', date?.valueOf() || 0)}\n            clearIcon={null}\n            value={endTime ? moment(endTime) : moment(Date.now())}\n            showTime={{ showSecond: false }}\n            placement=\"bottomRight\"\n            format={DATE_FORMAT}\n            disabledDate={disabledEndDate}\n          />\n        </SpaceVertical>\n      </Col>\n\n      {/* Chart */}\n      <Col span={24}>\n        <Row gutter={[8, 8]}>\n          <Col span={24}>\n            <Typography.Text>Preview</Typography.Text>\n          </Col>\n          <Col span={24}>\n            <LaunchpadChartInit\n              startTime={startTime}\n              endTime={endTime}\n              startPrice={startPrice}\n              endPrice={endPrice}\n              mint={mint}\n              baseMint={stableMint}\n              balanceA={amount}\n              balanceB={projectInfo.baseAmount}\n            />\n          </Col>\n        </Row>\n      </Col>\n\n      {/* Action */}\n      <Col span={24} style={{ marginTop: 12 }}>\n        <Row gutter={[12, 12]}>\n          <Col span={12}>\n            <Button\n              onClick={() => setStep(InitLaunchpadStep.projectPhoto)}\n              block\n              ghost\n              size=\"large\"\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={12}>\n            <Button\n              disabled={disabled}\n              onClick={onCreate}\n              block\n              type=\"primary\"\n              size=\"large\"\n              loading={loading}\n            >\n              Create\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Configuration\n","import { useMemo, useState } from 'react'\nimport { createGlobalState } from 'react-use'\n\nimport { Card, Col, Row, Steps } from 'antd'\nimport ProjectInfo from './projectInfo'\nimport ProjectPhoto from './projectPhoto'\nimport Configuration from './configuration'\n\nimport { InitLaunchpadStep, Launchpad, ProjectInfoData } from 'constant'\n\nimport './index.less'\n\nconst DEFAULT_INFO: ProjectInfoData = {\n  projectName: '',\n  description: '',\n  website: '',\n  github: '',\n  whitepaper: '',\n  vCs: [{ logo: '', link: '' }],\n  socials: [''],\n  coverPhoto: '',\n  category: [],\n  baseAmount: 0,\n}\n\nexport const DEFAULT_LAUNCHPAD: Launchpad = {\n  projectInfo: DEFAULT_INFO,\n  mint: '',\n  stableMint: '',\n  amount: 0,\n  fee: 0,\n  startPrice: 0,\n  endPrice: 0,\n  startTime: Date.now(), //now\n  endTime: Date.now() + 3 * (24 * 60 * 60 * 1000), // Add more 3 days\n}\n\nexport const useGlobalLaunchpad =\n  createGlobalState<Launchpad>(DEFAULT_LAUNCHPAD)\n\nconst InitLaunchPad = () => {\n  const [step, setStep] = useState(InitLaunchpadStep.projectInfo)\n\n  const processInit = useMemo(() => {\n    switch (step) {\n      case InitLaunchpadStep.projectInfo:\n        return <ProjectInfo setStep={setStep} />\n      case InitLaunchpadStep.projectPhoto:\n        return <ProjectPhoto setStep={setStep} />\n      case InitLaunchpadStep.configuration:\n        return <Configuration setStep={setStep} />\n    }\n  }, [step])\n\n  return (\n    <Row justify=\"center\">\n      <Col xs={24} sm={20} md={18} lg={12}>\n        <Card style={{ marginBottom: 24 }}>\n          <Row gutter={[32, 32]}>\n            <Col span={24}>\n              <Steps size=\"small\" current={step} direction=\"horizontal\">\n                <Steps.Step title=\"Project info\" />\n                <Steps.Step title=\"Cover photo\" />\n                <Steps.Step title=\"Configuration\" />\n              </Steps>\n            </Col>\n            <Col span={24}>{processInit}</Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InitLaunchPad\n","import { useSelector } from 'react-redux'\n\nimport { AppState } from 'model'\nimport { useLaunchpad } from './useLaunchpad'\n\nexport const usePoolData = (launchpadAddress: string) => {\n  const launchpadData = useLaunchpad(launchpadAddress)!\n  const poolData = useSelector(\n    (state: AppState) => state.pools[launchpadData.pool.toBase58()],\n  )\n  return poolData\n}\n","import { useCallback, useState } from 'react'\nimport { useDebounce } from 'react-use'\nimport { useGetMintDecimals, util } from '@sentre/senhub'\nimport { BN } from '@project-serum/anchor'\nimport { utilsBN } from '@sen-use/web3'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport MintInput from 'components/mintInput'\nimport { MintAmount, MintAvatar, MintSymbol } from '@sen-use/app'\n\nimport { useBuyToken } from 'hooks/launchpad/actions/useBuyToken'\nimport { useWrapAccountBalance } from 'hooks/useWrapAccountBalance'\nimport { useLaunchpadWeights } from 'hooks/launchpad/useLaunchpadWeights'\nimport { useLaunchpad } from 'hooks/launchpad/useLaunchpad'\nimport { usePoolData } from 'hooks/launchpad/usePoolData'\nimport { calcOutGivenInSwap } from 'helper/oracles'\n\nconst BuyToken = ({ launchpadAddress }: { launchpadAddress: string }) => {\n  const [amount, setAmount] = useState(0)\n  const [askAmount, setAskAmount] = useState(new BN(0))\n\n  const launchpadData = useLaunchpad(launchpadAddress)!\n  const poolData = usePoolData(launchpadAddress)!\n  const { onBuyToken, loading } = useBuyToken()\n  const { balance } = useWrapAccountBalance(launchpadData.stableMint.toBase58())\n  const currentWeights = useLaunchpadWeights(launchpadAddress, 5000)\n  const getMintDecimals = useGetMintDecimals()\n  const isStarted = Date.now() / 1000 > launchpadData.startTime.toNumber()\n\n  const handleBuyToken = () => {\n    if (!amount) return\n    onBuyToken({\n      amount,\n      launchpadAddress,\n    })\n  }\n\n  const syncsAskAmount = useCallback(async () => {\n    const bidDecimals = await getMintDecimals({\n      mintAddress: launchpadData.stableMint.toBase58(),\n    })\n    const bidAmount = utilsBN.decimalize(amount, bidDecimals!)\n    const totalWeights = currentWeights[0] + currentWeights[1]\n    const askAmount = calcOutGivenInSwap(\n      bidAmount,\n      poolData.reserves[0],\n      poolData.reserves[1],\n      currentWeights[0] / totalWeights,\n      currentWeights[1] / totalWeights,\n      poolData.fee.add(poolData.taxFee),\n    )\n\n    return setAskAmount(askAmount)\n  }, [\n    amount,\n    currentWeights,\n    getMintDecimals,\n    launchpadData.stableMint,\n    poolData,\n  ])\n  useDebounce(syncsAskAmount, 500, [syncsAskAmount])\n\n  return (\n    <Card>\n      <Row gutter={[24, 24]}>\n        {/* Ask amount */}\n        <Col span={24}>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Typography.Text type=\"secondary\">You pay</Typography.Text>\n            <Card\n              bordered={false}\n              className=\"card-swap\"\n              bodyStyle={{ padding: 0 }}\n            >\n              <MintInput\n                amount={amount}\n                selectedMint={launchpadData.stableMint.toBase58()}\n                onChangeAmount={(val) => setAmount(Number(val))}\n                mintSelection={\n                  <Space className=\"mint-display\">\n                    <MintAvatar mintAddress={launchpadData.stableMint} />\n                    <MintSymbol mintAddress={launchpadData.stableMint} />\n                  </Space>\n                }\n              />\n            </Card>\n          </Space>\n        </Col>\n        {/* Bid amount */}\n        <Col span={24}>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Typography.Text type=\"secondary\">You receive</Typography.Text>\n            <Row align=\"middle\">\n              <Col flex=\"auto\">\n                <Space className=\"mint-display\">\n                  <MintAvatar mintAddress={launchpadData.mint} />\n                  <MintSymbol mintAddress={launchpadData.mint} />\n                </Space>\n              </Col>\n              <Col>\n                <Typography.Title level={3}>\n                  <MintAmount\n                    mintAddress={launchpadData.mint}\n                    amount={askAmount}\n                  />\n                </Typography.Title>\n              </Col>\n            </Row>\n          </Space>\n        </Col>\n\n        <Col span={24}>\n          <Row align=\"middle\">\n            <Col flex=\"auto\">\n              <Typography.Text type=\"secondary\">Rate</Typography.Text>\n            </Col>\n            <Col>\n              <Typography.Text>\n                <Space>\n                  <Typography.Text>1</Typography.Text>\n                  <MintSymbol mintAddress={launchpadData.mint} />\n                  <Typography.Text>=</Typography.Text>\n                  <MintAmount\n                    mintAddress={launchpadData.mint}\n                    amount={askAmount}\n                    formatter={(val) => {\n                      return util\n                        .numeric(\n                          !Number(val) ? 0 : Number(amount) / Number(val),\n                        )\n                        .format('0.[0000]')\n                    }}\n                  />\n                  <MintSymbol mintAddress={launchpadData.stableMint} />\n                </Space>\n              </Typography.Text>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            size=\"large\"\n            type=\"primary\"\n            block\n            onClick={handleBuyToken}\n            loading={loading}\n            disabled={!amount || amount > balance || !isStarted}\n          >\n            Purchase\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default BuyToken\n","import { useCallback, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { getAnchorProvider, useGetMintDecimals } from '@sentre/senhub'\nimport { web3, BN } from '@project-serum/anchor'\nimport { utilsBN } from '@sen-use/web3'\n\nimport { AppState } from 'model'\nimport { notifyError } from 'helper'\n\ntype BuyTokenProps = {\n  launchpadAddress: string\n  amount: number\n  limit?: BN\n}\n\nexport const useBuyToken = () => {\n  // const { printBaseMint, buyLaunchpad } = useLaunchpad()\n  const [loading, setLoading] = useState(false)\n  const launchpads = useSelector((state: AppState) => state.launchpads)\n  const getMintDecimals = useGetMintDecimals()\n\n  const onBuyToken = useCallback(\n    async (props: BuyTokenProps) => {\n      try {\n        setLoading(true)\n        const { launchpadAddress, amount, limit } = props\n        const launchpadData = launchpads[launchpadAddress]\n        const launchpad = new web3.PublicKey(launchpadAddress)\n        const cheque = web3.Keypair.generate()\n        const trans = new web3.Transaction()\n        const decimals =\n          (await getMintDecimals({\n            mintAddress: launchpadData.mint.toBase58(),\n          })) || 0\n        const bnAmount = utilsBN.decimalize(amount, decimals)\n\n        const txPrint = await window.launchpad.printBaseMint({\n          launchpad,\n          amount: bnAmount,\n          sendAndConfirm: false,\n          cheque,\n        })\n\n        trans.add(txPrint.tx)\n\n        const txBuy = await window.launchpad.buyLaunchpad({\n          launchpad,\n          bidAmount: bnAmount,\n          limit,\n          cheque: cheque.publicKey,\n          sendAndConfirm: false,\n        })\n        trans.add(txBuy.tx)\n\n        const provider = getAnchorProvider()!\n        provider.opts.skipPreflight = true\n        await provider.sendAndConfirm(trans, txPrint.signers)\n\n        return window.notify({\n          type: 'success',\n          description: 'Bought token successfully!',\n        })\n      } catch (error) {\n        notifyError(error)\n      } finally {\n        setLoading(false)\n      }\n    },\n    [getMintDecimals, launchpads],\n  )\n\n  return { onBuyToken, loading }\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport moment from 'moment'\nimport { utilsBN } from '@sen-use/web3'\nimport ReactEChartsCore from 'echarts-for-react/lib/core'\nimport * as echarts from 'echarts/core'\nimport {\n  GridComponent,\n  TitleComponent,\n  LegendComponent,\n  TooltipComponent,\n} from 'echarts/components'\nimport { CanvasRenderer } from 'echarts/renderers'\nimport { LineChart } from 'echarts/charts'\nimport { tokenProvider, useTheme, util } from '@sentre/senhub'\n\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\nimport { useGetPriceInPool } from 'hooks/launchpad/useGetTokenInPoolPrice'\nimport { useGetLaunchpadWeight } from 'hooks/launchpad/useGetLaunchpadWeight'\nimport { useGetBalanceAtTime } from 'hooks/launchpad/useGetBalanceAtTime'\n\necharts.use([\n  TitleComponent,\n  GridComponent,\n  LineChart,\n  CanvasRenderer,\n  LegendComponent,\n  TooltipComponent,\n])\n\ntype LaunchpadLineChartProps = {\n  launchpadAddress: string\n}\nconst MILESTONES = 20\n\nconst STYLE = {\n  light: {\n    color: '#081438',\n    lineColor: '#CED0D7',\n  },\n  dark: {\n    color: '#F3F3F5',\n    lineColor: '#394360',\n  },\n}\n\ntype Price = null | number\n\nconst getTimes = (starTime: number, endTime: number) => {\n  const result: number[] = []\n  const blockTime = (endTime - starTime) / MILESTONES\n  for (let i = 0; i <= MILESTONES; i++) {\n    if (i === 0) {\n      result[i] = starTime\n      continue\n    }\n    const time = result[result.length - 1] + blockTime\n    result[i] = time\n  }\n  return result\n}\n\nconst buildOptions = (\n  value: { currentResult: Price[]; estimateResult: Price[] },\n  durations: number[],\n  style: { color: string; lineColor: string },\n) => {\n  const xAxis = durations.map((time) => moment(time).format('DD/MM HH:mm'))\n\n  return {\n    legend: {\n      data: ['Real price', 'Estimated price'],\n      textStyle: {\n        color: style.color,\n      },\n    },\n    tooltip: {\n      // Means disable default \"show/hide rule\".\n      trigger: 'item',\n      formatter: function (params: any) {\n        return `<div style=\"min-width: 150px; font-weight: 400\"><span style=\"display: flex; justify-content: space-between\"><span style=\"font-size: 14px, font-weight: 400\">Price:</span> <span style=\"font-size: 16px; font-weight: 700\">$${util\n          .numeric(params.value)\n          .format(\n            '0,0.[000]',\n          )}</span></span> <span style=\"display: flex; justify-content: space-between;\"><span style=\"font-size: 14px; font-weight: 400\">Date:</span> <span style=\"font-size: 16px; font-weight: 700\">${\n          params.name\n        }</span></span></div>`\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: xAxis,\n      axisLine: {\n        lineStyle: {\n          color: style.color,\n        },\n      },\n    },\n    yAxis: {\n      type: 'value',\n      axisLine: {\n        lineStyle: {\n          color: style.color,\n        },\n      },\n      splitLine: {\n        lineStyle: {\n          // Dark and light colors will be used in turns\n          color: [style.lineColor],\n        },\n      },\n    },\n    series: [\n      {\n        name: 'Estimated price',\n        data: value.estimateResult,\n        type: 'line',\n        smooth: true,\n        lineStyle: {\n          normal: {\n            width: 2,\n            type: 'dashed',\n          },\n        },\n      },\n      {\n        name: 'Real price',\n        data: value.currentResult,\n        type: 'line',\n        smooth: true,\n        lineStyle: {\n          normal: {\n            width: 2,\n          },\n        },\n      },\n    ],\n  }\n}\n\nconst LaunchpadLineChart = ({ launchpadAddress }: LaunchpadLineChartProps) => {\n  const [stablePrice, setStablePrice] = useState(0)\n  const { launchpadData } = useLaunchpadData(launchpadAddress)\n  const calcPriceInPool = useGetPriceInPool()\n  const getLaunchpadWeight = useGetLaunchpadWeight()\n  const getBalanceAtTime = useGetBalanceAtTime()\n  const theme = useTheme()\n\n  const durations = useMemo(() => {\n    const { startTime, endTime } = launchpadData\n    const times = getTimes(\n      startTime.toNumber() * 1000,\n      endTime.toNumber() * 1000,\n    )\n    return times\n  }, [launchpadData])\n\n  const currentValue = useMemo(() => {\n    const currentResult: Price[] = []\n    const estimateResult: Price[] = []\n    for (const time of durations) {\n      const weights = getLaunchpadWeight(time, launchpadAddress)\n      const balances = getBalanceAtTime(launchpadAddress, time)\n      const price = calcPriceInPool(\n        utilsBN.decimalize(weights[0], 9),\n        balances[0],\n        stablePrice,\n        balances[1],\n        utilsBN.decimalize(weights[1], 9),\n      )\n      if (time >= Date.now()) {\n        estimateResult.push(price)\n        currentResult.push(null)\n      } else {\n        currentResult.push(price)\n        estimateResult.push(null)\n      }\n    }\n\n    //Format data\n    let lastVal = 0\n    for (let i = 0; i < currentResult.length; i++) {\n      if (currentResult[i]) continue\n      lastVal = currentResult[i - 1] || 0\n      break\n    }\n\n    for (let i = 0; i < estimateResult.length; i++) {\n      if (!estimateResult[i]) continue\n      estimateResult[i - 1] = lastVal\n      break\n    }\n    return { currentResult, estimateResult }\n  }, [\n    calcPriceInPool,\n    durations,\n    getBalanceAtTime,\n    getLaunchpadWeight,\n    launchpadAddress,\n    stablePrice,\n  ])\n\n  useEffect(() => {\n    ;(async () => {\n      if (stablePrice || !launchpadAddress) return\n      const price = await tokenProvider.getPrice(launchpadData.stableMint)\n      if (!price) return setStablePrice(0)\n      return setStablePrice(price)\n    })()\n  }, [launchpadAddress, launchpadData.stableMint, stablePrice])\n\n  return (\n    <ReactEChartsCore\n      echarts={echarts}\n      option={buildOptions(currentValue, durations, STYLE[theme])}\n      notMerge={true}\n      lazyUpdate={true}\n    />\n  )\n}\n\nexport default LaunchpadLineChart\n","import { BN } from '@project-serum/anchor'\n\nimport { MintAmount, MintSymbol } from '@sen-use/app'\nimport { Space } from 'antd'\n\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\n\ntype ColumnAmountProps = {\n  launchpadAddress: string\n  amount: BN\n  isBaseAmount?: boolean\n}\n\nconst ColumnAmount = ({\n  launchpadAddress,\n  amount,\n  isBaseAmount = false,\n}: ColumnAmountProps) => {\n  const {\n    launchpadData: { stableMint, mint },\n  } = useLaunchpadData(launchpadAddress)\n  const mintAddress = isBaseAmount ? stableMint : mint\n\n  return (\n    <Space>\n      <MintAmount amount={amount} mintAddress={mintAddress} />\n      <MintSymbol mintAddress={mintAddress} />\n    </Space>\n  )\n}\n\nexport default ColumnAmount\n","import moment from 'moment'\nimport { util } from '@sentre/senhub'\nimport { BN, web3 } from '@project-serum/anchor'\n\nimport { Typography } from 'antd'\nimport ColumnAmount from './columnAmount'\n\nimport { DATE_FORMAT } from 'constant'\nimport { ChequeData } from '@sentre/launchpad'\n\nexport const TRANS_HISTORY_COLUMN = [\n  {\n    title: 'TIME',\n    dataIndex: 'createAt',\n    render: (createAt: BN) => (\n      <Typography.Text>\n        {moment(createAt.toNumber() * 1000).format(DATE_FORMAT)}\n      </Typography.Text>\n    ),\n  },\n  {\n    title: 'ACCOUNT',\n    dataIndex: 'authority',\n    render: (authority: web3.PublicKey) => (\n      <Typography.Text\n        underline\n        onClick={() =>\n          window.open(util.explorer(authority.toBase58()), '_blank')\n        }\n        style={{ cursor: 'pointer' }}\n        type=\"success\"\n      >\n        {util.shortenAddress(authority.toBase58())}\n      </Typography.Text>\n    ),\n  },\n  {\n    title: 'PAY',\n    dataIndex: 'bidAmount',\n    render: (bidAmount: BN, { launchpad }: ChequeData) => (\n      <ColumnAmount\n        amount={bidAmount}\n        launchpadAddress={launchpad.toBase58()}\n        isBaseAmount\n      />\n    ),\n  },\n  {\n    title: 'RECEIVE',\n    dataIndex: 'askAmount',\n    render: (askAmount: BN, { launchpad }: ChequeData) => (\n      <ColumnAmount\n        amount={askAmount}\n        launchpadAddress={launchpad.toBase58()}\n      />\n    ),\n  },\n]\n","import { useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Button, Col, Row, Table, Typography } from 'antd'\n\nimport { TRANS_HISTORY_COLUMN } from './column'\nimport { useCheques } from 'hooks/launchpad/useCheques'\nimport { AppState } from 'model'\n\nconst ROW_PER_PAGE = 4\n\ntype TransHistoryProps = {\n  launchpadAddress: string\n}\n\nconst TransHistory = ({ launchpadAddress }: TransHistoryProps) => {\n  const [pageSize, setPageSize] = useState(ROW_PER_PAGE)\n  const cheques = useSelector((state: AppState) => state.cheques)\n  const ownCheques = useCheques(launchpadAddress)\n\n  const historyData = useMemo(\n    () =>\n      ownCheques\n        .map((address) => cheques[address])\n        .sort((a, b) => {\n          return b.createAt.toNumber() - a.createAt.toNumber()\n        }),\n    [cheques, ownCheques],\n  )\n  return (\n    <Row gutter={[0, 16]}>\n      <Col span={24}>\n        <Typography.Title level={5}>Recent transactions</Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Table\n          columns={TRANS_HISTORY_COLUMN}\n          dataSource={historyData.slice(0, pageSize)}\n          rowKey={(record) => record.createAt.toString()}\n          pagination={false}\n          rowClassName={(_, index) => (index % 2 ? 'odd-row' : 'even-row')}\n        />\n      </Col>\n      <Col span={24} style={{ textAlign: 'center' }}>\n        <Button\n          disabled={pageSize >= historyData.length}\n          onClick={() => setPageSize(pageSize + ROW_PER_PAGE)}\n          ghost\n        >\n          View more\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default TransHistory\n","import { useTheme, util } from '@sentre/senhub'\n\nimport { Card, Col, Row, Space, Tooltip, Typography } from 'antd'\nimport LaunchpadProfile from 'view/launchpad/components/launchpadProfile'\nimport LaunchpadLineChart from 'view/launchpad/launchpadLineChart'\nimport TransHistory from './transHistory'\n\nimport { LaunchpadCardProps } from 'view/launchpad/components/launchpadCard'\nimport { useTokenPrice } from 'hooks/launchpad/useTokenPrice'\nimport { useAVGPrice } from 'hooks/launchpad/useAVGPrice'\nimport IonIcon from '@sentre/antd-ionicon'\n\nconst LaunchpadInfo = ({ launchpadAddress }: LaunchpadCardProps) => {\n  const theme = useTheme()\n  const mintPrice = useTokenPrice(launchpadAddress)\n  const avgPrice = useAVGPrice(launchpadAddress)\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <LaunchpadProfile launchpadAddress={launchpadAddress} />\n      </Col>\n      <Col span={24}>\n        <Card\n          bordered={false}\n          style={{\n            background: theme === 'dark' ? '#394360' : '#ffffff',\n            borderRadius: 20,\n          }}\n          bodyStyle={{ padding: '12px 16px' }}\n        >\n          <Row align=\"middle\">\n            <Col span={12}>\n              <Space direction=\"vertical\">\n                <Typography.Text type=\"secondary\">Token price</Typography.Text>\n                <Typography.Title level={4} type=\"success\">\n                  ${util.numeric(mintPrice).format('0,0.[000]')}\n                </Typography.Title>\n              </Space>\n            </Col>\n            <Col span={12}>\n              <Space direction=\"vertical\">\n                <Typography.Text type=\"secondary\">\n                  <Space className=\"align-middle-icon\" align=\"center\">\n                    Avg. purchase price\n                    <Tooltip title=\"This price is based on the average of all purchased users.\">\n                      <IonIcon\n                        name=\"information-circle-outline\"\n                        style={{ fontSize: 24 }}\n                      />\n                    </Tooltip>\n                  </Space>\n                </Typography.Text>\n                <Typography.Title level={4} type=\"success\">\n                  ${util.numeric(avgPrice).format('0,0.[000]')}\n                </Typography.Title>\n              </Space>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col span={24}>\n        <LaunchpadLineChart launchpadAddress={launchpadAddress} />\n      </Col>\n      <Col span={24}>\n        <TransHistory launchpadAddress={launchpadAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default LaunchpadInfo\n","import { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { useCheques } from './useCheques'\nimport { AppState } from 'model'\n\nexport const useAVGPrice = (launchpadAddress: string) => {\n  const cheques = useSelector((state: AppState) => state.cheques)\n  const filteredCheques = useCheques(launchpadAddress)\n\n  const getPrice = useCallback(\n    (chequeAddress: string) => {\n      const { askAmount, bidAmount } = cheques[chequeAddress]\n      if (!askAmount.toNumber()) return 0\n      return bidAmount.toNumber() / askAmount.toNumber()\n    },\n    [cheques],\n  )\n\n  const avgPrice = useMemo(() => {\n    if (!filteredCheques.length) return 0\n    let totalPrice = 0\n    for (const chequeAddress of filteredCheques)\n      totalPrice += getPrice(chequeAddress)\n\n    return totalPrice / filteredCheques.length\n  }, [filteredCheques, getPrice])\n\n  return avgPrice\n}\n","import { useMemo, useState } from 'react'\nimport { web3, BN } from '@project-serum/anchor'\nimport { getAnchorProvider } from '@sentre/senhub'\nimport { MintAmount, MintAvatar, MintSymbol, notifyError } from '@sen-use/app'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { notifySuccess } from 'helper'\nimport { usePoolData } from 'hooks/launchpad/usePoolData'\nimport { useLaunchpad } from 'hooks/launchpad/useLaunchpad'\nimport { useLptSupply } from 'hooks/useLptSupply'\n\ntype ManagementProps = {\n  launchpadAddress: string\n}\n\nconst Management = ({ launchpadAddress }: ManagementProps) => {\n  const [loading, setLoading] = useState(false)\n  const launchpadData = useLaunchpad(launchpadAddress)!\n  const poolData = usePoolData(launchpadAddress)\n  const { supply } = useLptSupply(poolData.mintLpt)\n\n  const completed = Date.now() / 1000 >= launchpadData.endTime.toNumber()\n\n  const assets = useMemo(() => {\n    const { stableMint, mint } = launchpadData\n    const { reserves } = poolData\n    const stableAmount = reserves[1].gt(launchpadData.startReserves[1])\n      ? reserves[1].sub(launchpadData.startReserves[1])\n      : new BN(0)\n\n    return [\n      { mint, amount: reserves[0] },\n      {\n        mint: stableMint,\n        amount: stableAmount,\n      },\n    ]\n  }, [launchpadData, poolData])\n\n  const onWithdraw = async () => {\n    setLoading(true)\n    try {\n      let { tx } = await window.launchpad.claim({\n        launchpad: new web3.PublicKey(launchpadAddress),\n        sendAndConfirm: false,\n      })\n      const { transaction } =\n        await window.balansol.createRemoveLiquidityTransaction(\n          launchpadData.pool,\n          supply,\n        )\n\n      const provider = getAnchorProvider()!\n      const txId = await provider.sendAndConfirm(tx.add(transaction))\n      notifySuccess('Withdraw', txId)\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[0, 16]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text type=\"secondary\">\n            <IonIcon name=\"information-circle-outline\" />\n          </Typography.Text>\n          <Typography.Text type=\"secondary\" className=\"caption\">\n            The launchpad had completed, you can withdraw your tokens.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text type=\"secondary\" className=\"caption\">\n            Your Assets\n          </Typography.Text>\n          <Row>\n            {assets.map(({ mint, amount }) => (\n              <Col span={12} key={mint.toBase58()}>\n                <Space>\n                  <MintAvatar mintAddress={mint.toBase58()} />\n                  <MintAmount amount={amount} mintAddress={mint} />\n                  <MintSymbol mintAddress={mint} />\n                </Space>\n              </Col>\n            ))}\n          </Row>\n        </Space>\n      </Col>\n      <Col span={24} />\n      <Col span={24}>\n        <Button\n          block\n          type=\"primary\"\n          size=\"large\"\n          onClick={onWithdraw}\n          loading={loading}\n          disabled={!completed || assets[0].amount.isZero()}\n        >\n          Withdraw\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Management\n","import IonIcon from '@sentre/antd-ionicon'\nimport { Divider, Space, Typography } from 'antd'\nimport { validURL } from 'helper'\n\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\n\nconst Resource = ({ launchpadAddress }: { launchpadAddress: string }) => {\n  const { metadata } = useLaunchpadData(launchpadAddress)\n\n  const onRedirect = (url?: string) => {\n    if (!url || !validURL(url)) return\n    return window.open(url, '_blank')\n  }\n\n  return (\n    <Space style={{ cursor: 'pointer' }}>\n      <Space onClick={() => onRedirect(metadata?.website)}>\n        <IonIcon name=\"globe-outline\" />\n        <Typography.Text>Website</Typography.Text>\n        <Divider\n          style={{ borderColor: '#D3D3D6', margin: 2 }}\n          type=\"vertical\"\n        />\n      </Space>\n      <Space onClick={() => onRedirect(metadata?.whitepaper)}>\n        <IonIcon name=\"book-outline\" />\n        <Typography.Text>Whitepaper</Typography.Text>\n        <Divider\n          style={{ borderColor: '#D3D3D6', margin: 2 }}\n          type=\"vertical\"\n        />\n      </Space>\n      <Space onClick={() => onRedirect(metadata?.github)}>\n        <IonIcon name=\"logo-github\" />\n        <Typography.Text>Github</Typography.Text>\n      </Space>\n    </Space>\n  )\n}\n\nexport default Resource\n","import { useCallback, useEffect, useState } from 'react'\nimport { useGetMintData } from '@sentre/senhub'\nimport { BN } from '@project-serum/anchor'\n\n/**\n * Get token's total supply. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintSupply = (mintAddress: string) => {\n  const [supply, setSupply] = useState<BN | undefined>(undefined)\n  const getMint = useGetMintData()\n\n  const fetchSupply = useCallback(async () => {\n    try {\n      const {\n        [mintAddress]: { supply },\n      } = (await getMint({ mintAddress })) || {}\n      return setSupply(new BN(supply.toString()))\n    } catch (er: any) {\n      return setSupply(undefined)\n    }\n  }, [mintAddress, getMint])\n\n  useEffect(() => {\n    fetchSupply()\n  }, [fetchSupply])\n\n  return supply\n}\n\nexport default useMintSupply\n","import moment from 'moment'\nimport { util } from '@sentre/senhub'\nimport { BN } from '@project-serum/anchor'\n\nimport { Avatar, Col, Divider, Row, Space, Typography } from 'antd'\nimport { MintAmount, MintName, MintSymbol } from '@sen-use/app'\nimport Resource from './resource'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { DATE_FORMAT } from 'constant'\nimport useMintSupply from 'shared/hooks/useMintSupply'\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\nimport { getDataWebsite, validURL } from 'helper'\n\nconst ProjectInfo = ({ launchpadAddress }: { launchpadAddress: string }) => {\n  const { metadata, launchpadData } = useLaunchpadData(launchpadAddress)\n  const mintAddress = launchpadData.mint.toBase58()\n  const tokenSupply = useMintSupply(mintAddress)\n\n  const onRedirect = (url?: string) => {\n    if (!url || !validURL(url)) return\n    return window.open(url, '_blank')\n  }\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Resource launchpadAddress={launchpadAddress} />\n      </Col>\n\n      {/* Description */}\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Title level={5}>Description</Typography.Title>\n          <Typography.Paragraph style={{ margin: 0 }}>\n            {metadata?.description}\n          </Typography.Paragraph>\n        </Space>\n      </Col>\n\n      {/* Token info */}\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Title level={5}>Token information</Typography.Title>\n\n          <Space direction=\"vertical\">\n            <Typography.Text>\n              <span style={{ color: '#9CA1AF' }}>Token Name: </span>\n              <MintName mintAddress={mintAddress} /> (\n              <MintSymbol mintAddress={mintAddress} />)\n            </Typography.Text>\n            <Typography.Text\n              style={{ cursor: 'pointer' }}\n              onClick={() => window.open(util.explorer(mintAddress), '_blank')}\n            >\n              <span style={{ color: '#9CA1AF' }}>Token Address: </span>\n              {util.shortenAddress(mintAddress, 6)}\n            </Typography.Text>\n            <Typography.Text>\n              <span style={{ color: '#9CA1AF' }}>Token supply: </span>\n              <MintAmount\n                amount={tokenSupply || new BN(0)}\n                mintAddress={mintAddress}\n              />{' '}\n              (<MintSymbol mintAddress={mintAddress} />)\n            </Typography.Text>\n            <Typography.Text>\n              <span style={{ color: '#9CA1AF' }}>Launchpad supply: </span>\n              <MintAmount\n                amount={launchpadData.startReserves[0]}\n                mintAddress={mintAddress}\n              />{' '}\n              (<MintSymbol mintAddress={mintAddress} />)\n            </Typography.Text>\n            <Typography.Text>\n              <span style={{ color: '#9CA1AF' }}>Launchpad start time: </span>\n              {moment(launchpadData?.startTime.toNumber() * 1000).format(\n                DATE_FORMAT,\n              )}\n            </Typography.Text>\n            <Typography.Text>\n              <span style={{ color: '#9CA1AF' }}>Launchpad end time: </span>\n              {moment(launchpadData?.endTime.toNumber() * 1000).format(\n                DATE_FORMAT,\n              )}\n            </Typography.Text>\n          </Space>\n        </Space>\n      </Col>\n      {!!metadata && (\n        <Col span={24}>\n          <Space direction=\"vertical\">\n            <Typography.Title level={5}>Social media</Typography.Title>\n            <Space style={{ cursor: 'pointer' }}>\n              {metadata.socials.map((social, index) => {\n                if (!social) return null\n                const data = getDataWebsite(social)\n                return (\n                  <Space key={index} onClick={() => onRedirect(social)}>\n                    <IonIcon style={{ fontSize: 21 }} name={data?.iconName} />\n                    <Typography.Text>{data?.websiteName}</Typography.Text>\n                    {index !== metadata.socials.length - 1 && (\n                      <Divider\n                        style={{ borderColor: '#D3D3D6', margin: 2 }}\n                        type=\"vertical\"\n                      />\n                    )}\n                  </Space>\n                )\n              })}\n            </Space>\n          </Space>\n        </Col>\n      )}\n      {!!metadata && !!metadata.vCs.length && (\n        <Col span={24}>\n          <Space direction=\"vertical\">\n            <Typography.Title level={5}>\n              Leading venture capital\n            </Typography.Title>\n            <Space style={{ cursor: 'pointer' }}>\n              {metadata.vCs.map(({ link, logo }, index) => {\n                if (!link) return null\n                return (\n                  <Space key={index}>\n                    <Avatar size={21} src={logo} />\n                    <Typography.Text>{link}</Typography.Text>\n                    {index !== metadata.vCs.length - 1 && (\n                      <Divider\n                        style={{ borderColor: '#D3D3D6', margin: 2 }}\n                        type=\"vertical\"\n                      />\n                    )}\n                  </Space>\n                )\n              })}\n            </Space>\n          </Space>\n        </Col>\n      )}\n    </Row>\n  )\n}\n\nexport default ProjectInfo\n","import { useMemo } from 'react'\nimport { useWalletAddress } from '@sentre/senhub'\n\nimport { Card, Tabs } from 'antd'\nimport LaunchpadInfo from './launchpadInfo'\nimport Management from './management'\nimport ProjectInfo from './projectInfo'\n\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\n\nimport './index.less'\n\nconst Information = ({ launchpadAddress }: { launchpadAddress: string }) => {\n  const {\n    launchpadData: { authority },\n  } = useLaunchpadData(launchpadAddress)\n  const walletAddress = useWalletAddress()\n  const owner = walletAddress === authority.toBase58()\n\n  const tabItem = useMemo(() => {\n    const items = [\n      {\n        label: 'Launchpad info',\n        key: 'launchpad-info\"',\n        children: <LaunchpadInfo launchpadAddress={launchpadAddress} />,\n      },\n      {\n        label: 'Project info',\n        key: 'project-info',\n        children: <ProjectInfo launchpadAddress={launchpadAddress} />,\n      },\n    ]\n    if (!owner) return items\n\n    items.push({\n      label: 'Manage',\n      key: 'manage',\n      children: <Management launchpadAddress={launchpadAddress} />,\n    })\n\n    return items\n  }, [launchpadAddress, owner])\n\n  return (\n    <Card style={{ marginBottom: 24 }}>\n      <Tabs items={tabItem} />\n    </Card>\n  )\n}\n\nexport default Information\n","import { MintAmount, MintSymbol } from '@sen-use/app'\nimport { Button, Col, Row, Space, Tooltip, Typography } from 'antd'\n\nimport { utils, web3 } from '@project-serum/anchor'\nimport { useCallback, useEffect, useState } from 'react'\nimport { splt } from '@sentre/senhub'\n\nimport { notifySuccess } from 'helper'\nimport { useLaunchpad } from 'hooks/launchpad/useLaunchpad'\nimport { useParticipants } from 'hooks/launchpad/useParticipants'\nimport IonIcon from '@sentre/antd-ionicon'\n\ntype YourBoughtProps = {\n  launchpadAddress: string\n}\n\nconst YourBought = ({ launchpadAddress }: YourBoughtProps) => {\n  const [loading, setLoading] = useState(false)\n  const [claimed, setClaimed] = useState(true)\n  const launchpadData = useLaunchpad(launchpadAddress)\n  const completed = Number(launchpadData.endTime) < Date.now() / 1000\n  const { totalAsk } = useParticipants(launchpadAddress, true)\n\n  const onClaim = async () => {\n    setLoading(true)\n    try {\n      let { txId } = await window.launchpad.redeem({\n        launchpad: new web3.PublicKey(launchpadAddress),\n      })\n      notifySuccess('Claim', txId)\n      setClaimed(true)\n    } catch (error) {\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const fetchBalance = useCallback(async () => {\n    const master = await window.launchpad.deriveMasterAddress(launchpadAddress)\n    const treasury = await utils.token.associatedAddress({\n      mint: launchpadData.mint,\n      owner: master,\n    })\n    const accountData = await splt.getAccountData(treasury.toBase58())\n    setClaimed(!Number(accountData.amount.toString()))\n  }, [launchpadAddress, launchpadData.mint])\n\n  useEffect(() => {\n    fetchBalance()\n  }, [fetchBalance])\n\n  return (\n    <Row align=\"middle\">\n      <Col flex=\"auto\">\n        <Space className=\"align-middle-icon\">\n          <Typography.Text type=\"secondary\">Your bought</Typography.Text>\n          <Tooltip title=\"The tokens you bought will be locked while the launchpad is active, you can claim your tokens after it ends.\">\n            <IonIcon\n              style={{ color: '#9CA1AF', fontSize: 16 }}\n              name=\"information-circle-outline\"\n            />\n          </Tooltip>\n        </Space>\n      </Col>\n      <Col>\n        {!completed ? (\n          <Typography.Title level={3}>\n            <Space>\n              <MintAmount\n                mintAddress={launchpadData.mint}\n                amount={totalAsk}\n                formatter=\"0,0.[000]\"\n              />\n              <MintSymbol mintAddress={launchpadData?.mint.toBase58()} />\n            </Space>\n          </Typography.Title>\n        ) : (\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={onClaim}\n            loading={loading}\n            disabled={claimed}\n          >\n            <Space size={4}>\n              {claimed ? 'Claimed ' : 'Claim '}\n              <MintAmount\n                mintAddress={launchpadData.mint}\n                amount={totalAsk}\n                formatter=\"0,0.[000]\"\n              />\n              <MintSymbol mintAddress={launchpadData?.mint.toBase58()} />\n            </Space>\n          </Button>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default YourBought\n","import { Card, Col, Row, Typography } from 'antd'\nimport EndIn from 'view/launchpad/components/endIn'\nimport Sold from 'view/launchpad/components/sold'\nimport Fundraising from 'view/launchpad/components/fundraising'\nimport YourBought from 'view/launchpad/components/yourBought'\nimport { LaunchpadCardProps } from 'view/launchpad/components/launchpadCard'\nimport { useParticipants } from 'hooks/launchpad/useParticipants'\n\nconst Progress = ({ launchpadAddress }: LaunchpadCardProps) => {\n  const participants = useParticipants(launchpadAddress)\n\n  return (\n    <Card>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <YourBought launchpadAddress={launchpadAddress} />\n        </Col>\n        <Col span={24}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Text type=\"secondary\">Participants</Typography.Text>\n            </Col>\n            <Col>\n              <Typography.Text>{participants.totalUsers}</Typography.Text>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <EndIn launchpadAddress={launchpadAddress} />\n        </Col>\n        <Col span={24}>\n          <Sold launchpadAddress={launchpadAddress} />\n        </Col>\n        <Col span={24}>\n          <Fundraising isDetail launchpadAddress={launchpadAddress} />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Progress\n","import { Button, Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport BuyToken from './buyToken'\nimport Information from './information'\nimport Progress from './progress'\n\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport { useLaunchpadData } from 'hooks/launchpad/useLaunchpadData'\nimport PageNotFound from 'components/pageNotFound'\n\nconst LaunchpadDetails = () => {\n  const { pushHistory, getQuery } = useAppRouter()\n  const launchpadAddress = getQuery('launchpadAddress') || ''\n  const { launchpadData } = useLaunchpadData(launchpadAddress)\n  if (!launchpadData || !launchpadAddress)\n    return <PageNotFound label=\"launchpad\" redirect=\"/launchpad\" />\n\n  const completed = Number(launchpadData.endTime) < Date.now() / 1000\n\n  return (\n    <Row justify=\"center\">\n      <Col sm={24} xs={24} md={24} lg={18}>\n        <Row gutter={[0, 24]}>\n          <Col span={24}>\n            <Button\n              onClick={() => pushHistory('/launchpad')}\n              type=\"text\"\n              icon={<IonIcon name=\"chevron-back-outline\" />}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Row gutter={[24, 24]}>\n              <Col xs={24} md={14}>\n                <Information launchpadAddress={launchpadAddress} />\n              </Col>\n              <Col xs={24} md={10}>\n                <Row gutter={[0, 24]}>\n                  {!completed && (\n                    <Col span={24}>\n                      <BuyToken launchpadAddress={launchpadAddress} />\n                    </Col>\n                  )}\n                  <Col span={24}>\n                    <Progress launchpadAddress={launchpadAddress} />\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Col>\n          <Col span={24} />\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default LaunchpadDetails\n","import { Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport LaunchpadCard from './components/launchpadCard'\n\nimport { useAppRouter } from 'hooks/useAppRouter'\nimport { useYourPurchased } from 'hooks/launchpad/useYourPurchased'\n\nimport './index.less'\n\nconst YourPurchased = () => {\n  const { pushHistory } = useAppRouter()\n  const launchpads = useYourPurchased()\n\n  return (\n    <Row justify=\"center\">\n      <Col xs={24} sm={24} md={20} lg={18}>\n        <Row gutter={[0, 18]} id=\"all-launchpad\">\n          <Col span={24}>\n            <Button\n              onClick={() => pushHistory('/launchpad')}\n              icon={<IonIcon name=\"chevron-back-outline\" />}\n              type=\"text\"\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Space size={16} align=\"center\">\n              <Typography.Title level={2}>Your purchased</Typography.Title>\n              <Typography.Text type=\"success\" className=\"amount-launchpad\">\n                {launchpads.length}\n              </Typography.Text>\n            </Space>\n          </Col>\n          {/* List launchpad */}\n          <Col span={24}>\n            <Row gutter={[12, 12]}>\n              {launchpads.map((launchpadAddress) => (\n                <Col key={launchpadAddress} xs={24} md={12}>\n                  <LaunchpadCard launchpadAddress={launchpadAddress} />\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Col span={24} />\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default YourPurchased\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'model'\nimport { useWalletAddress } from '@sentre/senhub'\n\nexport const useYourPurchased = () => {\n  const cheques = useSelector((state: AppState) => state.cheques)\n  const launchpads = useSelector((state: AppState) => state.launchpads)\n\n  const walletAddress = useWalletAddress()\n\n  const launchpadPurchased = useMemo(() => {\n    const launchpads: Record<string, string> = {}\n    for (const address in cheques) {\n      const { launchpad, authority } = cheques[address]\n      if (walletAddress !== authority.toBase58()) continue\n      if (launchpads[launchpad.toBase58()]) continue\n      launchpads[launchpad.toBase58()] = address\n    }\n    return Object.keys(launchpads)\n  }, [cheques, walletAddress])\n\n  const filteredLaunchpad = launchpadPurchased.sort(\n    (a, b) =>\n      launchpads[b].startTime.toNumber() - launchpads[a].startTime.toNumber(),\n  )\n\n  return filteredLaunchpad\n}\n","import { Row, Col, Spin, Typography, Space } from 'antd'\n\nimport './index.less'\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-screen\" style={{ display: 'block' }}>\n      <Row gutter={[24, 24]}>\n        <Col span={24} style={{ height: 256 }} />\n        <Col span={24}>\n          <Row gutter={[24, 24]} justify=\"center\">\n            <Col>\n              <Space direction=\"vertical\" align=\"center\" size={32}>\n                <Spin size=\"large\" />\n                <Typography.Title level={5} style={{ textAlign: 'center' }}>\n                  Welcome to Balansol. The application is loading...\n                </Typography.Title>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Loading\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react'\nimport { Program, web3 } from '@project-serum/anchor'\nimport { createGlobalState } from 'react-use'\nimport { encodeIxData, accountDiscriminator } from '@sen-use/web3'\n\nimport { notifyError } from 'helper'\n\ntype UseWatcherProps = {\n  program: Program<any>\n  name: keyof UseWatcherProps['program']['account']\n  filter: web3.GetProgramAccountsFilter[]\n  upset: (key: string, value: any) => void\n  init: (bulk: Record<string, any>) => void\n}\n\nconst GLOBAL_WATCHER: Record<string, boolean> = {}\nexport const useWatcherLoading = createGlobalState<Record<string, boolean>>({})\n\nconst Watcher = (props: UseWatcherProps) => {\n  const { program, name, filter, upset, init } = props\n  const [watchId, setWatchId] = useState(0)\n  const [, setLoadingInfo] = useWatcherLoading()\n\n  const { accountClient, connection } = useMemo(() => {\n    const accountClient = program?.account?.[name]\n    const connection = accountClient.provider.connection\n    return { accountClient, connection }\n  }, [name, program?.account])\n\n  const fetchData = useCallback(async () => {\n    if (GLOBAL_WATCHER[name] !== undefined) return\n    try {\n      GLOBAL_WATCHER[name] = true\n      setLoadingInfo({ ...GLOBAL_WATCHER, [name]: true })\n      const accountInfos = await accountClient.all(filter)\n      const bulk: any = {}\n      for (const info of accountInfos) {\n        bulk[info.publicKey.toBase58()] = info.account\n      }\n      await init(bulk)\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      GLOBAL_WATCHER[name] = false\n      setLoadingInfo({ ...GLOBAL_WATCHER, [name]: false })\n    }\n  }, [accountClient, filter, init, name, setLoadingInfo])\n\n  const watchData = useCallback(async () => {\n    if (watchId) return\n    const newWatcherId = connection.onProgramAccountChange(\n      accountClient.programId,\n      async (info) => {\n        const address = info.accountId.toBase58()\n        const buffer = info.accountInfo.data\n        const accountData = program.coder.accounts.decode(name, buffer)\n        upset(address, accountData)\n      },\n      'confirmed',\n      [\n        {\n          memcmp: {\n            offset: 0,\n            bytes: encodeIxData(accountDiscriminator(name)),\n          },\n        },\n        ...filter,\n      ],\n    )\n    setWatchId(newWatcherId)\n  }, [\n    accountClient.programId,\n    connection,\n    filter,\n    name,\n    program.coder.accounts,\n    upset,\n    watchId,\n  ])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  useEffect(() => {\n    watchData()\n    return () => {\n      ;(async () => {\n        if (!watchId) return\n        await connection.removeProgramAccountChangeListener(watchId)\n      })()\n    }\n  }, [connection, watchData, watchId])\n\n  return <Fragment />\n}\n\nexport default Watcher\n","import {\n  Fragment,\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { web3 } from '@project-serum/anchor'\n\nimport Loading from '../loading'\n\nimport { getPools, upsetPool } from 'model/pools.controller'\nimport { AppDispatch } from 'model'\nimport Watcher from './watcher'\n\n// Watch id\nconst NAME = 'pool'\nconst FILTER: web3.GetProgramAccountsFilter[] = []\n\nconst PoolWatcher: FunctionComponent = (props) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const [loading, setLoading] = useState(true)\n\n  // TODO: upset account data\n  const upset = useCallback(\n    (key: string, value: any) =>\n      dispatch(upsetPool({ address: key, data: value })),\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      await dispatch(getPools()).unwrap()\n      setLoading(false)\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of pools',\n      })\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  if (loading) return <Loading />\n  return (\n    <Fragment>\n      <Watcher\n        program={window.balansol.program}\n        name={NAME}\n        filter={FILTER}\n        init={() => {}}\n        upset={upset}\n      />\n      {props.children}\n    </Fragment>\n  )\n}\n\nexport default PoolWatcher\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { LaunchpadData } from '@sentre/launchpad'\n\nimport { account } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type LaunchpadsState = Record<string, LaunchpadData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'launchpads'\nconst initialState: LaunchpadsState = {}\n\n/**\n * Actions\n */\n\nexport const initLaunchpads = createAsyncThunk(\n  `${NAME}/initLaunchpads\n  `,\n  async (bulk: LaunchpadsState) => {\n    return bulk\n  },\n)\n\nexport const upsetLaunchpad = createAsyncThunk<\n  LaunchpadsState,\n  { address: string; data: any },\n  { state: any }\n>(`${NAME}/upsetLaunchpad`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const getLaunchpads = createAsyncThunk<\n  LaunchpadsState,\n  void,\n  { state: any }\n>(`${NAME}/getLaunchpads`, async (_, { getState }) => {\n  const { launchpads } = getState()\n  return launchpads\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(initLaunchpads.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        upsetLaunchpad.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { web3 } from '@project-serum/anchor'\n\nimport Watcher from './watcher'\nimport {\n  initLaunchpads,\n  LaunchpadsState,\n  upsetLaunchpad,\n} from 'model/launchpads.controller'\n\n// TODO: Config\nconst NAME = 'launchpad'\nconst FILTER: web3.GetProgramAccountsFilter[] = []\n\nconst LaunchpadWatcher = () => {\n  const dispatch = useDispatch()\n\n  // TODO: init all account data\n  const init = useCallback(\n    async (launchpads: LaunchpadsState) => {\n      const pools = await window.balansol.program.account.pool.all()\n      const filterLaunchpad: LaunchpadsState = {}\n      for (const key in launchpads) {\n        const poolData = pools.find((pool) =>\n          pool.publicKey.equals(launchpads[key].pool),\n        )\n        if (!poolData) continue\n        filterLaunchpad[key] = launchpads[key]\n      }\n      dispatch(initLaunchpads(filterLaunchpad))\n    },\n    [dispatch],\n  )\n  // TODO: upset account data\n  const upset = useCallback(\n    (key: string, value: any) =>\n      dispatch(upsetLaunchpad({ address: key, data: value })),\n    [dispatch],\n  )\n\n  return (\n    <Watcher\n      program={window.launchpad.program}\n      name={NAME}\n      filter={FILTER}\n      init={init}\n      upset={upset}\n    />\n  )\n}\nexport default LaunchpadWatcher\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ChequeData } from '@sentre/launchpad'\n\nimport { account } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type ChequesState = Record<string, ChequeData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'cheques'\nconst initialState: ChequesState = {}\n\n/**\n * Actions\n */\n\nexport const initCheques = createAsyncThunk(\n  `${NAME}/initCheques\n  `,\n  async (bulk: ChequesState) => {\n    return bulk\n  },\n)\n\nexport const getCheques = createAsyncThunk<ChequesState, void, { state: any }>(\n  `${NAME}/getLaunchpads`,\n  async (_, { getState }) => {\n    const { launchpads } = getState()\n    return launchpads\n  },\n)\n\nexport const upsetCheque = createAsyncThunk<\n  ChequesState,\n  { address: string; data: any },\n  { state: any }\n>(`${NAME}/upsetCheque`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(initCheques.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        upsetCheque.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { web3 } from '@project-serum/anchor'\n\nimport Watcher from './watcher'\nimport { initCheques, upsetCheque } from 'model/cheques.controller'\n\n// TODO: Config\nconst NAME = 'cheque'\nconst FILTER: web3.GetProgramAccountsFilter[] = []\n\nconst LaunchpadWatcher = () => {\n  const dispatch = useDispatch()\n\n  // TODO: init all account data\n  const init = useCallback((data) => dispatch(initCheques(data)), [dispatch])\n  // TODO: upset account data\n  const upset = useCallback(\n    (key: string, value: any) =>\n      dispatch(upsetCheque({ address: key, data: value })),\n    [dispatch],\n  )\n\n  return (\n    <Watcher\n      program={window.launchpad.program}\n      name={NAME}\n      filter={FILTER}\n      init={init}\n      upset={upset}\n    />\n  )\n}\nexport default LaunchpadWatcher\n","import {\n  Fragment,\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\nimport { getAnchorProvider, useWalletAddress, util } from '@sentre/senhub'\nimport Balancer from '@senswap/balancer'\nimport Launchpad from '@sentre/launchpad'\n\nimport PoolWatcher from './pool.watcher'\nimport LaunchpadWatcher from './launchpad.watcher'\nimport ChequesWatcher from './cheques'\n\nimport configs from 'configs'\nimport Loading from 'components/loading'\nimport { useWatcherLoading } from './watcher'\n\nconst {\n  sol: { balancerAddress, launchpadAddress },\n} = configs\n\nexport const AppWatcher: FunctionComponent = (props) => {\n  const [loading, setLoading] = useState(true)\n  const [loadingInfo] = useWatcherLoading()\n\n  const address = useWalletAddress()\n\n  const watchWallet = useCallback(() => {\n    if (!util.isAddress(address)) return\n    // init window balancer\n    const anchorProvider = getAnchorProvider()!\n    window.balansol = new Balancer(anchorProvider, balancerAddress)\n    window.launchpad = new Launchpad(\n      anchorProvider,\n      launchpadAddress,\n      balancerAddress,\n    )\n    setLoading(false)\n  }, [address])\n\n  useEffect(() => {\n    watchWallet()\n  }, [watchWallet])\n\n  if (loading || Object.values(loadingInfo).includes(true)) return <Loading />\n\n  return (\n    <Fragment>\n      <LaunchpadWatcher />\n      <ChequesWatcher />\n      <PoolWatcher>{props.children}</PoolWatcher>\n    </Fragment>\n  )\n}\n","import { useEffect } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { web3 } from '@project-serum/anchor'\nimport { JupiterProvider } from '@jup-ag/react-hook'\nimport {\n  useWalletAddress,\n  useSetBackground,\n  useAppRoute,\n  util,\n} from '@sentre/senhub'\n\nimport { Col, Empty, Row } from 'antd'\nimport Navigation from './navigation'\nimport PoolDetails from './poolDetails'\nimport Swap from './swap'\nimport Pools from './pools'\nimport AllLaunchpad from './launchpad/allLaunchpad'\nimport Launchpad from './launchpad'\nimport InitLaunchPad from './launchpad/initLaunchpad'\nimport LaunchpadDetails from './launchpad/launchpadDetails'\nimport YourPurchased from './launchpad/yourPurchased'\n\nimport configs from 'configs'\nimport { AppWatcher } from 'components/watcher'\nimport BalansolPoolsProvider from 'hooks/useBalansolPools'\nimport BalansolProvider from 'hooks/useSwap'\n\nimport BG_DARK from 'static/images/background-dark.png'\nimport BG_LIGHT from 'static/images/background-light.png'\nimport './index.less'\n\nconst {\n  sol: { connection, balancerAddress },\n} = configs\n\nconst View = () => {\n  const setBackground = useSetBackground()\n  const { extend } = useAppRoute()\n  const walletAddress = useWalletAddress()\n\n  useEffect(() => {\n    setBackground({ light: BG_LIGHT, dark: BG_DARK })\n  }, [setBackground])\n\n  if (!util.isAddress(balancerAddress))\n    return (\n      <Empty\n        description={'Coming soon.'}\n        image={Empty.PRESENTED_IMAGE_SIMPLE}\n      />\n    )\n\n  return (\n    <JupiterProvider\n      connection={connection}\n      cluster={'mainnet-beta'}\n      userPublicKey={new web3.PublicKey(walletAddress)}\n    >\n      <AppWatcher>\n        {/* Balansol provider context */}\n        <BalansolPoolsProvider>\n          <BalansolProvider>\n            <Row gutter={[0, 24]}>\n              <Col span={24}>\n                <Navigation />\n              </Col>\n              <Col span={24} id=\"balansol-body\">\n                <Switch>\n                  <Route path={extend('/details')} component={PoolDetails} />\n                  <Route path={extend('/swap')}>\n                    <Swap />\n                  </Route>\n                  <Route path={extend('/pools')}>\n                    <Pools />\n                  </Route>\n                  <Route path={extend('/launchpad')}>\n                    <Launchpad />\n                  </Route>\n                  <Route path={extend('/launchpad-create')}>\n                    <InitLaunchPad />\n                  </Route>\n                  <Route\n                    path={extend('/launchpad-all')}\n                    component={AllLaunchpad}\n                  />\n                  <Route\n                    path={extend('/launchpad-details')}\n                    component={LaunchpadDetails}\n                  />\n                  <Route\n                    path={extend('/launchpad-your-purchased')}\n                    component={YourPurchased}\n                  />\n                  <Route path={extend('/farms')}>\n                    <Redirect to=\"/app/sen_farming_v2?autoInstall=true\" />\n                  </Route>\n                  <Redirect\n                    from=\"*\"\n                    to={extend('/swap', { absolutePath: true })}\n                  />\n                </Switch>\n              </Col>\n            </Row>\n          </BalansolProvider>\n        </BalansolPoolsProvider>\n      </AppWatcher>\n    </JupiterProvider>\n  )\n}\n\nexport default View\n","import { PublicKey } from '@solana/web3.js'\nimport { BN } from '@project-serum/anchor'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    Buffer.isBuffer(val)\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type State = {\n  counter: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'main'\nconst initialState: State = {\n  counter: 0,\n}\n\n/**\n * Actions\n */\n\nexport const increaseCounter = createAsyncThunk<State, void, { state: any }>(\n  `${NAME}/increaseCounter`,\n  async (_, { getState }) => {\n    const {\n      main: { counter },\n    } = getState()\n    return { counter: counter + 1 }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      increaseCounter.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools } from 'model/devTools'\n\nimport main from 'model/main.controller'\nimport pools from 'model/pools.controller'\nimport swap from 'model/swap.controller'\nimport searchPools from 'model/searchPools.controller'\nimport launchpads from 'model/launchpads.controller'\nimport cheques from 'model/cheques.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    main,\n    pools,\n    swap,\n    searchPools,\n    launchpads,\n    cheques,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport { AntdProvider } from '@sentre/senhub'\n\nimport View from 'view'\n\nimport model from 'model'\nimport configs from 'configs'\n\nimport 'static/styles/light.less'\nimport 'static/styles/dark.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <AntdProvider appId={appId} prefixCls={appId}>\n      <Provider store={model}>\n        <View />\n      </Provider>\n    </AntdProvider>\n  )\n}\n\nexport * from 'static.app'\n"],"names":["Object","defineProperty","exports","value","enumerable","get","_logo","default","_README","_panel","_interopRequireDefault","require","_panel2","_panel3","obj","__esModule","panels","VISIBLE_ROUTES","HOMEPAGE_TABS","label","disabled","net","to","useAppRoute","pathname","useLocation","activeRoute","useMemo","temp","split","length","route","Row","gutter","style","paddingTop","justify","Col","Segmented","className","options","onChange","val","toString","block","Fragment","InputStyle","max","onValue","inputStyle","InputRight","styles","props","onAmount","useCallback","parseFloat","InputNumber","stringMode","width","fontSize","onBlur","e","target","decimalSeparator","formatter","chars","replace","formatterNumber","parser","Number","PoolTabs","QueryParams","PoolStatus","PoolCreatingStep","GENERAL_NORMALIZED_NUMBER","PRECISION","PriceImpact","FilterPools","DATE_FORMAT","LaunchpadSate","InitLaunchpadStep","CATEGORY","defi","gamefi","DAO","multisig","lending","portfolio","liquidity","AMM","privacy","payment","utility","NFT","shared","appId","process","url","development","production","devnet","connection","Connection","rpc","balancerAddress","taxmanAddress","bidMintDefault","askMintDefault","launchpadAddress","testnet","mainnet","generator","origin","version","base","tvl","this","detailTvl","manifest","env","sol","api","notifySuccess","content","txId","window","notify","type","description","onClick","open","util","notifyError","er","console","log","message","priceImpactColor","priceImpact","goodSwap","acceptableSwap","getMintState","mintStates","idx","keys","fileToBase64","file","callBack","index","reader","FileReader","readAsDataURL","onload","async","result","validURL","test","getDataWebsite","socialIcons","t","iconName","websiteName","twitter","facebook","discord","global","medium","socialName","host","URL","hostname","char","toLowerCase","config","Content","title","percent","currentPercent","onChangeValue","tooltipContent","span","flex","Space","size","Typography","textTransform","Tooltip","name","bordered","InputLeft","placeholder","controls","poolAddress","poolData","useSelector","state","pools","currentFee","fee","toNumber","currentTaxFee","taxFee","setFee","useState","setTaxFee","loading","setLoading","authority","toBase58","Button","ghost","updateFee","balansol","BN","err","statusColor","statusContent","align","direction","Badge","status","thawPool","icon","freezePool","FreezeAndThawToken","mints","actions","mintActions","setMintActions","map","mint","mintState","newMintActions","MintActionStates","onClickToken","mintAddress","ellipsis","fontWeight","color","updateActions","JSON","stringify","Tabs","tab","newOwner","setNewOwner","Input","account","transferOwnership","utilsBN","decimalize","num","decimals","Error","n","m","mul","substring","repeat","undecimalize","numBN","integer","fraction","pop","join","getMintInfo","mintIdx","indexOf","web3","findMintIndex","normalizedWeight","calcNormalizedWeight","weights","reserve","reserves","treasury","treasuries","complement","calcOutGivenInSwap","amountIn","balanceOut","balanceIn","weightOut","weightIn","swapFee","numBalanceOut","numBalanceIn","numAmountIn","numSwapFee","ratioBeforeAfterBalance","ratioInOutWeight","calcInGivenOutSwap","amountOut","weightToken","numWeightsIn","BigInt","reduce","pre","curr","calcSpotPriceExactInSwap","amount","poolPairData","decimalIn","decimalOut","Bi","Bo","wi","wo","Ai","f","calcPriceImpactSwap","bidAmount","currentSpotPrice","spotPriceAfterSwap","calcLpForTokensZeroPriceImpact","tokenAmountIns","balanceIns","weightIns","totalSupply","decimalIns","totalBptOut","i","nomalizedWeight","LpPrice","Ao","Math","pow","spotPriceAfterSwapTokenInForExactBPTOut","calcDepositPriceImpact","amountIns","lpOut","impactPrice","numTotalSupply","numBalanceIns","numAmountIns","balanceRatiosWithFee","Array","invariantRatioWithFees","invariantRatio","amountInWithoutFee","nonTaxableAmount","calcBptOutGivenExactTokensIn","toFixed","calcWithdrawPriceImpact","lpAmount","indexTokenOut","balanceOuts","weightOuts","decimalOuts","isZero","tokenAmountOut","tokenAmounts","_","tokenAmount","balance","lpAmountIn","lpTotalSupply","decimal","numBalance","amountOutWithoutFee","taxableAmount","calcTokenOutGivenExactLpIn","lpOutZeroPriceImpact","numLpAmount","calcPriceImpact","p","forEach","elmInfo","s","Token","tokensInfo","setTokensInfo","theme","useTheme","fetchWeights","nextWeights","addressToken","weight","format","isLocked","validateWeight","numWeight","remainingPercent","values","actualWeight","useEffect","wrap","prefix","borderRadius","background","addonAfter","newTokensInfo","amountTokenNotLock","filter","token","firstTime","nextWeight","newWeight","onWeightChange","shape","newWeights","lockWeight","updateWeights","Card","echarts","TitleComponent","GridComponent","PieChart","CanvasRenderer","LegendComponent","buildOptions","data","legend","bottom","textStyle","tooltip","trigger","borderWidth","params","ticket","callback","backgroundColor","extraCssText","series","radius","avoidLabelOverlap","top","show","position","labelLine","symbol","STYLE","light","dark","option","notMerge","lazyUpdate","poolWeights","setPoolWeights","getDecimals","useGetMintDecimals","doughnutChartData","newData","Promise","all","tokenInfo","tokenProvider","level","Spin","tip","spinning","TooltipComponent","BC","xAxis","axisLine","axisTick","yAxis","splitLine","axisLabel","valueFormatter","itemStyle","grid","left","right","SECOND_PER_MILLISECOND","TimeFormat","DateHelper","milliSeconds","Date","valueOf","setMilliSeconds","seconds","date","ymd","moment","YMD","ymdFrom","ymdTo","dates","dateFrom","fromYmd","dateTo","push","addDay","dateFormat","subtractDay","dayAmount","subtract","fromSeconds","add","TransLog","programId","programInfo","signature","blockTime","time","owner","actionType","actionTransfers","programTransfer","ActionInfo","address","preBalance","postBalance","ActionTransfer","source","destination","DEFAULT_LIMIT","Solana","conn","lastSignature","limit","before","getConfirmedSignaturesForAddress2","signatures","confirmedTransactions","promiseTransGroup","offset","skip","signaturesGroup","slice","getParsedConfirmedTransactions","transGroups","transGroup","concat","currentTime","getTime","secondFrom","secondTo","floor","programPublicKey","PublicKey","isStop","confirmedSignatureInfos","fetchSignatures","info","fetchConfirmTransaction","ParsedType","SwapActionType","PoolTransLogService","parseAction","transLog","configs","filterTransLog","solana","transLogs","lastSignatureTmp","smartLimit","confirmedTrans","fetchTransactions","trans","transaction","parseTransLog","meta","postTokenBalances","preTokenBalances","postBalances","preBalances","innerInstructionData","innerInstructions","instructions","instructionData","mapAccount","parseAccountInfo","accountKeys","isParsedInstruction","parseListActionTransfer","undefined","parsed","actionTransfer","action","actionParsed","Transfer","parsedAction","parseActionTransfer","parsedTransfer","lamports","amountTransfer","has","mapAccountInfo","Map","accountIndex","uiTokenAmount","pubkey","set","accountData","String","programDataEncode","swapData","program","coder","instruction","decode","Swap","error","DailyReport","totalTrans","DailyReportService","parserDailyReport","reports","parseDailyReport","mergeDailyReport","dailyReports","transfer","report","key","results","PoolService","constructor","poolTransLogService","dailyReportService","TokenProvider","getPoolData","getUsd","amountBigint","mintInfo","findByAddress","extensions","cgkData","coingeckoId","price","fetchTransLog","timeFrom","timeTo","db","PDB","createInstance","cacheTransLog","getItem","sort","a","b","fistTransLog","lastTransLog","beginTransLogs","collect","setItem","getDailyInfo","mapTimeDailyReport","includes","mapTimeTotal","volume","currentReport","prevDate","totalFee","useOracles","decimalizeMintAmount","undecimalizeMintAmount","useTVL","TVL","setTVL","getPrice","useGetMintPrice","getTVL","totalValueLocked","tokenPrice","reserver","updateTvl","useStat","apy","setApy","dailyInfo","setDailyInfo","fetchVolume","poolStatService","DataLoader","cache","ttl","dateCount","roi","isFinite","useVolume24h","chartData","setChartData","vol24h","today","yesterday","getHours","buildResult","useAccountBalance","accountAddress","walletAddress","useWalletAddress","useWalletBalance","useAccountSelector","accounts","useMintDecimals","DEFAULT_EMPTY_ADDRESS","useAccountBalanceByMintAddress","setAccountAddress","splt","bg","mintLpt","lg","md","xs","tvlBg","Skeleton","active","paragraph","rows","apyBg","myContributeBg","PoolAvatar","Avatar","whiteSpace","maxCount","keyword","setKeyword","search","bodyStyle","padding","suffix","marginRight","hoverable","display","margin","Divider","selectedMint","visible","onClose","mintsSearched","setMintsSearched","Modal","closeIcon","footer","destroyOnClose","centered","onCancel","height","overflow","mintLabel","mintAvatar","setVisible","useWrapAccountBalance","wsol","NATIVE_MINT","totalSolBalance","total","PROPORTIONS","portionValue","onChangeAmount","bigintBalance","proportionActive","activePortion","proportion","proportionVal","bg_default","Radio","newAmountBN","divRound","newAmount","MintInput","onSelect","ratioButton","unit","force","mintSelection","onInput","invalidValue","justifyContent","cursor","useLptSupply","supply","setSupply","getMint","useGetMintData","fetchLptSupply","then","useMintBalance","useAccounts","getMintBalance","wrapSol","utils","r","isWsolAddress","DEFAULT_WSOL","returnedBalance","useWrapAndUnwrapSolIfNeed","createWrapSolTxIfNeed","tx","neededWrappedSol","wSolATA","getAssociatedTokenAddress","creatingATAIx","ATA","wallet","createAssociatedTokenAccountInstruction","createATAIx","wSolIx","fromPubkey","toPubkey","createWrapSolIx","createSyncNativeInstruction","createUnWrapSolTxIfNeed","uwSolIx","createCloseAccountInstruction","createUnWrapSolIx","hideModal","amounts","setAmounts","fill","suggestedAmounts","setSuggestAmounts","disable","setDisable","isAcceptHighPrice","setIsAcceptHighPrice","baseTokenIndex","setBaseTokenIndex","lpOutTotal","setLpOutTotal","setImpactPrice","lpOutDisplay","clonedLp","estimateImpactPriceAndLP","amountBn","checkAmountIns","newAmounts","newSuggestAmounts","mintDecimal","baseBalance","currentBalance","balanceRatio","onApplySuggestion","Checkbox","checked","provider","getAnchorProvider","amountsIn","transactions","wrapSolTx","addLiquidityTx","addLiquidity","txIds","sendAll","signers","lptAmount","onSuccess","calcMintReceiveFullSide","minPltAddress","mintPool","emptyAmounts","lptSupply","lpt_rate","calcMintReceivesRemoveFullSide","initTxCreateMultiTokenAccount","initTokenAccountTxs","createRemoveLiquidityTransaction","unwrapSolTx","withdrawableMax","amountReserve","setAmountReserve","isExceedWithdrawLimitation","lptAmountBN","removeSidedLiquidity","selectedMints","setSelectedMints","setLptAmount","acceptWithdrawLimit","setAcceptWithdrawLimit","supplyInNumber","recommendedMax","maxAmount","isSelectedAll","selected","Tag","border","Info","copied","setCopied","wordBreak","arrowPointAtCenter","text","isMobile","useInfix","Infix","Popover","placement","marginLeft","APP_ROUTE","useAppRouter","history","useHistory","query","URLSearchParams","getQuery","queryId","getAllQuery","queries","pushHistory","path","newQuery","currentQuery","assign","newParams","appRoute","redirect","textAlign","Empty","infix","isOwner","paddingBottom","maxWidth","NAME","setSwapState","createAsyncThunk","newState","createSlice","initialState","bidMint","askMint","askAmount","isReverse","slippageTolerance","reducers","extraReducers","builder","addCase","fulfilled","payload","swap","dispatch","useDispatch","ask_mint","defaultAskMint","unwrap","Context","createContext","activePools","children","setActivePools","filterPools","addr","useActivePools","Provider","useBalansolPools","useContext","mintsSwap","useMintsCanSwap","bid_mint","defaultBidMint","filteredMints","spacing","iconSize","src","JupiterIcon","useMetaRoutes","tokenRoutes","addPoolToRoute","routes","pool","bidMintIdx","askMintIdx","mintRoutes","useMintRoutes","metaRoutes","setMetaRoutes","validRoute","marketBid","marketAsk","computeMetaRoutes","deep","routesFromBidMint","markets","market","nextMint","nextMintMarkets","deepRoutes","deepRoute","nextMintMarket","newRoute","compareMetaRoutes","useDebounce","useBestRouteFromAsk","routeSwapInfo","setRouteSwapInfo","setRoutes","computeRouteInfos","metaRoute","isValidRoute","currentAskAmount","reverse","bidMintInfo","askMintInfo","gt","tokenInAmount","lten","dataForSlippage","newPriceImpact","useAllRoutesFromAsk","getBestRoute","bestRoute","routeA","routeB","bidAmountA","bidAmountB","bestRouteFullInfo","useBestRouteFromBid","bidAmountBN","tokenOutAmount","useAllRouteFromBid","askAmountA","_wallet","publicKey","signTransaction","sendRawTransaction","serializeMessage","signAllTransactions","DEFAULT_JUPITER_PROPS","inputMint","outputMint","slippage","debounceTime","DEFAULT_EMPTY_ROUTE","SwapPlatform","platform","Balansol","platformSwap","setPlatformSwap","routesFromBid","routesFromAsk","limitBN","createRouteTransaction","useSwapBalansol","jupiter","bestRouteInfo","setBestRouteInfo","jupiterProps","setJupiterProps","exchange","useJupiter","composeJupiterProps","composeBestRoute","bestJupiterRoute","marketInfos","inAmount","outAmount","priceImpactPct","wrappedWallet","JupiterWalletWrapper","sentre","routeInfo","onTransaction","confirmTransaction","txid","getTransaction","commitment","outputAddress","dstAddress","Jupiter","useJupiterAggregator","updateRouteFromBid","askAmountBalansol","askAmountJup","updateRouteFromAsk","useSwap","routeMints","routeElm","MintRatio","reversed","spotPrice","actualBid","actualAsk","setReversed","ExtraTypography","extraStyle","priceImpactDisplay","swapLoading","minHeight","setChecked","isDisplayWarning","setIsDisplayWarning","isLoading","setIsLoading","onCloseModal","forceRender","ReviewSwap","errorMessage","memo","SentreIcon","slippageOptions","boxShadow","slippageSelected","overlayClassName","overlayInnerStyle","xl","poolSymbol","setPoolSymbol","poolSymbols","stopPropagation","setTimeout","poolState","validPool","marginBottom","formatCurrency","tvls","setTVLs","poolsFilter","setPoolsFilter","filterPool","searchPools","checkIsYourPool","checkIsDepositedPool","tokenAccountLpt","filterListPools","newPools","isValid","YourPools","DepositedPools","useFilterPools","listPool","poolsSearched","setPoolsSearched","searchInput","newPoolsSearch","listTokenAddress","listPoolsAddress","forceCheck","useSearchedPools","sortedPool","fetchTVL","poolTVLs","axios","fetchServerTVL","newTVLs","Proportion","tokenList","remainingPortion","previousSum","currentValue","marginTop","zIndex","alignItems","onChangeWeight","onChangeLock","onRemoveToken","maxLength","mintSetup","onChangeTokenInfo","id","DEFAULT_SWAP_FEE","DEFAULT_TAX_FEE","DEFAULT_EMPTY_TOKEN","setCurrentStep","listMintSetting","setListMintSetting","indexJustUpdated","setIndexJustUpdated","autoEstimateWeight","totalWeight","lockedMintsAmount","lastUnlockIndex","mintSetting","unlockedMintsAmount","averageWeight","newListMintSetting","parse","sum","setting","mintsConfigs","normalizeWeight","initializePool","taxMan","sendAndConfirm","getPools","getAllPoolData","bulk","getPool","getState","upsetPool","removePool","setTokenPrice","loadingAdd","setLoadingAdd","loadingClose","setLoadingClose","disabledSupply","setDisabledSupply","fetchMarketData","tokensPrice","totalValue","mintValue","closePool","txs","initializeJoin","anchorProvider","confirmCreatePool","inputAmounts","setInputAmounts","isVisibleSuggestion","initInputAmountFromPoolData","initInputAmounts","baseIdx","basePrice","baseNormalizedWeight","appliedNormalizedWeight","onUpdateAmount","COLUMNS_CONFIG","dataIndex","render","onConfirm","poolInfo","setPoolInfo","poolTotalValue","setPoolTotalValue","getPoolInfo","newPoolInfo","mintAmount","mintTotalValue","Table","columns","dataSource","rowClassName","pagination","rowKey","record","scroll","x","Step","Steps","currentStep","setupToken","setPoolAddress","recoverCreatePoolProcess","creatingPoolProcess","current","isInProcess","setIsInProcess","checkUninitializedPool","AllPools","setFilterPool","setSearchInput","searchText","onSearch","Select","xxl","Ipfs","IPFS","useLaunchpadData","launchpadData","launchpads","metadata","setMetadata","projectInfo","methods","launchpad","TimeTag","endTime","startTime","now","duration","countDown","setCountDown","days","asDays","hours","minutes","updateCountDown","interval","setInterval","clearInterval","totalTime","isStarted","Progress","showInfo","strokeWidth","strokeColor","useCheques","cheques","filteredCheques","useParticipants","totalUsers","totalBid","totalAsk","boughtAddress","soldRatio","startReserves","flexFlow","isDetail","stableDecimal","stableMint","fundraisingRatio","category","categoryColor","opacity","coverPhoto","projectName","tag","socials","social","onRedirect","useLaunchpad","calc_new_weight","start_weight","end_weight","ratio_with_precision","diff","useLaunchpadWeights","timeout","setCurrentTime","currentWeights","start_time","end_time","start_weight_mint","startWeights","start_weight_base_mint","end_weight_mint","endWeights","end_weight_base_mint","ratio","useGetPriceInPool","weightA","balanceA","priceB","balanceB","weightB","totalWeights","numWeightA","numWeightB","numBalanceA","useGetBalanceAtTime","getBalanceAtTime","launchpadAddr","totalSoldBid","totalSoldAsk","createAt","sub","useGetLaunchpadWeight","useTokenPrice","mintPrice","setMintPrice","getTokenPrice","getLaunchpadWeights","getMintPrice","stbPrice","balances","Image","aspectRatio","objectFit","preview","useWidth","participants","sm","useFilterLaunchpad","validLaunchpads","a_startTime","valid","upcoming","completed","launchpadState","order","PopupButton","minWidth","pageSize","Panel","Collapse","CONTENT","question","answer","defaultActiveKey","expandIconPosition","header","onChangeSocials","nextData","splice","onRemove","vCs","onChangeVC","formatImg","imgBase64","vCInfo","logo","link","onRemoveLogo","Upload","accept","fileList","originFile","originFileObj","onFileChange","onLinkChange","setStep","setLaunchpadData","useGlobalLaunchpad","whitepaper","github","website","onChangeInfo","nextProjectInfo","projectPhoto","onChangePhoto","objectPosition","configuration","LineChart","defaultValue","durations","lineStyle","lineColor","smooth","normal","startPrice","endPrice","baseMint","stablePrice","setStablePrice","calcPriceInPool","getLaunchpadWeight","stbDecimal","getWeight","priceA","times","starTime","getTimes","prices","startWeight","endWeight","tagRender","onCreateLaunchpad","baseAmount","transactionsInit","baseMintDecimal","bnAmount","bnBaseAmount","opts","skipPreflight","txInitLaunchpad","initializeLaunchpad","deriveBaseMintAddress","txInitPool","txMintJoin","txBaseMintJoin","txUpdateAction","treasurer","deriveTreasurerAddress","txTransfer","txActive","activeLaunchpad","from","digest","useCreateLaunchpad","onChangeProjectInfo","paddingLeft","mode","showArrow","categories","item","DatePicker","suffixIcon","clearIcon","showTime","showSecond","disabledDate","nextSocials","DEFAULT_LAUNCHPAD","createGlobalState","step","processInit","usePoolData","setAmount","setAskAmount","onBuyToken","getMintDecimals","cheque","txPrint","printBaseMint","txBuy","buyLaunchpad","useBuyToken","syncsAskAmount","bidDecimals","estimateResult","currentResult","lastVal","isBaseAmount","TRANS_HISTORY_COLUMN","underline","setPageSize","ownCheques","historyData","avgPrice","chequeAddress","totalPrice","useAVGPrice","assets","stableAmount","claim","borderColor","fetchSupply","tokenSupply","useMintSupply","tabItem","items","claimed","setClaimed","fetchBalance","master","deriveMasterAddress","redeem","launchpadPurchased","useYourPurchased","GLOBAL_WATCHER","useWatcherLoading","upset","init","watchId","setWatchId","setLoadingInfo","accountClient","fetchData","accountInfos","watchData","newWatcherId","onProgramAccountChange","accountId","buffer","accountInfo","memcmp","bytes","encodeIxData","accountDiscriminator","removeProgramAccountChangeListener","FILTER","initLaunchpads","upsetLaunchpad","filterLaunchpad","find","equals","initCheques","upsetCheque","AppWatcher","loadingInfo","watchWallet","Balancer","Launchpad","setBackground","useSetBackground","extend","BG_LIGHT","BG_DARK","cluster","userPublicKey","Switch","Route","component","PoolDetails","AllLaunchpad","LaunchpadDetails","YourPurchased","Redirect","absolutePath","image","prototype","toJSON","increaseCounter","main","counter","configureStore","middleware","getDefaultMiddleware","serializableCheck","devTools","reducer","Page","AntdProvider","prefixCls","store","model"],"sourceRoot":""}